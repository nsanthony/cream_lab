//
// File generated by core/utils/src/rootcint_tmp at Mon Apr 13 13:43:57 2015

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__Minuit.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TMinuit_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TMinuit(void *p = 0);
   static void *newArray_TMinuit(Long_t size, void *p);
   static void delete_TMinuit(void *p);
   static void deleteArray_TMinuit(void *p);
   static void destruct_TMinuit(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TMinuit*)
   {
      ::TMinuit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TMinuit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TMinuit", ::TMinuit::Class_Version(), "include/TMinuit.h", 34,
                  typeid(::TMinuit), DefineBehavior(ptr, ptr),
                  &::TMinuit::Dictionary, isa_proxy, 4,
                  sizeof(::TMinuit) );
      instance.SetNew(&new_TMinuit);
      instance.SetNewArray(&newArray_TMinuit);
      instance.SetDelete(&delete_TMinuit);
      instance.SetDeleteArray(&deleteArray_TMinuit);
      instance.SetDestructor(&destruct_TMinuit);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TMinuit*)
   {
      return GenerateInitInstanceLocal((::TMinuit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TMinuit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TFitter_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TFitter(void *p = 0);
   static void *newArray_TFitter(Long_t size, void *p);
   static void delete_TFitter(void *p);
   static void deleteArray_TFitter(void *p);
   static void destruct_TFitter(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TFitter*)
   {
      ::TFitter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TFitter >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TFitter", ::TFitter::Class_Version(), "include/TFitter.h", 30,
                  typeid(::TFitter), DefineBehavior(ptr, ptr),
                  &::TFitter::Dictionary, isa_proxy, 4,
                  sizeof(::TFitter) );
      instance.SetNew(&new_TFitter);
      instance.SetNewArray(&newArray_TFitter);
      instance.SetDelete(&delete_TFitter);
      instance.SetDeleteArray(&deleteArray_TFitter);
      instance.SetDestructor(&destruct_TFitter);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TFitter*)
   {
      return GenerateInitInstanceLocal((::TFitter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TFitter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TLinearFitter_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TLinearFitter(void *p = 0);
   static void *newArray_TLinearFitter(Long_t size, void *p);
   static void delete_TLinearFitter(void *p);
   static void deleteArray_TLinearFitter(void *p);
   static void destruct_TLinearFitter(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TLinearFitter*)
   {
      ::TLinearFitter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TLinearFitter >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TLinearFitter", ::TLinearFitter::Class_Version(), "include/TLinearFitter.h", 159,
                  typeid(::TLinearFitter), DefineBehavior(ptr, ptr),
                  &::TLinearFitter::Dictionary, isa_proxy, 1,
                  sizeof(::TLinearFitter) );
      instance.SetNew(&new_TLinearFitter);
      instance.SetNewArray(&newArray_TLinearFitter);
      instance.SetDelete(&delete_TLinearFitter);
      instance.SetDeleteArray(&deleteArray_TLinearFitter);
      instance.SetDestructor(&destruct_TLinearFitter);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TLinearFitter*)
   {
      return GenerateInitInstanceLocal((::TLinearFitter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TLinearFitter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TLinearMinimizer_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TLinearMinimizer(void *p = 0);
   static void *newArray_TLinearMinimizer(Long_t size, void *p);
   static void delete_TLinearMinimizer(void *p);
   static void deleteArray_TLinearMinimizer(void *p);
   static void destruct_TLinearMinimizer(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TLinearMinimizer*)
   {
      ::TLinearMinimizer *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TLinearMinimizer >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TLinearMinimizer", ::TLinearMinimizer::Class_Version(), "include/TLinearMinimizer.h", 34,
                  typeid(::TLinearMinimizer), DefineBehavior(ptr, ptr),
                  &::TLinearMinimizer::Dictionary, isa_proxy, 4,
                  sizeof(::TLinearMinimizer) );
      instance.SetNew(&new_TLinearMinimizer);
      instance.SetNewArray(&newArray_TLinearMinimizer);
      instance.SetDelete(&delete_TLinearMinimizer);
      instance.SetDeleteArray(&deleteArray_TLinearMinimizer);
      instance.SetDestructor(&destruct_TLinearMinimizer);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TLinearMinimizer*)
   {
      return GenerateInitInstanceLocal((::TLinearMinimizer*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TLinearMinimizer*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TMinuitMinimizer_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TMinuitMinimizer(void *p = 0);
   static void *newArray_TMinuitMinimizer(Long_t size, void *p);
   static void delete_TMinuitMinimizer(void *p);
   static void deleteArray_TMinuitMinimizer(void *p);
   static void destruct_TMinuitMinimizer(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TMinuitMinimizer*)
   {
      ::TMinuitMinimizer *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TMinuitMinimizer >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TMinuitMinimizer", ::TMinuitMinimizer::Class_Version(), "include/TMinuitMinimizer.h", 51,
                  typeid(::TMinuitMinimizer), DefineBehavior(ptr, ptr),
                  &::TMinuitMinimizer::Dictionary, isa_proxy, 4,
                  sizeof(::TMinuitMinimizer) );
      instance.SetNew(&new_TMinuitMinimizer);
      instance.SetNewArray(&newArray_TMinuitMinimizer);
      instance.SetDelete(&delete_TMinuitMinimizer);
      instance.SetDeleteArray(&deleteArray_TMinuitMinimizer);
      instance.SetDestructor(&destruct_TMinuitMinimizer);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TMinuitMinimizer*)
   {
      return GenerateInitInstanceLocal((::TMinuitMinimizer*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TMinuitMinimizer*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TMinuit::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMinuit::Class_Name()
{
   return "TMinuit";
}

//______________________________________________________________________________
const char *TMinuit::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TMinuit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMinuit::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TMinuit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMinuit::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TMinuit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMinuit::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TMinuit*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TFitter::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TFitter::Class_Name()
{
   return "TFitter";
}

//______________________________________________________________________________
const char *TFitter::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TFitter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TFitter::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TFitter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TFitter::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TFitter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TFitter::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TFitter*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TLinearFitter::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TLinearFitter::Class_Name()
{
   return "TLinearFitter";
}

//______________________________________________________________________________
const char *TLinearFitter::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TLinearFitter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TLinearFitter::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TLinearFitter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TLinearFitter::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TLinearFitter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TLinearFitter::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TLinearFitter*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TLinearMinimizer::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TLinearMinimizer::Class_Name()
{
   return "TLinearMinimizer";
}

//______________________________________________________________________________
const char *TLinearMinimizer::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TLinearMinimizer*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TLinearMinimizer::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TLinearMinimizer*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TLinearMinimizer::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TLinearMinimizer*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TLinearMinimizer::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TLinearMinimizer*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMinuitMinimizer::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMinuitMinimizer::Class_Name()
{
   return "TMinuitMinimizer";
}

//______________________________________________________________________________
const char *TMinuitMinimizer::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TMinuitMinimizer*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMinuitMinimizer::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TMinuitMinimizer*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMinuitMinimizer::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TMinuitMinimizer*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMinuitMinimizer::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TMinuitMinimizer*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TMinuit::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMinuit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TMinuit::Class(),this);
   } else {
      R__b.WriteClassBuffer(TMinuit::Class(),this);
   }
}

//______________________________________________________________________________
void TMinuit::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMinuit.
      TClass *R__cl = ::TMinuit::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fNpfix", &fNpfix);
      R__insp.Inspect(R__cl, R__parent, "fEmpty", &fEmpty);
      R__insp.Inspect(R__cl, R__parent, "fMaxpar", &fMaxpar);
      R__insp.Inspect(R__cl, R__parent, "fMaxint", &fMaxint);
      R__insp.Inspect(R__cl, R__parent, "fNpar", &fNpar);
      R__insp.Inspect(R__cl, R__parent, "fMaxext", &fMaxext);
      R__insp.Inspect(R__cl, R__parent, "fMaxIterations", &fMaxIterations);
      R__insp.Inspect(R__cl, R__parent, "fMaxpar5", &fMaxpar5);
      R__insp.Inspect(R__cl, R__parent, "fMaxcpt", &fMaxcpt);
      R__insp.Inspect(R__cl, R__parent, "fMaxpar2", &fMaxpar2);
      R__insp.Inspect(R__cl, R__parent, "fMaxpar1", &fMaxpar1);
      R__insp.Inspect(R__cl, R__parent, "fAmin", &fAmin);
      R__insp.Inspect(R__cl, R__parent, "fUp", &fUp);
      R__insp.Inspect(R__cl, R__parent, "fEDM", &fEDM);
      R__insp.Inspect(R__cl, R__parent, "fFval3", &fFval3);
      R__insp.Inspect(R__cl, R__parent, "fEpsi", &fEpsi);
      R__insp.Inspect(R__cl, R__parent, "fApsi", &fApsi);
      R__insp.Inspect(R__cl, R__parent, "fDcovar", &fDcovar);
      R__insp.Inspect(R__cl, R__parent, "fEpsmac", &fEpsmac);
      R__insp.Inspect(R__cl, R__parent, "fEpsma2", &fEpsma2);
      R__insp.Inspect(R__cl, R__parent, "fVlimlo", &fVlimlo);
      R__insp.Inspect(R__cl, R__parent, "fVlimhi", &fVlimhi);
      R__insp.Inspect(R__cl, R__parent, "fUndefi", &fUndefi);
      R__insp.Inspect(R__cl, R__parent, "fBigedm", &fBigedm);
      R__insp.Inspect(R__cl, R__parent, "fUpdflt", &fUpdflt);
      R__insp.Inspect(R__cl, R__parent, "fXmidcr", &fXmidcr);
      R__insp.Inspect(R__cl, R__parent, "fYmidcr", &fYmidcr);
      R__insp.Inspect(R__cl, R__parent, "fXdircr", &fXdircr);
      R__insp.Inspect(R__cl, R__parent, "fYdircr", &fYdircr);
      R__insp.Inspect(R__cl, R__parent, "*fU", &fU);
      R__insp.Inspect(R__cl, R__parent, "*fAlim", &fAlim);
      R__insp.Inspect(R__cl, R__parent, "*fBlim", &fBlim);
      R__insp.Inspect(R__cl, R__parent, "*fErp", &fErp);
      R__insp.Inspect(R__cl, R__parent, "*fErn", &fErn);
      R__insp.Inspect(R__cl, R__parent, "*fWerr", &fWerr);
      R__insp.Inspect(R__cl, R__parent, "*fGlobcc", &fGlobcc);
      R__insp.Inspect(R__cl, R__parent, "*fX", &fX);
      R__insp.Inspect(R__cl, R__parent, "*fXt", &fXt);
      R__insp.Inspect(R__cl, R__parent, "*fDirin", &fDirin);
      R__insp.Inspect(R__cl, R__parent, "*fXs", &fXs);
      R__insp.Inspect(R__cl, R__parent, "*fXts", &fXts);
      R__insp.Inspect(R__cl, R__parent, "*fDirins", &fDirins);
      R__insp.Inspect(R__cl, R__parent, "*fGrd", &fGrd);
      R__insp.Inspect(R__cl, R__parent, "*fG2", &fG2);
      R__insp.Inspect(R__cl, R__parent, "*fGstep", &fGstep);
      R__insp.Inspect(R__cl, R__parent, "*fGin", &fGin);
      R__insp.Inspect(R__cl, R__parent, "*fDgrd", &fDgrd);
      R__insp.Inspect(R__cl, R__parent, "*fGrds", &fGrds);
      R__insp.Inspect(R__cl, R__parent, "*fG2s", &fG2s);
      R__insp.Inspect(R__cl, R__parent, "*fGsteps", &fGsteps);
      R__insp.Inspect(R__cl, R__parent, "*fVhmat", &fVhmat);
      R__insp.Inspect(R__cl, R__parent, "*fVthmat", &fVthmat);
      R__insp.Inspect(R__cl, R__parent, "*fP", &fP);
      R__insp.Inspect(R__cl, R__parent, "*fPstar", &fPstar);
      R__insp.Inspect(R__cl, R__parent, "*fPstst", &fPstst);
      R__insp.Inspect(R__cl, R__parent, "*fPbar", &fPbar);
      R__insp.Inspect(R__cl, R__parent, "*fPrho", &fPrho);
      R__insp.Inspect(R__cl, R__parent, "*fWord7", &fWord7);
      R__insp.Inspect(R__cl, R__parent, "*fXpt", &fXpt);
      R__insp.Inspect(R__cl, R__parent, "*fYpt", &fYpt);
      R__insp.Inspect(R__cl, R__parent, "*fCONTgcc", &fCONTgcc);
      R__insp.Inspect(R__cl, R__parent, "*fCONTw", &fCONTw);
      R__insp.Inspect(R__cl, R__parent, "*fFIXPyy", &fFIXPyy);
      R__insp.Inspect(R__cl, R__parent, "*fGRADgf", &fGRADgf);
      R__insp.Inspect(R__cl, R__parent, "*fHESSyy", &fHESSyy);
      R__insp.Inspect(R__cl, R__parent, "*fIMPRdsav", &fIMPRdsav);
      R__insp.Inspect(R__cl, R__parent, "*fIMPRy", &fIMPRy);
      R__insp.Inspect(R__cl, R__parent, "*fMATUvline", &fMATUvline);
      R__insp.Inspect(R__cl, R__parent, "*fMIGRflnu", &fMIGRflnu);
      R__insp.Inspect(R__cl, R__parent, "*fMIGRstep", &fMIGRstep);
      R__insp.Inspect(R__cl, R__parent, "*fMIGRgs", &fMIGRgs);
      R__insp.Inspect(R__cl, R__parent, "*fMIGRvg", &fMIGRvg);
      R__insp.Inspect(R__cl, R__parent, "*fMIGRxxs", &fMIGRxxs);
      R__insp.Inspect(R__cl, R__parent, "*fMNOTxdev", &fMNOTxdev);
      R__insp.Inspect(R__cl, R__parent, "*fMNOTw", &fMNOTw);
      R__insp.Inspect(R__cl, R__parent, "*fMNOTgcc", &fMNOTgcc);
      R__insp.Inspect(R__cl, R__parent, "*fPSDFs", &fPSDFs);
      R__insp.Inspect(R__cl, R__parent, "*fSEEKxmid", &fSEEKxmid);
      R__insp.Inspect(R__cl, R__parent, "*fSEEKxbest", &fSEEKxbest);
      R__insp.Inspect(R__cl, R__parent, "*fSIMPy", &fSIMPy);
      R__insp.Inspect(R__cl, R__parent, "*fVERTq", &fVERTq);
      R__insp.Inspect(R__cl, R__parent, "*fVERTs", &fVERTs);
      R__insp.Inspect(R__cl, R__parent, "*fVERTpp", &fVERTpp);
      R__insp.Inspect(R__cl, R__parent, "*fCOMDplist", &fCOMDplist);
      R__insp.Inspect(R__cl, R__parent, "*fPARSplist", &fPARSplist);
      R__insp.Inspect(R__cl, R__parent, "*fNvarl", &fNvarl);
      R__insp.Inspect(R__cl, R__parent, "*fNiofex", &fNiofex);
      R__insp.Inspect(R__cl, R__parent, "*fNexofi", &fNexofi);
      R__insp.Inspect(R__cl, R__parent, "*fIpfix", &fIpfix);
      R__insp.Inspect(R__cl, R__parent, "fNu", &fNu);
      R__insp.Inspect(R__cl, R__parent, "fIsysrd", &fIsysrd);
      R__insp.Inspect(R__cl, R__parent, "fIsyswr", &fIsyswr);
      R__insp.Inspect(R__cl, R__parent, "fIsyssa", &fIsyssa);
      R__insp.Inspect(R__cl, R__parent, "fNpagwd", &fNpagwd);
      R__insp.Inspect(R__cl, R__parent, "fNpagln", &fNpagln);
      R__insp.Inspect(R__cl, R__parent, "fNewpag", &fNewpag);
      R__insp.Inspect(R__cl, R__parent, "fIstkrd[10]", fIstkrd);
      R__insp.Inspect(R__cl, R__parent, "fNstkrd", &fNstkrd);
      R__insp.Inspect(R__cl, R__parent, "fIstkwr[10]", fIstkwr);
      R__insp.Inspect(R__cl, R__parent, "fNstkwr", &fNstkwr);
      R__insp.Inspect(R__cl, R__parent, "fISW[7]", fISW);
      R__insp.Inspect(R__cl, R__parent, "fIdbg[11]", fIdbg);
      R__insp.Inspect(R__cl, R__parent, "fNblock", &fNblock);
      R__insp.Inspect(R__cl, R__parent, "fIcomnd", &fIcomnd);
      R__insp.Inspect(R__cl, R__parent, "fNfcn", &fNfcn);
      R__insp.Inspect(R__cl, R__parent, "fNfcnmx", &fNfcnmx);
      R__insp.Inspect(R__cl, R__parent, "fNfcnlc", &fNfcnlc);
      R__insp.Inspect(R__cl, R__parent, "fNfcnfr", &fNfcnfr);
      R__insp.Inspect(R__cl, R__parent, "fItaur", &fItaur);
      R__insp.Inspect(R__cl, R__parent, "fIstrat", &fIstrat);
      R__insp.Inspect(R__cl, R__parent, "fNwrmes[2]", fNwrmes);
      R__insp.Inspect(R__cl, R__parent, "fNfcwar[20]", fNfcwar);
      R__insp.Inspect(R__cl, R__parent, "fIcirc[2]", fIcirc);
      R__insp.Inspect(R__cl, R__parent, "fStatus", &fStatus);
      R__insp.Inspect(R__cl, R__parent, "fKe1cr", &fKe1cr);
      R__insp.Inspect(R__cl, R__parent, "fKe2cr", &fKe2cr);
      R__insp.Inspect(R__cl, R__parent, "fLwarn", &fLwarn);
      R__insp.Inspect(R__cl, R__parent, "fLrepor", &fLrepor);
      R__insp.Inspect(R__cl, R__parent, "fLimset", &fLimset);
      R__insp.Inspect(R__cl, R__parent, "fLnolim", &fLnolim);
      R__insp.Inspect(R__cl, R__parent, "fLnewmn", &fLnewmn);
      R__insp.Inspect(R__cl, R__parent, "fLphead", &fLphead);
      R__insp.Inspect(R__cl, R__parent, "fGraphicsMode", &fGraphicsMode);
      R__insp.Inspect(R__cl, R__parent, "*fChpt", &fChpt);
      R__insp.Inspect(R__cl, R__parent, "*fCpnam", &fCpnam);
      R__insp.Inspect(R__cl, R__parent, "fCfrom", &fCfrom);
      fCfrom.ShowMembers(R__insp, strcat(R__parent,"fCfrom.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fCstatu", &fCstatu);
      fCstatu.ShowMembers(R__insp, strcat(R__parent,"fCstatu.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fCtitl", &fCtitl);
      fCtitl.ShowMembers(R__insp, strcat(R__parent,"fCtitl.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fCword", &fCword);
      fCword.ShowMembers(R__insp, strcat(R__parent,"fCword.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fCundef", &fCundef);
      fCundef.ShowMembers(R__insp, strcat(R__parent,"fCundef.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fCvrsn", &fCvrsn);
      fCvrsn.ShowMembers(R__insp, strcat(R__parent,"fCvrsn.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fCovmes[4]", fCovmes);
      R__insp.Inspect(R__cl, R__parent, "fOrigin[100]", fOrigin);
      R__insp.Inspect(R__cl, R__parent, "fWarmes[100]", fWarmes);
      R__insp.Inspect(R__cl, R__parent, "*fObjectFit", &fObjectFit);
      R__insp.Inspect(R__cl, R__parent, "*fPlot", &fPlot);
      R__insp.Inspect(R__cl, R__parent, "*fMethodCall", &fMethodCall);
      R__insp.Inspect(R__cl, R__parent, "fFCN", &fFCN);
      TNamed::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TMinuit(void *p) {
      return  p ? new(p) ::TMinuit : new ::TMinuit;
   }
   static void *newArray_TMinuit(Long_t nElements, void *p) {
      return p ? new(p) ::TMinuit[nElements] : new ::TMinuit[nElements];
   }
   // Wrapper around operator delete
   static void delete_TMinuit(void *p) {
      delete ((::TMinuit*)p);
   }
   static void deleteArray_TMinuit(void *p) {
      delete [] ((::TMinuit*)p);
   }
   static void destruct_TMinuit(void *p) {
      typedef ::TMinuit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMinuit

//______________________________________________________________________________
void TFitter::Streamer(TBuffer &R__b)
{
   // Stream an object of class TFitter.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TFitter::Class(),this);
   } else {
      R__b.WriteClassBuffer(TFitter::Class(),this);
   }
}

//______________________________________________________________________________
void TFitter::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TFitter.
      TClass *R__cl = ::TFitter::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fNlog", &fNlog);
      R__insp.Inspect(R__cl, R__parent, "*fCovar", &fCovar);
      R__insp.Inspect(R__cl, R__parent, "*fSumLog", &fSumLog);
      R__insp.Inspect(R__cl, R__parent, "*fMinuit", &fMinuit);
      TVirtualFitter::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TFitter(void *p) {
      return  p ? new(p) ::TFitter : new ::TFitter;
   }
   static void *newArray_TFitter(Long_t nElements, void *p) {
      return p ? new(p) ::TFitter[nElements] : new ::TFitter[nElements];
   }
   // Wrapper around operator delete
   static void delete_TFitter(void *p) {
      delete ((::TFitter*)p);
   }
   static void deleteArray_TFitter(void *p) {
      delete [] ((::TFitter*)p);
   }
   static void destruct_TFitter(void *p) {
      typedef ::TFitter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TFitter

//______________________________________________________________________________
void TLinearFitter::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TLinearFitter.
      TClass *R__cl = ::TLinearFitter::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fParams", &fParams);
      fParams.ShowMembers(R__insp, strcat(R__parent,"fParams.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fParCovar", &fParCovar);
      fParCovar.ShowMembers(R__insp, strcat(R__parent,"fParCovar.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fTValues", &fTValues);
      fTValues.ShowMembers(R__insp, strcat(R__parent,"fTValues.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fParSign", &fParSign);
      fParSign.ShowMembers(R__insp, strcat(R__parent,"fParSign.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fDesign", &fDesign);
      fDesign.ShowMembers(R__insp, strcat(R__parent,"fDesign.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fDesignTemp", &fDesignTemp);
      fDesignTemp.ShowMembers(R__insp, strcat(R__parent,"fDesignTemp.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fDesignTemp2", &fDesignTemp2);
      fDesignTemp2.ShowMembers(R__insp, strcat(R__parent,"fDesignTemp2.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fDesignTemp3", &fDesignTemp3);
      fDesignTemp3.ShowMembers(R__insp, strcat(R__parent,"fDesignTemp3.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fAtb", &fAtb);
      fAtb.ShowMembers(R__insp, strcat(R__parent,"fAtb.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fAtbTemp", &fAtbTemp);
      fAtbTemp.ShowMembers(R__insp, strcat(R__parent,"fAtbTemp.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fAtbTemp2", &fAtbTemp2);
      fAtbTemp2.ShowMembers(R__insp, strcat(R__parent,"fAtbTemp2.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fAtbTemp3", &fAtbTemp3);
      fAtbTemp3.ShowMembers(R__insp, strcat(R__parent,"fAtbTemp3.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fFunctions", &fFunctions);
      fFunctions.ShowMembers(R__insp, strcat(R__parent,"fFunctions.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fY", &fY);
      fY.ShowMembers(R__insp, strcat(R__parent,"fY.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fY2", &fY2);
      R__insp.Inspect(R__cl, R__parent, "fY2Temp", &fY2Temp);
      R__insp.Inspect(R__cl, R__parent, "fX", &fX);
      fX.ShowMembers(R__insp, strcat(R__parent,"fX.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fE", &fE);
      fE.ShowMembers(R__insp, strcat(R__parent,"fE.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fInputFunction", &fInputFunction);
      R__insp.Inspect(R__cl, R__parent, "fVal[1000]", fVal);
      R__insp.Inspect(R__cl, R__parent, "fNpoints", &fNpoints);
      R__insp.Inspect(R__cl, R__parent, "fNfunctions", &fNfunctions);
      R__insp.Inspect(R__cl, R__parent, "fFormulaSize", &fFormulaSize);
      R__insp.Inspect(R__cl, R__parent, "fNdim", &fNdim);
      R__insp.Inspect(R__cl, R__parent, "fNfixed", &fNfixed);
      R__insp.Inspect(R__cl, R__parent, "fSpecial", &fSpecial);
      R__insp.Inspect(R__cl, R__parent, "*fFormula", &fFormula);
      R__insp.Inspect(R__cl, R__parent, "fIsSet", &fIsSet);
      R__insp.Inspect(R__cl, R__parent, "fStoreData", &fStoreData);
      R__insp.Inspect(R__cl, R__parent, "fChisquare", &fChisquare);
      R__insp.Inspect(R__cl, R__parent, "fH", &fH);
      R__insp.Inspect(R__cl, R__parent, "fRobust", &fRobust);
      R__insp.Inspect(R__cl, R__parent, "fFitsample", &fFitsample);
      fFitsample.ShowMembers(R__insp, strcat(R__parent,"fFitsample.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fFixedParams", &fFixedParams);
      TVirtualFitter::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TLinearFitter(void *p) {
      return  p ? new(p) ::TLinearFitter : new ::TLinearFitter;
   }
   static void *newArray_TLinearFitter(Long_t nElements, void *p) {
      return p ? new(p) ::TLinearFitter[nElements] : new ::TLinearFitter[nElements];
   }
   // Wrapper around operator delete
   static void delete_TLinearFitter(void *p) {
      delete ((::TLinearFitter*)p);
   }
   static void deleteArray_TLinearFitter(void *p) {
      delete [] ((::TLinearFitter*)p);
   }
   static void destruct_TLinearFitter(void *p) {
      typedef ::TLinearFitter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TLinearFitter

//______________________________________________________________________________
void TMinuitMinimizer::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMinuitMinimizer.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TMinuitMinimizer::Class(),this);
   } else {
      R__b.WriteClassBuffer(TMinuitMinimizer::Class(),this);
   }
}

//______________________________________________________________________________
void TMinuitMinimizer::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMinuitMinimizer.
      TClass *R__cl = ::TMinuitMinimizer::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fUsed", &fUsed);
      R__insp.Inspect(R__cl, R__parent, "fMinosRun", &fMinosRun);
      R__insp.Inspect(R__cl, R__parent, "fDim", &fDim);
      R__insp.Inspect(R__cl, R__parent, "fStrategy", &fStrategy);
      R__insp.Inspect(R__cl, R__parent, "fParams", (void*)&fParams);
      ::ROOT::GenericShowMembers("vector<double>", (void*)&fParams, R__insp, strcat(R__parent,"fParams."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fErrors", (void*)&fErrors);
      ::ROOT::GenericShowMembers("vector<double>", (void*)&fErrors, R__insp, strcat(R__parent,"fErrors."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fCovar", (void*)&fCovar);
      ::ROOT::GenericShowMembers("vector<double>", (void*)&fCovar, R__insp, strcat(R__parent,"fCovar."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fType", &fType);
      R__insp.Inspect(R__cl, R__parent, "*fMinuit", &fMinuit);
      ::ROOT::GenericShowMembers("ROOT::Math::Minimizer", ( ::ROOT::Math::Minimizer *) (this ), R__insp, R__parent, false);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TMinuitMinimizer(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TMinuitMinimizer : new ::TMinuitMinimizer;
   }
   static void *newArray_TMinuitMinimizer(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TMinuitMinimizer[nElements] : new ::TMinuitMinimizer[nElements];
   }
   // Wrapper around operator delete
   static void delete_TMinuitMinimizer(void *p) {
      delete ((::TMinuitMinimizer*)p);
   }
   static void deleteArray_TMinuitMinimizer(void *p) {
      delete [] ((::TMinuitMinimizer*)p);
   }
   static void destruct_TMinuitMinimizer(void *p) {
      typedef ::TMinuitMinimizer current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMinuitMinimizer

//______________________________________________________________________________
void TLinearMinimizer::Streamer(TBuffer &R__b)
{
   // Stream an object of class TLinearMinimizer.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TLinearMinimizer::Class(),this);
   } else {
      R__b.WriteClassBuffer(TLinearMinimizer::Class(),this);
   }
}

//______________________________________________________________________________
void TLinearMinimizer::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TLinearMinimizer.
      TClass *R__cl = ::TLinearMinimizer::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fRobust", &fRobust);
      R__insp.Inspect(R__cl, R__parent, "fDim", &fDim);
      R__insp.Inspect(R__cl, R__parent, "fNFree", &fNFree);
      R__insp.Inspect(R__cl, R__parent, "fMinVal", &fMinVal);
      R__insp.Inspect(R__cl, R__parent, "fParams", (void*)&fParams);
      ::ROOT::GenericShowMembers("vector<double>", (void*)&fParams, R__insp, strcat(R__parent,"fParams."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fErrors", (void*)&fErrors);
      ::ROOT::GenericShowMembers("vector<double>", (void*)&fErrors, R__insp, strcat(R__parent,"fErrors."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fCovar", (void*)&fCovar);
      ::ROOT::GenericShowMembers("vector<double>", (void*)&fCovar, R__insp, strcat(R__parent,"fCovar."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fObjFunc", &fObjFunc);
      R__insp.Inspect(R__cl, R__parent, "*fFitter", &fFitter);
      ::ROOT::GenericShowMembers("ROOT::Math::Minimizer", ( ::ROOT::Math::Minimizer *) (this ), R__insp, R__parent, false);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TLinearMinimizer(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TLinearMinimizer : new ::TLinearMinimizer;
   }
   static void *newArray_TLinearMinimizer(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TLinearMinimizer[nElements] : new ::TLinearMinimizer[nElements];
   }
   // Wrapper around operator delete
   static void delete_TLinearMinimizer(void *p) {
      delete ((::TLinearMinimizer*)p);
   }
   static void deleteArray_TLinearMinimizer(void *p) {
      delete [] ((::TLinearMinimizer*)p);
   }
   static void destruct_TLinearMinimizer(void *p) {
      typedef ::TLinearMinimizer current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TLinearMinimizer

namespace ROOT {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "prec_stl/vector", 49,
                  typeid(vector<double>), DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<double>

/********************************************************
* math/minuit/src/G__Minuit.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__Minuit();

extern "C" void G__set_cpp_environmentG__Minuit() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("TFitter.h");
  G__add_compiledheader("TLinearFitter.h");
  G__add_compiledheader("TLinearMinimizer.h");
  G__add_compiledheader("TMinuit.h");
  G__add_compiledheader("TMinuitMinimizer.h");
  G__cpp_reset_tagtableG__Minuit();
}
#include <new>
extern "C" int G__cpp_dllrevG__Minuit() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TMinuit */
static int G__G__Minuit_114_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMinuit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TMinuit[n];
     } else {
       p = new((void*) gvp) TMinuit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TMinuit;
     } else {
       p = new((void*) gvp) TMinuit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MinuitLN_TMinuit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMinuit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TMinuit((Int_t) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TMinuit((Int_t) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MinuitLN_TMinuit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TMinuit*) G__getstructoffset())->BuildArrays((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TMinuit*) G__getstructoffset())->BuildArrays();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TMinuit*) G__getstructoffset())->Command((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) ((TMinuit*) G__getstructoffset())->Contour((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((TMinuit*) G__getstructoffset())->Contour((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((TMinuit*) G__getstructoffset())->Contour((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((TMinuit*) G__getstructoffset())->Contour());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TMinuit*) G__getstructoffset())->DefineParameter((Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuit*) G__getstructoffset())->DeleteArrays();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TMinuit*) G__getstructoffset())->Eval((Int_t) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), (Double_t*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TMinuit*) G__getstructoffset())->FixParameter((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TMinuit*) G__getstructoffset())->GetMethodCall());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TMinuit*) G__getstructoffset())->GetObjectFit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TMinuit*) G__getstructoffset())->GetMaxIterations());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TMinuit*) G__getstructoffset())->GetNumFixedPars());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TMinuit*) G__getstructoffset())->GetNumFreePars());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TMinuit*) G__getstructoffset())->GetNumPars());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TMinuit*) G__getstructoffset())->GetParameter((Int_t) G__int(libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TMinuit*) G__getstructoffset())->GetPlot());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TMinuit*) G__getstructoffset())->GetStatus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TMinuit*) G__getstructoffset())->Migrad());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuit*) G__getstructoffset())->mnamin();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuit*) G__getstructoffset())->mnbins(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3])
, *(Double_t*) G__Doubleref(&libp->para[4]), *(Int_t*) G__Intref(&libp->para[5])
, *(Double_t*) G__Doubleref(&libp->para[6]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuit*) G__getstructoffset())->mncalf((Double_t*) G__int(libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuit*) G__getstructoffset())->mncler();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuit*) G__getstructoffset())->mncntr((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *(Int_t*) G__Intref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuit*) G__getstructoffset())->mncomd((const char*) G__int(libp->para[0]), *(Int_t*) G__Intref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuit*) G__getstructoffset())->mncont((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t*) G__int(libp->para[3])
, (Double_t*) G__int(libp->para[4]), *(Int_t*) G__Intref(&libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuit*) G__getstructoffset())->mncrck(
*((TString*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1])
, *(TString*) libp->para[2].ref, *(Int_t*) G__Intref(&libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, *(Int_t*) G__Intref(&libp->para[6]), *(Int_t*) G__Intref(&libp->para[7])
, (Int_t) G__int(libp->para[8]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuit*) G__getstructoffset())->mncros(*(Double_t*) G__Doubleref(&libp->para[0]), *(Int_t*) G__Intref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuit*) G__getstructoffset())->mncuve();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuit*) G__getstructoffset())->mnderi();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuit*) G__getstructoffset())->mndxdi((Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuit*) G__getstructoffset())->mneig(
(Double_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t*) G__int(libp->para[4]), (Double_t) G__double(libp->para[5])
, *(Int_t*) G__Intref(&libp->para[6]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuit*) G__getstructoffset())->mnemat((Double_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuit*) G__getstructoffset())->mnerrs((Int_t) G__int(libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3])
, *(Double_t*) G__Doubleref(&libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuit*) G__getstructoffset())->mneval((Double_t) G__double(libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, *(Int_t*) G__Intref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuit*) G__getstructoffset())->mnexcm((const char*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), *(Int_t*) G__Intref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuit*) G__getstructoffset())->mnexin((Double_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuit*) G__getstructoffset())->mnfixp((Int_t) G__int(libp->para[0]), *(Int_t*) G__Intref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuit*) G__getstructoffset())->mnfree((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuit*) G__getstructoffset())->mngrad();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuit*) G__getstructoffset())->mnhelp(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TMinuit*) G__getstructoffset())->mnhelp((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TMinuit*) G__getstructoffset())->mnhelp();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuit*) G__getstructoffset())->mnhess();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuit*) G__getstructoffset())->mnhes1();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuit*) G__getstructoffset())->mnimpr();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuit*) G__getstructoffset())->mninex((Double_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuit*) G__getstructoffset())->mninit((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuit*) G__getstructoffset())->mnlims();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuit*) G__getstructoffset())->mnline((Double_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuit*) G__getstructoffset())->mnmatu((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuit*) G__getstructoffset())->mnmigr();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuit*) G__getstructoffset())->mnmnos();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuit*) G__getstructoffset())->mnmnot((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuit*) G__getstructoffset())->mnparm(
(Int_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, *(Int_t*) G__Intref(&libp->para[6]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuit*) G__getstructoffset())->mnpars(*(TString*) libp->para[0].ref, *(Int_t*) G__Intref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuit*) G__getstructoffset())->mnpfit((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t*) G__int(libp->para[3])
, *(Double_t*) G__Doubleref(&libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuit*) G__getstructoffset())->mnpint(*(Double_t*) G__Doubleref(&libp->para[0]), (Int_t) G__int(libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuit*) G__getstructoffset())->mnplot((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TMinuit*) G__getstructoffset())->mnpout(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, *(Double_t*) G__Doubleref(&libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3])
, *(Double_t*) G__Doubleref(&libp->para[4]), *(Double_t*) G__Doubleref(&libp->para[5])
, *(Int_t*) G__Intref(&libp->para[6]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuit*) G__getstructoffset())->mnprin((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuit*) G__getstructoffset())->mnpsdf();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuit*) G__getstructoffset())->mnrazz((Double_t) G__double(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]), *(Int_t*) G__Intref(&libp->para[3])
, *(Int_t*) G__Intref(&libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuit*) G__getstructoffset())->mnrn15(*(Double_t*) G__Doubleref(&libp->para[0]), *(Int_t*) G__Intref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuit*) G__getstructoffset())->mnrset((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuit*) G__getstructoffset())->mnsave();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuit*) G__getstructoffset())->mnscan();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuit*) G__getstructoffset())->mnseek();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuit*) G__getstructoffset())->mnset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuit*) G__getstructoffset())->mnsimp();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuit*) G__getstructoffset())->mnstat(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), *(Int_t*) G__Intref(&libp->para[3])
, *(Int_t*) G__Intref(&libp->para[4]), *(Int_t*) G__Intref(&libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuit*) G__getstructoffset())->mntiny((Double_t) G__double(libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TMinuit*) G__getstructoffset())->mnunpt(*(TString*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuit*) G__getstructoffset())->mnvert((Double_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, *(Int_t*) G__Intref(&libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuit*) G__getstructoffset())->mnwarn((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuit*) G__getstructoffset())->mnwerr();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TMinuit*) G__getstructoffset())->Release((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TMinuit*) G__getstructoffset())->SetErrorDef((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuit*) G__getstructoffset())->SetFCN((void*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuit*) G__getstructoffset())->SetFCN((void (*)(Int_t&, Double_t*, Double_t&f, Double_t*, Int_t)) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TMinuit*) G__getstructoffset())->SetGraphicsMode((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TMinuit*) G__getstructoffset())->SetGraphicsMode();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TMinuit*) G__getstructoffset())->SetMaxIterations((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TMinuit*) G__getstructoffset())->SetMaxIterations();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuit*) G__getstructoffset())->SetObjectFit((TObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((TMinuit*) G__getstructoffset())->SetPrintLevel((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((TMinuit*) G__getstructoffset())->SetPrintLevel());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TMinuit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMinuit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TMinuit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TMinuit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMinuit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMinuit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_97(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMinuit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_114_0_98(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMinuit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMinuit G__TTMinuit;
static int G__G__Minuit_114_0_99(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TMinuit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TMinuit*) (soff+(sizeof(TMinuit)*i)))->~G__TTMinuit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TMinuit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TMinuit*) (soff))->~G__TTMinuit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TFitter */
static int G__G__Minuit_115_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TFitter* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TFitter((Int_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TFitter((Int_t) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TFitter[n];
       } else {
         p = new((void*) gvp) TFitter[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TFitter;
       } else {
         p = new((void*) gvp) TFitter;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MinuitLN_TFitter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_115_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFitter*) G__getstructoffset())->FitChisquare(*(Int_t*) G__Intref(&libp->para[0]), (Double_t*) G__int(libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), (Double_t*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_115_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFitter*) G__getstructoffset())->FitChisquareI(*(Int_t*) G__Intref(&libp->para[0]), (Double_t*) G__int(libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), (Double_t*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_115_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFitter*) G__getstructoffset())->FitLikelihood(*(Int_t*) G__Intref(&libp->para[0]), (Double_t*) G__int(libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), (Double_t*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_115_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFitter*) G__getstructoffset())->FitLikelihoodI(*(Int_t*) G__Intref(&libp->para[0]), (Double_t*) G__int(libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), (Double_t*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_115_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TFitter*) G__getstructoffset())->GetMinuit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_115_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TFitter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_115_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TFitter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_115_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TFitter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_115_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TFitter::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_115_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFitter*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_115_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TFitter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_115_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TFitter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_115_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TFitter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_115_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TFitter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TFitter G__TTFitter;
static int G__G__Minuit_115_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TFitter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TFitter*) (soff+(sizeof(TFitter)*i)))->~G__TTFitter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TFitter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TFitter*) (soff))->~G__TTFitter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TLinearFitter */
static int G__G__Minuit_195_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLinearFitter* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLinearFitter[n];
     } else {
       p = new((void*) gvp) TLinearFitter[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLinearFitter;
     } else {
       p = new((void*) gvp) TLinearFitter;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MinuitLN_TLinearFitter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_195_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLinearFitter* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLinearFitter(
(Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TLinearFitter(
(Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLinearFitter((Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TLinearFitter((Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MinuitLN_TLinearFitter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_195_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLinearFitter* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TLinearFitter((Int_t) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TLinearFitter((Int_t) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MinuitLN_TLinearFitter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_195_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLinearFitter* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLinearFitter((TFormula*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TLinearFitter((TFormula*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLinearFitter((TFormula*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TLinearFitter((TFormula*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MinuitLN_TLinearFitter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_195_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLinearFitter* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TLinearFitter(*(TLinearFitter*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TLinearFitter(*(TLinearFitter*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MinuitLN_TLinearFitter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_195_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLinearFitter& obj = ((TLinearFitter*) G__getstructoffset())->operator=(*(TLinearFitter*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_195_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLinearFitter*) G__getstructoffset())->Add((TLinearFitter*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_195_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((TLinearFitter*) G__getstructoffset())->AddPoint((Double_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((TLinearFitter*) G__getstructoffset())->AddPoint((Double_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_195_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLinearFitter*) G__getstructoffset())->AddTempMatrices();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_195_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      ((TLinearFitter*) G__getstructoffset())->AssignData((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]), (Double_t*) G__int(libp->para[3])
, (Double_t*) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((TLinearFitter*) G__getstructoffset())->AssignData((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]), (Double_t*) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_195_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLinearFitter*) G__getstructoffset())->ClearPoints();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_195_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLinearFitter*) G__getstructoffset())->Chisquare();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_195_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TLinearFitter*) G__getstructoffset())->Eval());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_195_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((TLinearFitter*) G__getstructoffset())->EvalRobust((Double_t) G__double(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((TLinearFitter*) G__getstructoffset())->EvalRobust());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_195_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLinearFitter*) G__getstructoffset())->FixParameter((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_195_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLinearFitter*) G__getstructoffset())->GetAtbVector(*(TVectorD*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_195_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TLinearFitter*) G__getstructoffset())->GetChisquare());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_195_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLinearFitter*) G__getstructoffset())->GetCovarianceMatrix(*(TMatrixD*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_195_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLinearFitter*) G__getstructoffset())->GetDesignMatrix(*(TMatrixD*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_195_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLinearFitter*) G__getstructoffset())->GetErrors(*(TVectorD*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_195_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TLinearFitter*) G__getstructoffset())->GetNpoints());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_195_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLinearFitter*) G__getstructoffset())->GetParameters(*(TVectorD*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_195_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TLinearFitter*) G__getstructoffset())->GetParTValue((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_195_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TLinearFitter*) G__getstructoffset())->GetParSignificance((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_195_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLinearFitter*) G__getstructoffset())->GetFitSample(*(TBits*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_195_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLinearFitter*) G__getstructoffset())->GetY2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_195_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TLinearFitter*) G__getstructoffset())->Merge((TCollection*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_195_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((const TLinearFitter*) G__getstructoffset())->PrintResults((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((const TLinearFitter*) G__getstructoffset())->PrintResults((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_195_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLinearFitter*) G__getstructoffset())->SetBasisFunctions((TObjArray*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_195_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLinearFitter*) G__getstructoffset())->SetDim((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_195_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLinearFitter*) G__getstructoffset())->SetFormula((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_195_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLinearFitter*) G__getstructoffset())->SetFormula((TFormula*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_195_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLinearFitter*) G__getstructoffset())->StoreData((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_195_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TLinearFitter*) G__getstructoffset())->UpdateMatrix());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_195_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TLinearFitter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_195_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLinearFitter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_195_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TLinearFitter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_195_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TLinearFitter::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_195_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLinearFitter*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_195_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLinearFitter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_195_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLinearFitter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_195_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLinearFitter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_195_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLinearFitter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TLinearFitter G__TTLinearFitter;
static int G__G__Minuit_195_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TLinearFitter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TLinearFitter*) (soff+(sizeof(TLinearFitter)*i)))->~G__TTLinearFitter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TLinearFitter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TLinearFitter*) (soff))->~G__TTLinearFitter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TLinearMinimizer */
static int G__G__Minuit_204_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLinearMinimizer* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLinearMinimizer((int) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TLinearMinimizer((int) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TLinearMinimizer[n];
       } else {
         p = new((void*) gvp) TLinearMinimizer[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TLinearMinimizer;
       } else {
         p = new((void*) gvp) TLinearMinimizer;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MinuitLN_TLinearMinimizer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_204_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLinearMinimizer* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TLinearMinimizer((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TLinearMinimizer((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MinuitLN_TLinearMinimizer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_204_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TLinearMinimizer::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_204_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLinearMinimizer::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_204_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TLinearMinimizer::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_204_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TLinearMinimizer::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_204_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TLinearMinimizer*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_204_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLinearMinimizer*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_204_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLinearMinimizer*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_204_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLinearMinimizer*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_204_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLinearMinimizer::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_204_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLinearMinimizer::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_204_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLinearMinimizer::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_204_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLinearMinimizer::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TLinearMinimizer G__TTLinearMinimizer;
static int G__G__Minuit_204_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TLinearMinimizer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TLinearMinimizer*) (soff+(sizeof(TLinearMinimizer)*i)))->~G__TTLinearMinimizer();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TLinearMinimizer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TLinearMinimizer*) (soff))->~G__TTLinearMinimizer();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMinuitMinimizer */
static int G__G__Minuit_212_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMinuitMinimizer* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TMinuitMinimizer((ROOT::Minuit::EMinimizerType) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TMinuitMinimizer((ROOT::Minuit::EMinimizerType) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TMinuitMinimizer[n];
       } else {
         p = new((void*) gvp) TMinuitMinimizer[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TMinuitMinimizer;
       } else {
         p = new((void*) gvp) TMinuitMinimizer;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MinuitLN_TMinuitMinimizer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_212_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMinuitMinimizer* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TMinuitMinimizer((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TMinuitMinimizer((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MinuitLN_TMinuitMinimizer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_212_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TMinuitMinimizer::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_212_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMinuitMinimizer::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_212_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TMinuitMinimizer::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_212_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TMinuitMinimizer::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_212_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TMinuitMinimizer*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_212_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuitMinimizer*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_212_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuitMinimizer*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_212_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMinuitMinimizer*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_212_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMinuitMinimizer::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_212_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMinuitMinimizer::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_212_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMinuitMinimizer::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_212_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMinuitMinimizer::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMinuitMinimizer G__TTMinuitMinimizer;
static int G__G__Minuit_212_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TMinuitMinimizer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TMinuitMinimizer*) (soff+(sizeof(TMinuitMinimizer)*i)))->~G__TTMinuitMinimizer();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TMinuitMinimizer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TMinuitMinimizer*) (soff))->~G__TTMinuitMinimizer();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TMinuit */

/* TFitter */

/* TLinearFitter */

/* TLinearMinimizer */

/* TMinuitMinimizer */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__Minuit {
 public:
  G__Sizep2memfuncG__Minuit(): p(&G__Sizep2memfuncG__Minuit::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__Minuit::*p)();
};

size_t G__get_sizep2memfuncG__Minuit()
{
  G__Sizep2memfuncG__Minuit a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__Minuit() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MinuitLN_TMinuit))) {
     TMinuit *G__Lderived;
     G__Lderived=(TMinuit*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MinuitLN_TMinuit),G__get_linked_tagnum(&G__G__MinuitLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MinuitLN_TMinuit),G__get_linked_tagnum(&G__G__MinuitLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MinuitLN_TFitter))) {
     TFitter *G__Lderived;
     G__Lderived=(TFitter*)0x1000;
     {
       TVirtualFitter *G__Lpbase=(TVirtualFitter*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MinuitLN_TFitter),G__get_linked_tagnum(&G__G__MinuitLN_TVirtualFitter),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MinuitLN_TFitter),G__get_linked_tagnum(&G__G__MinuitLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MinuitLN_TFitter),G__get_linked_tagnum(&G__G__MinuitLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MinuitLN_TLinearFitter))) {
     TLinearFitter *G__Lderived;
     G__Lderived=(TLinearFitter*)0x1000;
     {
       TVirtualFitter *G__Lpbase=(TVirtualFitter*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MinuitLN_TLinearFitter),G__get_linked_tagnum(&G__G__MinuitLN_TVirtualFitter),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MinuitLN_TLinearFitter),G__get_linked_tagnum(&G__G__MinuitLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MinuitLN_TLinearFitter),G__get_linked_tagnum(&G__G__MinuitLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MinuitLN_TLinearMinimizer))) {
     TLinearMinimizer *G__Lderived;
     G__Lderived=(TLinearMinimizer*)0x1000;
     {
       ROOT::Math::Minimizer *G__Lpbase=(ROOT::Math::Minimizer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MinuitLN_TLinearMinimizer),G__get_linked_tagnum(&G__G__MinuitLN_ROOTcLcLMathcLcLMinimizer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MinuitLN_TMinuitMinimizer))) {
     TMinuitMinimizer *G__Lderived;
     G__Lderived=(TMinuitMinimizer*)0x1000;
     {
       ROOT::Math::Minimizer *G__Lpbase=(ROOT::Math::Minimizer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MinuitLN_TMinuitMinimizer),G__get_linked_tagnum(&G__G__MinuitLN_ROOTcLcLMathcLcLMinimizer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__Minuit() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("vector<TSchemaHelper>",117,G__get_linked_tagnum(&G__G__MinuitLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__MinuitLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__MinuitLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__MinuitLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__MinuitLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__MinuitLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("void (*)(Int_t&, Double_t*, Double_t&f, Double_t*, Int_t)",49,-1,0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__G__MinuitLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__G__MinuitLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__G__MinuitLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__G__MinuitLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorD",117,G__get_linked_tagnum(&G__G__MinuitLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Double_t>",117,G__get_linked_tagnum(&G__G__MinuitLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixD",117,G__get_linked_tagnum(&G__G__MinuitLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Double_t>",117,G__get_linked_tagnum(&G__G__MinuitLN_TMatrixTRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Double_t>",117,G__get_linked_tagnum(&G__G__MinuitLN_TMatrixTColumn_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Double_t>",117,G__get_linked_tagnum(&G__G__MinuitLN_TMatrixTDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Double_t>",117,G__get_linked_tagnum(&G__G__MinuitLN_TMatrixTFlat_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Double_t>",117,G__get_linked_tagnum(&G__G__MinuitLN_TMatrixTSub_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Double_t>",117,G__get_linked_tagnum(&G__G__MinuitLN_TMatrixTSparseRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Double_t>",117,G__get_linked_tagnum(&G__G__MinuitLN_TMatrixTSparseDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Double_t>",117,G__get_linked_tagnum(&G__G__MinuitLN_TMatrixTRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Double_t>",117,G__get_linked_tagnum(&G__G__MinuitLN_TMatrixTColumnlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Double_t>",117,G__get_linked_tagnum(&G__G__MinuitLN_TMatrixTDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Double_t>",117,G__get_linked_tagnum(&G__G__MinuitLN_TMatrixTFlatlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Double_t>",117,G__get_linked_tagnum(&G__G__MinuitLN_TMatrixTSublEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Double_t>",117,G__get_linked_tagnum(&G__G__MinuitLN_TMatrixTSparseRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Double_t>",117,G__get_linked_tagnum(&G__G__MinuitLN_TMatrixTSparseDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Double_t>",117,G__get_linked_tagnum(&G__G__MinuitLN_TElementActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Double_t>",117,G__get_linked_tagnum(&G__G__MinuitLN_TElementPosActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSym<Double_t>",117,G__get_linked_tagnum(&G__G__MinuitLN_TMatrixTSymlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparse<Double_t>",117,G__get_linked_tagnum(&G__G__MinuitLN_TMatrixTSparselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__MinuitLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__G__MinuitLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__G__MinuitLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__G__MinuitLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<double>",117,G__get_linked_tagnum(&G__G__MinuitLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__MinuitLN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__MinuitLN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__MinuitLN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__MinuitLN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TMinuit */
static void G__setup_memvarTMinuit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MinuitLN_TMinuit));
   { TMinuit *p; p=(TMinuit*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__MinuitLN_TMinuitcLcLdA),-1,-2,1,"kMAXWARN=100",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNpfix)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNpfix=",0,"Number of fixed parameters");
   G__memvar_setup((void*)((long)(&p->fEmpty)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fEmpty=",0,"Initialization flag (1 = Minuit initialized)");
   G__memvar_setup((void*)((long)(&p->fMaxpar)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fMaxpar=",0,"Maximum number of parameters");
   G__memvar_setup((void*)((long)(&p->fMaxint)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fMaxint=",0,"Maximum number of internal parameters");
   G__memvar_setup((void*)((long)(&p->fNpar)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNpar=",0,"Number of free parameters (total number of pars = fNpar + fNfix)");
   G__memvar_setup((void*)((long)(&p->fMaxext)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fMaxext=",0,"Maximum number of external parameters");
   G__memvar_setup((void*)((long)(&p->fMaxIterations)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fMaxIterations=",0,"Maximum number of iterations");
   G__memvar_setup((void*)((long)(&p->fMaxpar5)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fMaxpar5=",0,"fMaxpar*(fMaxpar+1)/2");
   G__memvar_setup((void*)((long)(&p->fMaxcpt)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fMaxcpt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fMaxpar2)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fMaxpar2=",0,"fMaxpar*fMaxpar");
   G__memvar_setup((void*)((long)(&p->fMaxpar1)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fMaxpar1=",0,"fMaxpar*(fMaxpar+1)");
   G__memvar_setup((void*)((long)(&p->fAmin)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fAmin=",0,"Minimum value found for FCN");
   G__memvar_setup((void*)((long)(&p->fUp)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fUp=",0,"FCN+-UP defines errors (for chisquare fits UP=1)");
   G__memvar_setup((void*)((long)(&p->fEDM)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fEDM=",0,"Estimated vertical distance to the minimum");
   G__memvar_setup((void*)((long)(&p->fFval3)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fFval3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fEpsi)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fEpsi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fApsi)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fApsi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fDcovar)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fDcovar=",0,"Relative change in covariance matrix");
   G__memvar_setup((void*)((long)(&p->fEpsmac)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fEpsmac=",0,"machine precision for floating points:");
   G__memvar_setup((void*)((long)(&p->fEpsma2)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fEpsma2=",0,"sqrt(fEpsmac)");
   G__memvar_setup((void*)((long)(&p->fVlimlo)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fVlimlo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fVlimhi)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fVlimhi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fUndefi)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fUndefi=",0,"Undefined number = -54321");
   G__memvar_setup((void*)((long)(&p->fBigedm)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fBigedm=",0,"Big EDM = 123456");
   G__memvar_setup((void*)((long)(&p->fUpdflt)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fUpdflt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fXmidcr)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fXmidcr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fYmidcr)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fYmidcr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fXdircr)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fXdircr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fYdircr)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fYdircr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fU)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fU=",0,"[fMaxpar2] External (visible to user in FCN) value of parameters");
   G__memvar_setup((void*)((long)(&p->fAlim)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fAlim=",0,"[fMaxpar2] Lower limits for parameters. If zero no limits");
   G__memvar_setup((void*)((long)(&p->fBlim)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fBlim=",0,"[fMaxpar2] Upper limits for parameters");
   G__memvar_setup((void*)((long)(&p->fErp)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fErp=",0,"[fMaxpar] Positive Minos errors if calculated");
   G__memvar_setup((void*)((long)(&p->fErn)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fErn=",0,"[fMaxpar] Negative Minos errors if calculated");
   G__memvar_setup((void*)((long)(&p->fWerr)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fWerr=",0,"[fMaxpar] External parameters error (standard deviation, defined by UP)");
   G__memvar_setup((void*)((long)(&p->fGlobcc)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fGlobcc=",0,"[fMaxpar] Global Correlation Coefficients");
   G__memvar_setup((void*)((long)(&p->fX)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fX=",0,"[fMaxpar] Internal parameters values");
   G__memvar_setup((void*)((long)(&p->fXt)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fXt=",0,"[fMaxpar] Internal parameters values X saved as Xt");
   G__memvar_setup((void*)((long)(&p->fDirin)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fDirin=",0,"[fMaxpar] (Internal) step sizes for current step");
   G__memvar_setup((void*)((long)(&p->fXs)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fXs=",0,"[fMaxpar] Internal parameters values saved for fixed params");
   G__memvar_setup((void*)((long)(&p->fXts)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fXts=",0,"[fMaxpar] Internal parameters values X saved as Xt for fixed params");
   G__memvar_setup((void*)((long)(&p->fDirins)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fDirins=",0,"[fMaxpar] (Internal) step sizes for current step for fixed params");
   G__memvar_setup((void*)((long)(&p->fGrd)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fGrd=",0,"[fMaxpar] First derivatives");
   G__memvar_setup((void*)((long)(&p->fG2)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fG2=",0,"[fMaxpar] ");
   G__memvar_setup((void*)((long)(&p->fGstep)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fGstep=",0,"[fMaxpar] Step sizes");
   G__memvar_setup((void*)((long)(&p->fGin)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fGin=",0,"[fMaxpar2] ");
   G__memvar_setup((void*)((long)(&p->fDgrd)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fDgrd=",0,"[fMaxpar] Uncertainties");
   G__memvar_setup((void*)((long)(&p->fGrds)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fGrds=",0,"[fMaxpar] ");
   G__memvar_setup((void*)((long)(&p->fG2s)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fG2s=",0,"[fMaxpar] ");
   G__memvar_setup((void*)((long)(&p->fGsteps)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fGsteps=",0,"[fMaxpar] ");
   G__memvar_setup((void*)((long)(&p->fVhmat)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fVhmat=",0,"[fMaxpar5] (Internal) error matrix stored as Half MATrix, since it is symmetric");
   G__memvar_setup((void*)((long)(&p->fVthmat)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fVthmat=",0,"[fMaxpar5] VHMAT is sometimes saved in VTHMAT, especially in MNMNOT");
   G__memvar_setup((void*)((long)(&p->fP)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fP=",0,"[fMaxpar1] ");
   G__memvar_setup((void*)((long)(&p->fPstar)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fPstar=",0,"[fMaxpar2] ");
   G__memvar_setup((void*)((long)(&p->fPstst)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fPstst=",0,"[fMaxpar] ");
   G__memvar_setup((void*)((long)(&p->fPbar)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fPbar=",0,"[fMaxpar] ");
   G__memvar_setup((void*)((long)(&p->fPrho)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fPrho=",0,"[fMaxpar] Minimum point of parabola");
   G__memvar_setup((void*)((long)(&p->fWord7)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fWord7=",0,"[fMaxpar] ");
   G__memvar_setup((void*)((long)(&p->fXpt)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fXpt=",0,"[fMaxcpt] X array of points for contours");
   G__memvar_setup((void*)((long)(&p->fYpt)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fYpt=",0,"[fMaxcpt] Y array of points for contours");
   G__memvar_setup((void*)((long)(&p->fCONTgcc)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fCONTgcc=",0,"[fMaxpar] array used in mncont");
   G__memvar_setup((void*)((long)(&p->fCONTw)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fCONTw=",0,"[fMaxpar] array used in mncont");
   G__memvar_setup((void*)((long)(&p->fFIXPyy)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fFIXPyy=",0,"[fMaxpar] array used in mnfixp");
   G__memvar_setup((void*)((long)(&p->fGRADgf)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fGRADgf=",0,"[fMaxpar] array used in mngrad");
   G__memvar_setup((void*)((long)(&p->fHESSyy)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fHESSyy=",0,"[fMaxpar] array used in mnhess");
   G__memvar_setup((void*)((long)(&p->fIMPRdsav)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fIMPRdsav=",0,"[fMaxpar] array used in mnimpr");
   G__memvar_setup((void*)((long)(&p->fIMPRy)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fIMPRy=",0,"[fMaxpar] array used in mnimpr");
   G__memvar_setup((void*)((long)(&p->fMATUvline)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fMATUvline=",0,"[fMaxpar] array used in mnmatu");
   G__memvar_setup((void*)((long)(&p->fMIGRflnu)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fMIGRflnu=",0,"[fMaxpar] array used in mnmigr");
   G__memvar_setup((void*)((long)(&p->fMIGRstep)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fMIGRstep=",0,"[fMaxpar] array used in mnmigr");
   G__memvar_setup((void*)((long)(&p->fMIGRgs)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fMIGRgs=",0,"[fMaxpar] array used in mnmigr");
   G__memvar_setup((void*)((long)(&p->fMIGRvg)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fMIGRvg=",0,"[fMaxpar] array used in mnmigr");
   G__memvar_setup((void*)((long)(&p->fMIGRxxs)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fMIGRxxs=",0,"[fMaxpar] array used in mnmigr");
   G__memvar_setup((void*)((long)(&p->fMNOTxdev)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fMNOTxdev=",0,"[fMaxpar] array used in mnmnot");
   G__memvar_setup((void*)((long)(&p->fMNOTw)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fMNOTw=",0,"[fMaxpar] array used in mnmnot");
   G__memvar_setup((void*)((long)(&p->fMNOTgcc)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fMNOTgcc=",0,"[fMaxpar] array used in mnmnot");
   G__memvar_setup((void*)((long)(&p->fPSDFs)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fPSDFs=",0,"[fMaxpar] array used in mnpsdf");
   G__memvar_setup((void*)((long)(&p->fSEEKxmid)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fSEEKxmid=",0,"[fMaxpar] array used in mnseek");
   G__memvar_setup((void*)((long)(&p->fSEEKxbest)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fSEEKxbest=",0,"[fMaxpar] array used in mnseek");
   G__memvar_setup((void*)((long)(&p->fSIMPy)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fSIMPy=",0,"[fMaxpar] array used in mnsimp");
   G__memvar_setup((void*)((long)(&p->fVERTq)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fVERTq=",0,"[fMaxpar] array used in mnvert");
   G__memvar_setup((void*)((long)(&p->fVERTs)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fVERTs=",0,"[fMaxpar] array used in mnvert");
   G__memvar_setup((void*)((long)(&p->fVERTpp)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fVERTpp=",0,"[fMaxpar] array used in mnvert");
   G__memvar_setup((void*)((long)(&p->fCOMDplist)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fCOMDplist=",0,"[fMaxpar] array used in mncomd");
   G__memvar_setup((void*)((long)(&p->fPARSplist)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fPARSplist=",0,"[fMaxpar] array used in mnpars");
   G__memvar_setup((void*)((long)(&p->fNvarl)-(long)(p)),73,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNvarl=",0,"[fMaxpar2] parameters flag (-1=undefined, 0=constant..)");
   G__memvar_setup((void*)((long)(&p->fNiofex)-(long)(p)),73,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNiofex=",0,"[fMaxpar2] Internal parameters number, or zero if not currently variable");
   G__memvar_setup((void*)((long)(&p->fNexofi)-(long)(p)),73,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNexofi=",0,"[fMaxpar] External parameters number for currently variable parameters");
   G__memvar_setup((void*)((long)(&p->fIpfix)-(long)(p)),73,0,0,-1,G__defined_typename("Int_t"),-1,1,"fIpfix=",0,"[fMaxpar] List of fixed parameters");
   G__memvar_setup((void*)((long)(&p->fNu)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNu=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fIsysrd)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fIsysrd=",0,"standardInput unit");
   G__memvar_setup((void*)((long)(&p->fIsyswr)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fIsyswr=",0,"standard output unit");
   G__memvar_setup((void*)((long)(&p->fIsyssa)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fIsyssa=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNpagwd)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNpagwd=",0,"Page width");
   G__memvar_setup((void*)((long)(&p->fNpagln)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNpagln=",0,"Number of lines per page");
   G__memvar_setup((void*)((long)(&p->fNewpag)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNewpag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fIstkrd)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fIstkrd[10]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNstkrd)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNstkrd=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fIstkwr)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fIstkwr[10]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNstkwr)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNstkwr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fISW)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fISW[7]=",0,"Array of switches");
   G__memvar_setup((void*)((long)(&p->fIdbg)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fIdbg[11]=",0,"Array of internal debug switches");
   G__memvar_setup((void*)((long)(&p->fNblock)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNblock=",0,"Number of Minuit data blocks");
   G__memvar_setup((void*)((long)(&p->fIcomnd)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fIcomnd=",0,"Number of commands");
   G__memvar_setup((void*)((long)(&p->fNfcn)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNfcn=",0,"Number of calls to FCN");
   G__memvar_setup((void*)((long)(&p->fNfcnmx)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNfcnmx=",0,"Maximum number of calls to FCN");
   G__memvar_setup((void*)((long)(&p->fNfcnlc)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNfcnlc=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNfcnfr)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNfcnfr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fItaur)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fItaur=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fIstrat)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fIstrat=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNwrmes)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNwrmes[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNfcwar)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNfcwar[20]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fIcirc)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fIcirc[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fStatus)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fStatus=",0,"Status flag for the last called Minuit function");
   G__memvar_setup((void*)((long)(&p->fKe1cr)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fKe1cr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fKe2cr)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fKe2cr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fLwarn)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fLwarn=",0,"true if warning messges are to be put out (default=true)");
   G__memvar_setup((void*)((long)(&p->fLrepor)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fLrepor=",0,"true if exceptional conditions are put out (default=false)");
   G__memvar_setup((void*)((long)(&p->fLimset)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fLimset=",0,"true if a parameter is up against limits (for MINOS)");
   G__memvar_setup((void*)((long)(&p->fLnolim)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fLnolim=",0,"true if there are no limits on any parameters (not yet used)");
   G__memvar_setup((void*)((long)(&p->fLnewmn)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fLnewmn=",0,"true if the previous process has unexpectedly improved FCN");
   G__memvar_setup((void*)((long)(&p->fLphead)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fLphead=",0,"true if a heading should be put out for the next parameter definition");
   G__memvar_setup((void*)((long)(&p->fGraphicsMode)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fGraphicsMode=",0,"true if graphics mode on (default)");
   G__memvar_setup((void*)((long)(&p->fChpt)-(long)(p)),67,0,0,-1,-1,-1,1,"fChpt=",0,"!Character to be plotted at the X,Y contour positions");
   G__memvar_setup((void*)((long)(&p->fCpnam)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TString),-1,-1,1,"fCpnam=",0,"[fMaxpar2] Array of parameters names");
   G__memvar_setup((void*)((long)(&p->fCfrom)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TString),-1,-1,1,"fCfrom=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fCstatu)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TString),-1,-1,1,"fCstatu=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fCtitl)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TString),-1,-1,1,"fCtitl=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fCword)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TString),-1,-1,1,"fCword=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fCundef)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TString),-1,-1,1,"fCundef=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fCvrsn)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TString),-1,-1,1,"fCvrsn=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fCovmes)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TString),-1,-1,1,"fCovmes[4]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fOrigin)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TString),-1,-1,1,"fOrigin[100]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fWarmes)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TString),-1,-1,1,"fWarmes[100]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fObjectFit)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TObject),-1,-1,1,"fObjectFit=",0,"Pointer to object being fitted");
   G__memvar_setup((void*)((long)(&p->fPlot)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TObject),-1,-1,1,"fPlot=",0,"Pointer to TGraph object created by mncont");
   G__memvar_setup((void*)((long)(&p->fMethodCall)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TMethodCall),-1,-1,1,"fMethodCall=",0,"Pointer to MethodCall in case of interpreted function");
   G__memvar_setup((void*)((long)(&p->fFCN)-(long)(p)),49,0,0,-1,G__defined_typename("void (*)(Int_t&npar, Double_t*gin, Double_t&f, Double_t*u, Int_t flag)"),-1,1,"fFCN=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TFitter */
static void G__setup_memvarTFitter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MinuitLN_TFitter));
   { TFitter *p; p=(TFitter*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNlog=",0,"Number of elements in fSunLog");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCovar=",0,"Covariance matrix");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSumLog=",0,"Sum of logs (array of fNlog elements)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TMinuit),-1,-1,4,"fMinuit=",0,"pointer to the TMinuit object");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TLinearFitter */
static void G__setup_memvarTLinearFitter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MinuitLN_TLinearFitter));
   { TLinearFitter *p; p=(TLinearFitter*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,4,"fParams=",0,"vector of parameters");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TMatrixTSymlEdoublegR),G__defined_typename("TMatrixDSym"),-1,4,"fParCovar=",0,"matrix of parameters' covariances");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,4,"fTValues=",0,"T-Values of parameters");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,4,"fParSign=",0,"significance levels of parameters");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TMatrixTSymlEdoublegR),G__defined_typename("TMatrixDSym"),-1,4,"fDesign=",0,"matrix AtA");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TMatrixTSymlEdoublegR),G__defined_typename("TMatrixDSym"),-1,4,"fDesignTemp=",0,"! temporary matrix, used for num.stability");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TMatrixTSymlEdoublegR),G__defined_typename("TMatrixDSym"),-1,4,"fDesignTemp2=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TMatrixTSymlEdoublegR),G__defined_typename("TMatrixDSym"),-1,4,"fDesignTemp3=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,4,"fAtb=",0,"vector Atb");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,4,"fAtbTemp=",0,"! temporary vector, used for num.stability");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,4,"fAtbTemp2=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,4,"fAtbTemp3=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TObjArray),-1,-1,4,"fFunctions=",0,"array of basis functions");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,4,"fY=",0,"the values being fit");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fY2=",0,"sum of square of y, used for chisquare");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fY2Temp=",0,"! temporary variable used for num.stability");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,4,"fX=",0,"values of x");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,4,"fE=",0,"the errors if they are known");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TFormula),-1,-1,4,"fInputFunction=",0,"the function being fit");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fVal[1000]=",0,"! temporary");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNpoints=",0,"number of points");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNfunctions=",0,"number of basis functions");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fFormulaSize=",0,"length of the formula");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNdim=",0,"number of dimensions in the formula");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNfixed=",0,"number of fixed parameters");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fSpecial=",0,"=100+n if fitting a polynomial of deg.n");
   G__memvar_setup((void*)0,67,0,0,-1,-1,-1,4,"fFormula=",0,"the formula");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsSet=",0,"Has the formula been set?");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fStoreData=",0,"Is the data stored?");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fChisquare=",0,"Chisquare of the fit");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fH=",0,"number of good points in robust fit");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fRobust=",0,"true when performing a robust fit");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TBits),-1,-1,4,"fFitsample=",0,"indices of points, used in the robust fit");
   G__memvar_setup((void*)0,71,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fFixedParams=",0,"[fNfixed] array of fixed/released params");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TLinearMinimizer */
static void G__setup_memvarTLinearMinimizer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MinuitLN_TLinearMinimizer));
   { TLinearMinimizer *p; p=(TLinearMinimizer*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fRobust=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fDim=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fNFree=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fMinVal=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MinuitLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fParams=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MinuitLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fErrors=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MinuitLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fCovar=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__MinuitLN_ROOTcLcLMathcLcLIGradientFunctionMultiDim),G__defined_typename("IMultiGradFunction"),-1,4,"fObjFunc=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TLinearFitter),-1,-1,4,"fFitter=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMinuitMinimizer */
static void G__setup_memvarTMinuitMinimizer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MinuitLN_TMinuitMinimizer));
   { TMinuitMinimizer *p; p=(TMinuitMinimizer*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fUsed=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fMinosRun=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fDim=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fStrategy=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MinuitLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fParams=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MinuitLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fErrors=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MinuitLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fCovar=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__G__MinuitLN_ROOTcLcLMinuitcLcLEMinimizerType),-1,-1,4,"fType=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TMinuit),-1,-1,4,"fMinuit=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MinuitLN_ROOTcLcLMathcLcLIBaseFunctionMultiDim),G__defined_typename("IMultiGenFunction"),-2,4,"fgFunc=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TMinuit),-1,-2,4,"fgMinuit=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-2,4,"fgUsed=",0,"flag to control if static instance has done minimization");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__Minuit() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTMinuit(void) {
   /* TMinuit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MinuitLN_TMinuit));
   G__memfunc_setup("TMinuit",714,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__MinuitLN_TMinuit), -1, 0, 1, 1, 4, 0, "u 'TMinuit' - 11 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__MinuitLN_TMinuit), -1, 1, 1, 1, 4, 0, "u 'TMinuit' - 11 - m", "Not implemented", (void*) NULL, 0);
   G__memfunc_setup("TMinuit",714,G__G__Minuit_114_0_3, 105, G__get_linked_tagnum(&G__G__MinuitLN_TMinuit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TMinuit",714,G__G__Minuit_114_0_4, 105, G__get_linked_tagnum(&G__G__MinuitLN_TMinuit), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - maxpar", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildArrays",1122,G__G__Minuit_114_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '15' maxpar", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clone",497,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__MinuitLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 '\"\"' newname", "Clone-Method to copy the function-pointer fFCN", (void*) NULL, 1);
   G__memfunc_setup("Command",703,G__G__Minuit_114_0_7, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - - 10 - command", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Contour",746,G__G__Minuit_114_0_8, 85, G__get_linked_tagnum(&G__G__MinuitLN_TObject), -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 '10' npoints i - 'Int_t' 0 '0' pa1 "
"i - 'Int_t' 0 '1' pa2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DefineParameter",1516,G__G__Minuit_114_0_9, 105, -1, G__defined_typename("Int_t"), 0, 6, 1, 1, 0, 
"i - 'Int_t' 0 - parNo C - - 10 - name "
"d - 'Double_t' 0 - initVal d - 'Double_t' 0 - initErr "
"d - 'Double_t' 0 - lowerLimit d - 'Double_t' 0 - upperLimit", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DeleteArrays",1221,G__G__Minuit_114_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Eval",392,G__G__Minuit_114_0_11, 105, -1, G__defined_typename("Int_t"), 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 - npar D - 'Double_t' 0 - grad "
"d - 'Double_t' 1 - fval D - 'Double_t' 0 - par "
"i - 'Int_t' 0 - flag", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FixParameter",1224,G__G__Minuit_114_0_12, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - parNo", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMethodCall",1277,G__G__Minuit_114_0_13, 85, G__get_linked_tagnum(&G__G__MinuitLN_TMethodCall), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetObjectFit",1178,G__G__Minuit_114_0_14, 85, G__get_linked_tagnum(&G__G__MinuitLN_TObject), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaxIterations",1640,G__G__Minuit_114_0_15, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumFixedPars",1494,G__G__Minuit_114_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNumFreePars",1384,G__G__Minuit_114_0_17, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNumPars",998,G__G__Minuit_114_0_18, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetParameter",1217,G__G__Minuit_114_0_19, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 8, 
"i - 'Int_t' 0 - parNo d - 'Double_t' 1 - currentValue "
"d - 'Double_t' 1 - currentError", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPlot",703,G__G__Minuit_114_0_20, 85, G__get_linked_tagnum(&G__G__MinuitLN_TObject), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetStatus",932,G__G__Minuit_114_0_21, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Migrad",596,G__G__Minuit_114_0_22, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mnamin",640,G__G__Minuit_114_0_23, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mnbins",647,G__G__Minuit_114_0_24, 121, -1, -1, 0, 7, 1, 1, 0, 
"d - 'Double_t' 0 - a1 d - 'Double_t' 0 - a2 "
"i - 'Int_t' 0 - naa d - 'Double_t' 1 - bl "
"d - 'Double_t' 1 - bh i - 'Int_t' 1 - nb "
"d - 'Double_t' 1 - bwid", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mncalf",625,G__G__Minuit_114_0_25, 121, -1, -1, 0, 2, 1, 1, 0, 
"D - 'Double_t' 0 - pvec d - 'Double_t' 1 - ycalf", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mncler",641,G__G__Minuit_114_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mncntr",658,G__G__Minuit_114_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - ke1 i - 'Int_t' 0 - ke2 "
"i - 'Int_t' 1 - ierrf", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mncomd",638,G__G__Minuit_114_0_28, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - crdbin i - 'Int_t' 1 - icondn", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mncont",655,G__G__Minuit_114_0_29, 121, -1, -1, 0, 6, 1, 1, 0, 
"i - 'Int_t' 0 - ke1 i - 'Int_t' 0 - ke2 "
"i - 'Int_t' 0 - nptu D - 'Double_t' 0 - xptu "
"D - 'Double_t' 0 - yptu i - 'Int_t' 1 - ierrf", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mncrck",638,G__G__Minuit_114_0_30, 121, -1, -1, 0, 9, 1, 1, 0, 
"u 'TString' - 0 - crdbuf i - 'Int_t' 0 - maxcwd "
"u 'TString' - 1 - comand i - 'Int_t' 1 - lnc "
"i - 'Int_t' 0 - mxp D - 'Double_t' 0 - plist "
"i - 'Int_t' 1 - llist i - 'Int_t' 1 - ierr "
"i - 'Int_t' 0 - isyswr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mncros",658,G__G__Minuit_114_0_31, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 1 - aopt i - 'Int_t' 1 - iercr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mncuve",654,G__G__Minuit_114_0_32, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mnderi",639,G__G__Minuit_114_0_33, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mndxdi",644,G__G__Minuit_114_0_34, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - pint i - 'Int_t' 0 - ipar "
"d - 'Double_t' 1 - dxdi", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mneig",528,G__G__Minuit_114_0_35, 121, -1, -1, 0, 7, 1, 1, 0, 
"D - 'Double_t' 0 - a i - 'Int_t' 0 - ndima "
"i - 'Int_t' 0 - n i - 'Int_t' 0 - mits "
"D - 'Double_t' 0 - work d - 'Double_t' 0 - precis "
"i - 'Int_t' 1 - ifault", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mnemat",642,G__G__Minuit_114_0_36, 121, -1, -1, 0, 2, 1, 1, 0, 
"D - 'Double_t' 0 - emat i - 'Int_t' 0 - ndim", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mnerrs",663,G__G__Minuit_114_0_37, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 - number d - 'Double_t' 1 - eplus "
"d - 'Double_t' 1 - eminus d - 'Double_t' 1 - eparab "
"d - 'Double_t' 1 - gcc", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mneval",643,G__G__Minuit_114_0_38, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - anext d - 'Double_t' 1 - fnext "
"i - 'Int_t' 1 - ierev", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mnexcm",648,G__G__Minuit_114_0_39, 121, -1, -1, 0, 4, 1, 1, 0, 
"C - - 10 - comand D - 'Double_t' 0 - plist "
"i - 'Int_t' 0 - llist i - 'Int_t' 1 - ierflg", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mnexin",655,G__G__Minuit_114_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "D - 'Double_t' 0 - pint", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mnfixp",658,G__G__Minuit_114_0_41, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - iint i - 'Int_t' 1 - ierr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mnfree",637,G__G__Minuit_114_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - k", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mngrad",633,G__G__Minuit_114_0_43, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mnhelp",644,G__G__Minuit_114_0_44, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - comd", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mnhelp",644,G__G__Minuit_114_0_45, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '\"\"' command", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mnhess",654,G__G__Minuit_114_0_46, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mnhes1",588,G__G__Minuit_114_0_47, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mnimpr",659,G__G__Minuit_114_0_48, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mninex",655,G__G__Minuit_114_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "D - 'Double_t' 0 - pint", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mninit",655,G__G__Minuit_114_0_50, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - i1 i - 'Int_t' 0 - i2 "
"i - 'Int_t' 0 - i3", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mnlims",656,G__G__Minuit_114_0_51, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mnline",643,G__G__Minuit_114_0_52, 121, -1, -1, 0, 5, 1, 1, 0, 
"D - 'Double_t' 0 - start d - 'Double_t' 0 - fstart "
"D - 'Double_t' 0 - step d - 'Double_t' 0 - slope "
"d - 'Double_t' 0 - toler", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mnmatu",658,G__G__Minuit_114_0_53, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - kode", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mnmigr",650,G__G__Minuit_114_0_54, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mnmnos",664,G__G__Minuit_114_0_55, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mnmnot",665,G__G__Minuit_114_0_56, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - ilax i - 'Int_t' 0 - ilax2 "
"d - 'Double_t' 1 - val2pl d - 'Double_t' 1 - val2mi", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mnparm",651,G__G__Minuit_114_0_57, 121, -1, -1, 0, 7, 1, 1, 0, 
"i - 'Int_t' 0 - k u 'TString' - 0 - cnamj "
"d - 'Double_t' 0 - uk d - 'Double_t' 0 - wk "
"d - 'Double_t' 0 - a d - 'Double_t' 0 - b "
"i - 'Int_t' 1 - ierflg", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mnpars",657,G__G__Minuit_114_0_58, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TString' - 1 - crdbuf i - 'Int_t' 1 - icondn", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mnpfit",654,G__G__Minuit_114_0_59, 121, -1, -1, 0, 5, 1, 1, 0, 
"D - 'Double_t' 0 - parx2p D - 'Double_t' 0 - pary2p "
"i - 'Int_t' 0 - npar2p D - 'Double_t' 0 - coef2p "
"d - 'Double_t' 1 - sdev2p", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mnpint",662,G__G__Minuit_114_0_60, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 1 - pexti i - 'Int_t' 0 - i "
"d - 'Double_t' 1 - pinti", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mnplot",666,G__G__Minuit_114_0_61, 121, -1, -1, 0, 6, 1, 1, 0, 
"D - 'Double_t' 0 - xpt D - 'Double_t' 0 - ypt "
"C - - 0 - chpt i - 'Int_t' 0 - nxypt "
"i - 'Int_t' 0 - npagwd i - 'Int_t' 0 - npagln", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mnpout",675,G__G__Minuit_114_0_62, 121, -1, -1, 0, 7, 1, 1, 8, 
"i - 'Int_t' 0 - iuext u 'TString' - 1 - chnam "
"d - 'Double_t' 1 - val d - 'Double_t' 1 - err "
"d - 'Double_t' 1 - xlolim d - 'Double_t' 1 - xuplim "
"i - 'Int_t' 1 - iuint", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mnprin",660,G__G__Minuit_114_0_63, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - inkode d - 'Double_t' 0 - fval", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mnpsdf",648,G__G__Minuit_114_0_64, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mnrazz",674,G__G__Minuit_114_0_65, 121, -1, -1, 0, 5, 1, 1, 0, 
"d - 'Double_t' 0 - ynew D - 'Double_t' 0 - pnew "
"D - 'Double_t' 0 - y i - 'Int_t' 1 - jh "
"i - 'Int_t' 1 - jl", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mnrn15",545,G__G__Minuit_114_0_66, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 1 - val i - 'Int_t' 1 - inseed", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mnrset",665,G__G__Minuit_114_0_67, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - iopt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mnsave",650,G__G__Minuit_114_0_68, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mnscan",640,G__G__Minuit_114_0_69, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mnseek",643,G__G__Minuit_114_0_70, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mnset",551,G__G__Minuit_114_0_71, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mnsimp",660,G__G__Minuit_114_0_72, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mnstat",663,G__G__Minuit_114_0_73, 121, -1, -1, 0, 6, 1, 1, 0, 
"d - 'Double_t' 1 - fmin d - 'Double_t' 1 - fedm "
"d - 'Double_t' 1 - errdef i - 'Int_t' 1 - npari "
"i - 'Int_t' 1 - nparx i - 'Int_t' 1 - istat", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mntiny",671,G__G__Minuit_114_0_74, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - epsp1 d - 'Double_t' 1 - epsbak", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mnunpt",674,G__G__Minuit_114_0_75, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'TString' - 1 - cfname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mnvert",668,G__G__Minuit_114_0_76, 121, -1, -1, 0, 5, 1, 1, 0, 
"D - 'Double_t' 0 - a i - 'Int_t' 0 - l "
"i - 'Int_t' 0 - m i - 'Int_t' 0 - n "
"i - 'Int_t' 1 - ifail", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mnwarn",659,G__G__Minuit_114_0_77, 121, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 - copt C - - 10 - corg "
"C - - 10 - cmes", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mnwerr",667,G__G__Minuit_114_0_78, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Release",705,G__G__Minuit_114_0_79, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - parNo", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetErrorDef",1093,G__G__Minuit_114_0_80, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - up", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFCN",515,G__G__Minuit_114_0_81, 121, -1, -1, 0, 1, 1, 1, 0, "Y - - 0 - fcn", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFCN",515,G__G__Minuit_114_0_82, 121, -1, -1, 0, 1, 1, 1, 0, "1 - 'void (*)(Int_t&, Double_t*, Double_t&f, Double_t*, Int_t)' 0 - fcn", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetGraphicsMode",1506,G__G__Minuit_114_0_83, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' mode", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMaxIterations",1652,G__G__Minuit_114_0_84, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '500' maxiter", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetObjectFit",1190,G__G__Minuit_114_0_85, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPrintLevel",1329,G__G__Minuit_114_0_86, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 '0' printLevel", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__Minuit_114_0_87, 85, G__get_linked_tagnum(&G__G__MinuitLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TMinuit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Minuit_114_0_88, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMinuit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Minuit_114_0_89, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TMinuit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Minuit_114_0_90, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TMinuit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__MinuitLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Minuit_114_0_94, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Minuit_114_0_95, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMinuit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Minuit_114_0_96, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TMinuit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Minuit_114_0_97, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMinuit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Minuit_114_0_98, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TMinuit::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TMinuit", 840, G__G__Minuit_114_0_99, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTFitter(void) {
   /* TFitter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MinuitLN_TFitter));
   G__memfunc_setup("TFitter",706,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__MinuitLN_TFitter), -1, 0, 1, 1, 4, 0, "u 'TFitter' - 11 - -", "Not implemented", (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__MinuitLN_TFitter), -1, 1, 1, 1, 4, 0, "u 'TFitter' - 11 - -", "Not implemented", (void*) NULL, 0);
   G__memfunc_setup("TFitter",706,G__G__Minuit_115_0_3, 105, G__get_linked_tagnum(&G__G__MinuitLN_TFitter), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '25' maxpar", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Chisquare",933,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - npar D - 'Double_t' 0 - params", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ExecuteCommand",1426,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"C - - 10 - command D - 'Double_t' 0 - args "
"i - 'Int_t' 0 - nargs", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FitChisquare",1224,G__G__Minuit_115_0_7, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 1 - npar D - 'Double_t' 0 - gin "
"d - 'Double_t' 1 - f D - 'Double_t' 0 - u "
"i - 'Int_t' 0 - flag", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FitChisquareI",1297,G__G__Minuit_115_0_8, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 1 - npar D - 'Double_t' 0 - gin "
"d - 'Double_t' 1 - f D - 'Double_t' 0 - u "
"i - 'Int_t' 0 - flag", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FitLikelihood",1319,G__G__Minuit_115_0_9, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 1 - npar D - 'Double_t' 0 - gin "
"d - 'Double_t' 1 - f D - 'Double_t' 0 - u "
"i - 'Int_t' 0 - flag", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FitLikelihoodI",1392,G__G__Minuit_115_0_10, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 1 - npar D - 'Double_t' 0 - gin "
"d - 'Double_t' 1 - f D - 'Double_t' 0 - u "
"i - 'Int_t' 0 - flag", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FixParameter",1224,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ipar", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetConfidenceIntervals",2246,(G__InterfaceMethod) NULL,121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 - n i - 'Int_t' 0 - ndim "
"D - 'Double_t' 10 - x D - 'Double_t' 0 - ci "
"d - 'Double_t' 0 '0.95' cl", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetConfidenceIntervals",2246,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TObject' - 0 - obj d - 'Double_t' 0 '0.95' cl", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCovarianceMatrix",1936,(G__InterfaceMethod) NULL,68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCovarianceMatrixElement",2650,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - i i - 'Int_t' 0 - j", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetErrors",925,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 5, 1, 1, 8, 
"i - 'Int_t' 0 - ipar d - 'Double_t' 1 - eplus "
"d - 'Double_t' 1 - eminus d - 'Double_t' 1 - eparab "
"d - 'Double_t' 1 - globcc", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMinuit",918,G__G__Minuit_115_0_17, 85, G__get_linked_tagnum(&G__G__MinuitLN_TMinuit), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumberTotalParameters",2465,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNumberFreeParameters",2335,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetParError",1101,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - ipar", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetParameter",1217,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - ipar", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetParameter",1217,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 6, 1, 1, 8, 
"i - 'Int_t' 0 - ipar C - - 0 - name "
"d - 'Double_t' 1 - value d - 'Double_t' 1 - verr "
"d - 'Double_t' 1 - vlow d - 'Double_t' 1 - vhigh", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetParName",964,(G__InterfaceMethod) NULL,67, -1, -1, 0, 1, 1, 1, 9, "i - 'Int_t' 0 - ipar", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetStats",815,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 5, 1, 1, 8, 
"d - 'Double_t' 1 - amin d - 'Double_t' 1 - edm "
"d - 'Double_t' 1 - errdef i - 'Int_t' 1 - nvpar "
"i - 'Int_t' 1 - nparx", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSumLog",887,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsFixed",684,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - ipar", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PrintResults",1279,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - level d - 'Double_t' 0 - amin", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReleaseParameter",1634,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ipar", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFCN",515,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "Y - - 0 - fcn", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFCN",515,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "1 - 'void (*)(Int_t&, Double_t*, Double_t&f, Double_t*, Int_t)' 0 - fcn", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFitMethod",1200,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetParameter",1229,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 6, 1, 1, 0, 
"i - 'Int_t' 0 - ipar C - - 10 - parname "
"d - 'Double_t' 0 - value d - 'Double_t' 0 - verr "
"d - 'Double_t' 0 - vlow d - 'Double_t' 0 - vhigh", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__Minuit_115_0_33, 85, G__get_linked_tagnum(&G__G__MinuitLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TFitter::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Minuit_115_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TFitter::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Minuit_115_0_35, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TFitter::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Minuit_115_0_36, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TFitter::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__MinuitLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Minuit_115_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Minuit_115_0_41, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TFitter::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Minuit_115_0_42, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TFitter::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Minuit_115_0_43, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TFitter::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Minuit_115_0_44, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TFitter::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TFitter", 832, G__G__Minuit_115_0_45, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTLinearFitter(void) {
   /* TLinearFitter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MinuitLN_TLinearFitter));
   G__memfunc_setup("AddToDesign",1062,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"D - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ComputeTValues",1441,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GraphLinearFitter",1723,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "d - 'Double_t' 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Graph2DLinearFitter",1841,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "d - 'Double_t' 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HistLinearFitter",1633,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MultiGraphLinearFitter",2246,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "d - 'Double_t' 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Partition",954,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 4, 0, 
"i - 'Int_t' 0 - nmini I - 'Int_t' 0 - indsubdat", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RDraw",480,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"I - 'Int_t' 0 - subdat I - 'Int_t' 0 - indsubdat", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateSubset",1226,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"i - 'Int_t' 0 - ntotal i - 'Int_t' 0 - h "
"I - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CStep",479,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 7, 1, 4, 0, 
"i - 'Int_t' 0 - step i - 'Int_t' 0 - h "
"D - 'Double_t' 0 - residuals I - 'Int_t' 0 - index "
"I - 'Int_t' 0 - subdat i - 'Int_t' 0 - start "
"i - 'Int_t' 0 - end", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Linf",393,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLinearFitter",1309,G__G__Minuit_195_0_12, 105, G__get_linked_tagnum(&G__G__MinuitLN_TLinearFitter), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLinearFitter",1309,G__G__Minuit_195_0_13, 105, G__get_linked_tagnum(&G__G__MinuitLN_TLinearFitter), -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - ndim C - - 10 - formula "
"C - 'Option_t' 10 '\"D\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLinearFitter",1309,G__G__Minuit_195_0_14, 105, G__get_linked_tagnum(&G__G__MinuitLN_TLinearFitter), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ndim", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLinearFitter",1309,G__G__Minuit_195_0_15, 105, G__get_linked_tagnum(&G__G__MinuitLN_TLinearFitter), -1, 0, 2, 1, 1, 0, 
"U 'TFormula' - 0 - function C - 'Option_t' 10 '\"D\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLinearFitter",1309,G__G__Minuit_195_0_16, 105, G__get_linked_tagnum(&G__G__MinuitLN_TLinearFitter), -1, 0, 1, 1, 1, 0, "u 'TLinearFitter' - 11 - tlf", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Minuit_195_0_17, 117, G__get_linked_tagnum(&G__G__MinuitLN_TLinearFitter), -1, 1, 1, 1, 1, 0, "u 'TLinearFitter' - 11 - tlf", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__G__Minuit_195_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TLinearFitter' - 0 - tlf", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddPoint",787,G__G__Minuit_195_0_19, 121, -1, -1, 0, 3, 1, 1, 0, 
"D - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 '1' e", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddTempMatrices",1495,G__G__Minuit_195_0_20, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AssignData",991,G__G__Minuit_195_0_21, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 - npoints i - 'Int_t' 0 - xncols "
"D - 'Double_t' 0 - x D - 'Double_t' 0 - y "
"D - 'Double_t' 0 '0' e", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ClearPoints",1124,G__G__Minuit_195_0_23, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Chisquare",933,G__G__Minuit_195_0_24, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Eval",392,G__G__Minuit_195_0_25, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("EvalRobust",1031,G__G__Minuit_195_0_26, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 '-1' h", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ExecuteCommand",1426,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"C - - 10 - command D - 'Double_t' 0 - args "
"i - 'Int_t' 0 - nargs", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FixParameter",1224,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ipar", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FixParameter",1224,G__G__Minuit_195_0_29, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - ipar d - 'Double_t' 0 - parvalue", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetAtbVector",1194,G__G__Minuit_195_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVectorT<double>' 'TVectorD' 1 - v", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetChisquare",1221,G__G__Minuit_195_0_31, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetConfidenceIntervals",2246,(G__InterfaceMethod) NULL,121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 - n i - 'Int_t' 0 - ndim "
"D - 'Double_t' 10 - x D - 'Double_t' 0 - ci "
"d - 'Double_t' 0 '0.95' cl", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetConfidenceIntervals",2246,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TObject' - 0 - obj d - 'Double_t' 0 '0.95' cl", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCovarianceMatrix",1936,(G__InterfaceMethod) NULL,68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCovarianceMatrix",1936,G__G__Minuit_195_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMatrixT<double>' 'TMatrixD' 1 - matr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCovarianceMatrixElement",2650,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - i i - 'Int_t' 0 - j", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDesignMatrix",1519,G__G__Minuit_195_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMatrixT<double>' 'TMatrixD' 1 - matr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetErrors",925,G__G__Minuit_195_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVectorT<double>' 'TVectorD' 1 - vpar", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNumberTotalParameters",2465,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNumberFreeParameters",2335,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNpoints",1035,G__G__Minuit_195_0_41, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetParameters",1332,G__G__Minuit_195_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVectorT<double>' 'TVectorD' 1 - vpar", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetParameter",1217,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - ipar", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetParameter",1217,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 6, 1, 1, 8, 
"i - 'Int_t' 0 - ipar C - - 0 - name "
"d - 'Double_t' 1 - value d - 'Double_t' 1 - - "
"d - 'Double_t' 1 - - d - 'Double_t' 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetParName",964,(G__InterfaceMethod) NULL,67, -1, -1, 0, 1, 1, 1, 9, "i - 'Int_t' 0 - ipar", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetParError",1101,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - ipar", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetParTValue",1172,G__G__Minuit_195_0_47, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ipar", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetParSignificance",1798,G__G__Minuit_195_0_48, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ipar", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFitSample",1189,G__G__Minuit_195_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBits' - 1 - bits", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetY2",427,G__G__Minuit_195_0_50, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsFixed",684,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - ipar", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Merge",496,G__G__Minuit_195_0_52, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'TCollection' - 0 - list", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PrintResults",1279,G__G__Minuit_195_0_53, 121, -1, -1, 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - level d - 'Double_t' 0 '0' amin", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReleaseParameter",1634,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ipar", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetBasisFunctions",1751,G__G__Minuit_195_0_55, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObjArray' - 0 - functions", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDim",582,G__G__Minuit_195_0_56, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFormula",1026,G__G__Minuit_195_0_57, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - formula", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFormula",1026,G__G__Minuit_195_0_58, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TFormula' - 0 - function", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StoreData",903,G__G__Minuit_195_0_59, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - store", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("UpdateMatrix",1240,G__G__Minuit_195_0_60, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Chisquare",933,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - - D - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetErrors",925,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 5, 1, 1, 8, 
"i - 'Int_t' 0 - - d - 'Double_t' 1 - - "
"d - 'Double_t' 1 - - d - 'Double_t' 1 - - "
"d - 'Double_t' 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetStats",815,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 5, 1, 1, 8, 
"d - 'Double_t' 1 - - d - 'Double_t' 1 - - "
"d - 'Double_t' 1 - - i - 'Int_t' 1 - - "
"i - 'Int_t' 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSumLog",887,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFitMethod",1200,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetParameter",1229,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 6, 1, 1, 0, 
"i - 'Int_t' 0 - - C - - 10 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__Minuit_195_0_67, 85, G__get_linked_tagnum(&G__G__MinuitLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TLinearFitter::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Minuit_195_0_68, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLinearFitter::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Minuit_195_0_69, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TLinearFitter::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Minuit_195_0_70, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TLinearFitter::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__MinuitLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Minuit_195_0_74, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Minuit_195_0_75, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLinearFitter::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Minuit_195_0_76, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TLinearFitter::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Minuit_195_0_77, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLinearFitter::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Minuit_195_0_78, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TLinearFitter::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TLinearFitter", 1435, G__G__Minuit_195_0_79, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTLinearMinimizer(void) {
   /* TLinearMinimizer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MinuitLN_TLinearMinimizer));
   G__memfunc_setup("TLinearMinimizer",1635,G__G__Minuit_204_0_1, 105, G__get_linked_tagnum(&G__G__MinuitLN_TLinearMinimizer), -1, 0, 1, 1, 1, 0, "i - - 0 '0' type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLinearMinimizer",1635,G__G__Minuit_204_0_2, 105, G__get_linked_tagnum(&G__G__MinuitLN_TLinearMinimizer), -1, 0, 1, 1, 1, 0, "C - - 10 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLinearMinimizer",1635,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__MinuitLN_TLinearMinimizer), -1, 0, 1, 1, 4, 0, "u 'TLinearMinimizer' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__MinuitLN_TLinearMinimizer), -1, 1, 1, 1, 4, 0, "u 'TLinearMinimizer' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFunction",1138,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::IBaseFunctionMultiDim' 'ROOT::Math::IMultiGenFunction' 11 - func", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFunction",1138,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::IGradientFunctionMultiDim' 'ROOT::Math::IMultiGradFunction' 11 - func", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetVariable",1106,(G__InterfaceMethod) NULL,103, -1, -1, 0, 4, 1, 1, 0, 
"h - - 0 - - u 'string' - 11 - - "
"d - - 0 - - d - - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFixedVariable",1602,(G__InterfaceMethod) NULL,103, -1, -1, 0, 3, 1, 1, 0, 
"h - - 0 - - u 'string' - 11 - - "
"d - - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Minimize",834,(G__InterfaceMethod) NULL,103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MinValue",801,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Edm",278,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("X",88,(G__InterfaceMethod) NULL,68, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MinGradient",1106,(G__InterfaceMethod) NULL,68, -1, -1, 0, 0, 1, 1, 9, "", "not available in Minuit2 ", (void*) NULL, 1);
   G__memfunc_setup("NCalls",573,(G__InterfaceMethod) NULL,104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("NDim",360,(G__InterfaceMethod) NULL,104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("NFree",464,(G__InterfaceMethod) NULL,104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ProvidesError",1366,(G__InterfaceMethod) NULL,103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Errors",637,(G__InterfaceMethod) NULL,68, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CovMatrix",925,(G__InterfaceMethod) NULL,100, -1, -1, 0, 2, 1, 1, 8, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CovMatrixStatus",1569,(G__InterfaceMethod) NULL,105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__Minuit_204_0_21, 85, G__get_linked_tagnum(&G__G__MinuitLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TLinearMinimizer::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Minuit_204_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLinearMinimizer::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Minuit_204_0_23, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TLinearMinimizer::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Minuit_204_0_24, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TLinearMinimizer::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__G__Minuit_204_0_25, 85, G__get_linked_tagnum(&G__G__MinuitLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__G__Minuit_204_0_26, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__G__Minuit_204_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Minuit_204_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Minuit_204_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLinearMinimizer::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Minuit_204_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TLinearMinimizer::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Minuit_204_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLinearMinimizer::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Minuit_204_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TLinearMinimizer::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TLinearMinimizer", 1761, G__G__Minuit_204_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMinuitMinimizer(void) {
   /* TMinuitMinimizer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MinuitLN_TMinuitMinimizer));
   G__memfunc_setup("TMinuitMinimizer",1662,G__G__Minuit_212_0_1, 105, G__get_linked_tagnum(&G__G__MinuitLN_TMinuitMinimizer), -1, 0, 1, 1, 1, 0, "i 'ROOT::Minuit::EMinimizerType' - 0 'ROOT::Minuit::kMigrad' type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TMinuitMinimizer",1662,G__G__Minuit_212_0_2, 105, G__get_linked_tagnum(&G__G__MinuitLN_TMinuitMinimizer), -1, 0, 1, 1, 1, 0, "C - - 10 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TMinuitMinimizer",1662,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__MinuitLN_TMinuitMinimizer), -1, 0, 1, 1, 4, 0, "u 'TMinuitMinimizer' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__MinuitLN_TMinuitMinimizer), -1, 1, 1, 1, 4, 0, "u 'TMinuitMinimizer' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFunction",1138,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::IBaseFunctionMultiDim' 'ROOT::Math::IMultiGenFunction' 11 - func", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFunction",1138,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::IGradientFunctionMultiDim' 'ROOT::Math::IMultiGradFunction' 11 - func", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetVariable",1106,(G__InterfaceMethod) NULL,103, -1, -1, 0, 4, 1, 1, 0, 
"h - - 0 - ivar u 'string' - 11 - name "
"d - - 0 - val d - - 0 - step", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetLimitedVariable",1818,(G__InterfaceMethod) NULL,103, -1, -1, 0, 6, 1, 1, 0, 
"h - - 0 - ivar u 'string' - 11 - name "
"d - - 0 - val d - - 0 - step "
"d - - 0 - - d - - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFixedVariable",1602,(G__InterfaceMethod) NULL,103, -1, -1, 0, 3, 1, 1, 0, 
"h - - 0 - - u 'string' - 11 - - "
"d - - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetVariableValue",1615,(G__InterfaceMethod) NULL,103, -1, -1, 0, 2, 1, 1, 0, 
"h - - 0 - - d - - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Minimize",834,(G__InterfaceMethod) NULL,103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MinValue",801,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Edm",278,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("X",88,(G__InterfaceMethod) NULL,68, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MinGradient",1106,(G__InterfaceMethod) NULL,68, -1, -1, 0, 0, 1, 1, 9, "", "not available in Minuit2 ", (void*) NULL, 1);
   G__memfunc_setup("NCalls",573,(G__InterfaceMethod) NULL,104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("NDim",360,(G__InterfaceMethod) NULL,104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("NFree",464,(G__InterfaceMethod) NULL,104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ProvidesError",1366,(G__InterfaceMethod) NULL,103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Errors",637,(G__InterfaceMethod) NULL,68, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CovMatrix",925,(G__InterfaceMethod) NULL,100, -1, -1, 0, 2, 1, 1, 8, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CovMatrixStatus",1569,(G__InterfaceMethod) NULL,105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GlobalCC",727,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMinosError",1328,(G__InterfaceMethod) NULL,103, -1, -1, 0, 4, 1, 1, 0, 
"h - - 0 - i d - - 1 - errLow "
"d - - 1 - errUp i - - 0 '0' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Hesse",504,(G__InterfaceMethod) NULL,103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Scan",389,(G__InterfaceMethod) NULL,103, -1, -1, 0, 6, 1, 1, 0, 
"h - - 0 - i h - - 1 - nstep "
"D - - 0 - x D - - 0 - y "
"d - - 0 '0' xmin d - - 0 '0' xmax", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Contour",746,(G__InterfaceMethod) NULL,103, -1, -1, 0, 5, 1, 1, 0, 
"h - - 0 - i h - - 0 - j "
"h - - 1 - npoints D - - 0 - xi "
"D - - 0 - xj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PrintResults",1279,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("VariableName",1191,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__G__MinuitLN_string), -1, 0, 1, 1, 1, 8, "h - - 0 - ivar", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("VariableIndex",1310,(G__InterfaceMethod) NULL,105, -1, -1, 0, 1, 1, 1, 8, "u 'string' - 11 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Fcn",279,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 5, 3, 2, 0, 
"i - - 1 - - D - - 0 - - "
"d - - 1 - f D - - 0 - - "
"i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FcnGrad",661,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 5, 3, 2, 0, 
"i - - 1 - - D - - 0 - g "
"d - - 1 - f D - - 0 - - "
"i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoClear",666,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RetrieveParams",1450,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RetrieveErrorMatrix",1989,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Minuit_212_0_36, 85, G__get_linked_tagnum(&G__G__MinuitLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TMinuitMinimizer::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Minuit_212_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMinuitMinimizer::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Minuit_212_0_38, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TMinuitMinimizer::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Minuit_212_0_39, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TMinuitMinimizer::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__G__Minuit_212_0_40, 85, G__get_linked_tagnum(&G__G__MinuitLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__G__Minuit_212_0_41, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__G__Minuit_212_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Minuit_212_0_43, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Minuit_212_0_44, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMinuitMinimizer::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Minuit_212_0_45, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TMinuitMinimizer::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Minuit_212_0_46, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMinuitMinimizer::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Minuit_212_0_47, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TMinuitMinimizer::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TMinuitMinimizer", 1788, G__G__Minuit_212_0_48, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__Minuit() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
   G__memvar_setup((void*)(&gMinuit),85,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TMinuit),-1,-1,1,"gMinuit=",0,(char*)NULL);

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__Minuit() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__Minuit() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__MinuitLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_ROOT = { "ROOT" , 110 , -1 };
G__linked_taginfo G__G__MinuitLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_TMethodCall = { "TMethodCall" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_TVirtualFitter = { "TVirtualFitter" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_TMinuit = { "TMinuit" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_TFitter = { "TFitter" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_TElementActionTlEdoublegR = { "TElementActionT<double>" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_TElementPosActionTlEdoublegR = { "TElementPosActionT<double>" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_TMatrixTRow_constlEdoublegR = { "TMatrixTRow_const<double>" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_TMatrixTlEdoublegR = { "TMatrixT<double>" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_TMatrixTSymlEdoublegR = { "TMatrixTSym<double>" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_TMatrixTRowlEdoublegR = { "TMatrixTRow<double>" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_TMatrixTSparselEdoublegR = { "TMatrixTSparse<double>" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_TMatrixTSparseRow_constlEdoublegR = { "TMatrixTSparseRow_const<double>" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_TMatrixTSparseRowlEdoublegR = { "TMatrixTSparseRow<double>" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_TMatrixTDiag_constlEdoublegR = { "TMatrixTDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_TMatrixTColumn_constlEdoublegR = { "TMatrixTColumn_const<double>" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_TMatrixTSparseDiag_constlEdoublegR = { "TMatrixTSparseDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_TMatrixTFlat_constlEdoublegR = { "TMatrixTFlat_const<double>" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_TMatrixTSub_constlEdoublegR = { "TMatrixTSub_const<double>" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_TMatrixTColumnlEdoublegR = { "TMatrixTColumn<double>" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_TMatrixTDiaglEdoublegR = { "TMatrixTDiag<double>" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_TMatrixTFlatlEdoublegR = { "TMatrixTFlat<double>" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_TMatrixTSublEdoublegR = { "TMatrixTSub<double>" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_TMatrixTSparseDiaglEdoublegR = { "TMatrixTSparseDiag<double>" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_TBits = { "TBits" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_TCollection = { "TCollection" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__G__MinuitLN_TFormula = { "TFormula" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_TLinearFitter = { "TLinearFitter" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_ROOTcLcLMath = { "ROOT::Math" , 110 , -1 };
G__linked_taginfo G__G__MinuitLN_ROOTcLcLMathcLcLIBaseFunctionMultiDim = { "ROOT::Math::IBaseFunctionMultiDim" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_ROOTcLcLMathcLcLIGradientFunctionMultiDim = { "ROOT::Math::IGradientFunctionMultiDim" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_ROOTcLcLMathcLcLMinimizer = { "ROOT::Math::Minimizer" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_TLinearMinimizer = { "TLinearMinimizer" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR = { "reverse_iterator<vector<double,allocator<double> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_TMinuitcLcLdA = { "TMinuit::$" , 101 , -1 };
G__linked_taginfo G__G__MinuitLN_ROOTcLcLMinuit = { "ROOT::Minuit" , 110 , -1 };
G__linked_taginfo G__G__MinuitLN_ROOTcLcLMinuitcLcLEMinimizerType = { "ROOT::Minuit::EMinimizerType" , 101 , -1 };
G__linked_taginfo G__G__MinuitLN_TMinuitMinimizer = { "TMinuitMinimizer" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__Minuit() {
  G__G__MinuitLN_TClass.tagnum = -1 ;
  G__G__MinuitLN_TBuffer.tagnum = -1 ;
  G__G__MinuitLN_TMemberInspector.tagnum = -1 ;
  G__G__MinuitLN_TObject.tagnum = -1 ;
  G__G__MinuitLN_TNamed.tagnum = -1 ;
  G__G__MinuitLN_ROOT.tagnum = -1 ;
  G__G__MinuitLN_string.tagnum = -1 ;
  G__G__MinuitLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__MinuitLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__MinuitLN_TObjArray.tagnum = -1 ;
  G__G__MinuitLN_TString.tagnum = -1 ;
  G__G__MinuitLN_TMethodCall.tagnum = -1 ;
  G__G__MinuitLN_TVirtualFitter.tagnum = -1 ;
  G__G__MinuitLN_TMinuit.tagnum = -1 ;
  G__G__MinuitLN_TFitter.tagnum = -1 ;
  G__G__MinuitLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__G__MinuitLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__G__MinuitLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__G__MinuitLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__G__MinuitLN_TElementActionTlEdoublegR.tagnum = -1 ;
  G__G__MinuitLN_TElementPosActionTlEdoublegR.tagnum = -1 ;
  G__G__MinuitLN_TMatrixTRow_constlEdoublegR.tagnum = -1 ;
  G__G__MinuitLN_TMatrixTlEdoublegR.tagnum = -1 ;
  G__G__MinuitLN_TMatrixTSymlEdoublegR.tagnum = -1 ;
  G__G__MinuitLN_TMatrixTRowlEdoublegR.tagnum = -1 ;
  G__G__MinuitLN_TMatrixTSparselEdoublegR.tagnum = -1 ;
  G__G__MinuitLN_TMatrixTSparseRow_constlEdoublegR.tagnum = -1 ;
  G__G__MinuitLN_TMatrixTSparseRowlEdoublegR.tagnum = -1 ;
  G__G__MinuitLN_TMatrixTDiag_constlEdoublegR.tagnum = -1 ;
  G__G__MinuitLN_TMatrixTColumn_constlEdoublegR.tagnum = -1 ;
  G__G__MinuitLN_TMatrixTSparseDiag_constlEdoublegR.tagnum = -1 ;
  G__G__MinuitLN_TMatrixTFlat_constlEdoublegR.tagnum = -1 ;
  G__G__MinuitLN_TMatrixTSub_constlEdoublegR.tagnum = -1 ;
  G__G__MinuitLN_TMatrixTColumnlEdoublegR.tagnum = -1 ;
  G__G__MinuitLN_TMatrixTDiaglEdoublegR.tagnum = -1 ;
  G__G__MinuitLN_TMatrixTFlatlEdoublegR.tagnum = -1 ;
  G__G__MinuitLN_TMatrixTSublEdoublegR.tagnum = -1 ;
  G__G__MinuitLN_TMatrixTSparseDiaglEdoublegR.tagnum = -1 ;
  G__G__MinuitLN_TBits.tagnum = -1 ;
  G__G__MinuitLN_TCollection.tagnum = -1 ;
  G__G__MinuitLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__G__MinuitLN_TFormula.tagnum = -1 ;
  G__G__MinuitLN_TLinearFitter.tagnum = -1 ;
  G__G__MinuitLN_ROOTcLcLMath.tagnum = -1 ;
  G__G__MinuitLN_ROOTcLcLMathcLcLIBaseFunctionMultiDim.tagnum = -1 ;
  G__G__MinuitLN_ROOTcLcLMathcLcLIGradientFunctionMultiDim.tagnum = -1 ;
  G__G__MinuitLN_ROOTcLcLMathcLcLMinimizer.tagnum = -1 ;
  G__G__MinuitLN_TLinearMinimizer.tagnum = -1 ;
  G__G__MinuitLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__G__MinuitLN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__MinuitLN_TMinuitcLcLdA.tagnum = -1 ;
  G__G__MinuitLN_ROOTcLcLMinuit.tagnum = -1 ;
  G__G__MinuitLN_ROOTcLcLMinuitcLcLEMinimizerType.tagnum = -1 ;
  G__G__MinuitLN_TMinuitMinimizer.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__Minuit() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__MinuitLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__MinuitLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__MinuitLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__MinuitLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__MinuitLN_TNamed);
   G__get_linked_tagnum_fwd(&G__G__MinuitLN_ROOT);
   G__get_linked_tagnum_fwd(&G__G__MinuitLN_string);
   G__get_linked_tagnum_fwd(&G__G__MinuitLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__MinuitLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__MinuitLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__G__MinuitLN_TString);
   G__get_linked_tagnum_fwd(&G__G__MinuitLN_TMethodCall);
   G__get_linked_tagnum_fwd(&G__G__MinuitLN_TVirtualFitter);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MinuitLN_TMinuit),sizeof(TMinuit),-1,327424,"The MINUIT minimisation package",G__setup_memvarTMinuit,G__setup_memfuncTMinuit);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MinuitLN_TFitter),sizeof(TFitter),-1,327424,"The ROOT standard fitter based on TMinuit",G__setup_memvarTFitter,G__setup_memfuncTFitter);
   G__get_linked_tagnum_fwd(&G__G__MinuitLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__MinuitLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__MinuitLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__MinuitLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__MinuitLN_TElementActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__MinuitLN_TElementPosActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__MinuitLN_TMatrixTRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__MinuitLN_TMatrixTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__MinuitLN_TMatrixTSymlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__MinuitLN_TMatrixTRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__MinuitLN_TMatrixTSparselEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__MinuitLN_TMatrixTSparseRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__MinuitLN_TMatrixTSparseRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__MinuitLN_TMatrixTDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__MinuitLN_TMatrixTColumn_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__MinuitLN_TMatrixTSparseDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__MinuitLN_TMatrixTFlat_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__MinuitLN_TMatrixTSub_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__MinuitLN_TMatrixTColumnlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__MinuitLN_TMatrixTDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__MinuitLN_TMatrixTFlatlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__MinuitLN_TMatrixTSublEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__MinuitLN_TMatrixTSparseDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__MinuitLN_TBits);
   G__get_linked_tagnum_fwd(&G__G__MinuitLN_TCollection);
   G__get_linked_tagnum_fwd(&G__G__MinuitLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__G__MinuitLN_TFormula);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MinuitLN_TLinearFitter),sizeof(TLinearFitter),-1,130816,"fit a set of data points with a linear combination of functions",G__setup_memvarTLinearFitter,G__setup_memfuncTLinearFitter);
   G__get_linked_tagnum_fwd(&G__G__MinuitLN_ROOTcLcLMath);
   G__get_linked_tagnum_fwd(&G__G__MinuitLN_ROOTcLcLMathcLcLIBaseFunctionMultiDim);
   G__get_linked_tagnum_fwd(&G__G__MinuitLN_ROOTcLcLMathcLcLIGradientFunctionMultiDim);
   G__get_linked_tagnum_fwd(&G__G__MinuitLN_ROOTcLcLMathcLcLMinimizer);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MinuitLN_TLinearMinimizer),sizeof(TLinearMinimizer),-1,298752,"Implementation of the Minimizer interface using TLinearFitter ",G__setup_memvarTLinearMinimizer,G__setup_memfuncTLinearMinimizer);
   G__get_linked_tagnum_fwd(&G__G__MinuitLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__G__MinuitLN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__MinuitLN_TMinuitcLcLdA);
   G__get_linked_tagnum_fwd(&G__G__MinuitLN_ROOTcLcLMinuit);
   G__get_linked_tagnum_fwd(&G__G__MinuitLN_ROOTcLcLMinuitcLcLEMinimizerType);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MinuitLN_TMinuitMinimizer),sizeof(TMinuitMinimizer),-1,298752,"Implementation of Minimizer interface using TMinuit ",G__setup_memvarTMinuitMinimizer,G__setup_memfuncTMinuitMinimizer);
}
extern "C" void G__cpp_setupG__Minuit(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__Minuit()");
  G__set_cpp_environmentG__Minuit();
  G__cpp_setup_tagtableG__Minuit();

  G__cpp_setup_inheritanceG__Minuit();

  G__cpp_setup_typetableG__Minuit();

  G__cpp_setup_memvarG__Minuit();

  G__cpp_setup_memfuncG__Minuit();
  G__cpp_setup_globalG__Minuit();
  G__cpp_setup_funcG__Minuit();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__Minuit();
  return;
}
class G__cpp_setup_initG__Minuit {
  public:
    G__cpp_setup_initG__Minuit() { G__add_setup_func("G__Minuit",(G__incsetup)(&G__cpp_setupG__Minuit)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__Minuit() { G__remove_setup_func("G__Minuit"); }
};
G__cpp_setup_initG__Minuit G__cpp_setup_initializerG__Minuit;

