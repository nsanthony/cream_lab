//
// File generated by core/utils/src/rootcint_tmp at Mon Apr 13 13:46:10 2015

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__SPlot.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TSPlot_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TSPlot(void *p = 0);
   static void *newArray_TSPlot(Long_t size, void *p);
   static void delete_TSPlot(void *p);
   static void deleteArray_TSPlot(void *p);
   static void destruct_TSPlot(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSPlot*)
   {
      ::TSPlot *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSPlot >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSPlot", ::TSPlot::Class_Version(), "include/TSPlot.h", 21,
                  typeid(::TSPlot), DefineBehavior(ptr, ptr),
                  &::TSPlot::Dictionary, isa_proxy, 4,
                  sizeof(::TSPlot) );
      instance.SetNew(&new_TSPlot);
      instance.SetNewArray(&newArray_TSPlot);
      instance.SetDelete(&delete_TSPlot);
      instance.SetDeleteArray(&deleteArray_TSPlot);
      instance.SetDestructor(&destruct_TSPlot);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSPlot*)
   {
      return GenerateInitInstanceLocal((::TSPlot*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSPlot*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TSPlot::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSPlot::Class_Name()
{
   return "TSPlot";
}

//______________________________________________________________________________
const char *TSPlot::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSPlot*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSPlot::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSPlot*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSPlot::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSPlot*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSPlot::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSPlot*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TSPlot::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSPlot.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSPlot::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSPlot::Class(),this);
   }
}

//______________________________________________________________________________
void TSPlot::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TSPlot.
      TClass *R__cl = ::TSPlot::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fXvar", &fXvar);
      fXvar.ShowMembers(R__insp, strcat(R__parent,"fXvar.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fYvar", &fYvar);
      fYvar.ShowMembers(R__insp, strcat(R__parent,"fYvar.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fYpdf", &fYpdf);
      fYpdf.ShowMembers(R__insp, strcat(R__parent,"fYpdf.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fPdfTot", &fPdfTot);
      fPdfTot.ShowMembers(R__insp, strcat(R__parent,"fPdfTot.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fMinmax", &fMinmax);
      fMinmax.ShowMembers(R__insp, strcat(R__parent,"fMinmax.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fSWeights", &fSWeights);
      fSWeights.ShowMembers(R__insp, strcat(R__parent,"fSWeights.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fXvarHists", &fXvarHists);
      fXvarHists.ShowMembers(R__insp, strcat(R__parent,"fXvarHists.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fYvarHists", &fYvarHists);
      fYvarHists.ShowMembers(R__insp, strcat(R__parent,"fYvarHists.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fYpdfHists", &fYpdfHists);
      fYpdfHists.ShowMembers(R__insp, strcat(R__parent,"fYpdfHists.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fSWeightsHists", &fSWeightsHists);
      fSWeightsHists.ShowMembers(R__insp, strcat(R__parent,"fSWeightsHists.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fTree", &fTree);
      R__insp.Inspect(R__cl, R__parent, "*fTreename", &fTreename);
      R__insp.Inspect(R__cl, R__parent, "*fVarexp", &fVarexp);
      R__insp.Inspect(R__cl, R__parent, "*fSelection", &fSelection);
      R__insp.Inspect(R__cl, R__parent, "fNx", &fNx);
      R__insp.Inspect(R__cl, R__parent, "fNy", &fNy);
      R__insp.Inspect(R__cl, R__parent, "fNSpecies", &fNSpecies);
      R__insp.Inspect(R__cl, R__parent, "fNevents", &fNevents);
      R__insp.Inspect(R__cl, R__parent, "*fNumbersOfEvents", &fNumbersOfEvents);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSPlot(void *p) {
      return  p ? new(p) ::TSPlot : new ::TSPlot;
   }
   static void *newArray_TSPlot(Long_t nElements, void *p) {
      return p ? new(p) ::TSPlot[nElements] : new ::TSPlot[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSPlot(void *p) {
      delete ((::TSPlot*)p);
   }
   static void deleteArray_TSPlot(void *p) {
      delete [] ((::TSPlot*)p);
   }
   static void destruct_TSPlot(void *p) {
      typedef ::TSPlot current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSPlot

/********************************************************
* math/splot/src/G__SPlot.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__SPlot();

extern "C" void G__set_cpp_environmentG__SPlot() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("TSPlot.h");
  G__cpp_reset_tagtableG__SPlot();
}
#include <new>
extern "C" int G__cpp_dllrevG__SPlot() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TSPlot */
static int G__G__SPlot_139_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSPlot* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSPlot[n];
     } else {
       p = new((void*) gvp) TSPlot[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSPlot;
     } else {
       p = new((void*) gvp) TSPlot;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SPlotLN_TSPlot));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SPlot_139_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSPlot* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSPlot(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (TTree*) G__int(libp->para[4]));
   } else {
     p = new((void*) gvp) TSPlot(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (TTree*) G__int(libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SPlotLN_TSPlot));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SPlot_139_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TSPlot*) G__getstructoffset())->FillXvarHists((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TSPlot*) G__getstructoffset())->FillXvarHists();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SPlot_139_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TSPlot*) G__getstructoffset())->FillYvarHists((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TSPlot*) G__getstructoffset())->FillYvarHists();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SPlot_139_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TSPlot*) G__getstructoffset())->FillYpdfHists((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TSPlot*) G__getstructoffset())->FillYpdfHists();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SPlot_139_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TSPlot*) G__getstructoffset())->FillSWeightsHists((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TSPlot*) G__getstructoffset())->FillSWeightsHists();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SPlot_139_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TSPlot*) G__getstructoffset())->GetNevents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SPlot_139_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TSPlot*) G__getstructoffset())->GetNspecies());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SPlot_139_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TSPlot*) G__getstructoffset())->GetSWeightsHists());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SPlot_139_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) ((TSPlot*) G__getstructoffset())->GetSWeightsHist((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((TSPlot*) G__getstructoffset())->GetSWeightsHist((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SPlot_139_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TSPlot*) G__getstructoffset())->GetXvarHists());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SPlot_139_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TSPlot*) G__getstructoffset())->GetXvarHist((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SPlot_139_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TSPlot*) G__getstructoffset())->GetYvarHists());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SPlot_139_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TSPlot*) G__getstructoffset())->GetYvarHist((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SPlot_139_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TSPlot*) G__getstructoffset())->GetYpdfHists());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SPlot_139_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TSPlot*) G__getstructoffset())->GetYpdfHist((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SPlot_139_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSPlot*) G__getstructoffset())->GetSWeights(*(TMatrixD*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SPlot_139_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSPlot*) G__getstructoffset())->GetSWeights((Double_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SPlot_139_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TSPlot*) G__getstructoffset())->GetTreeName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SPlot_139_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TSPlot*) G__getstructoffset())->GetTreeSelection());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SPlot_139_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TSPlot*) G__getstructoffset())->GetTreeExpression());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SPlot_139_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TSPlot*) G__getstructoffset())->MakeSPlot((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TSPlot*) G__getstructoffset())->MakeSPlot();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SPlot_139_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      ((TSPlot*) G__getstructoffset())->RefillHist((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((TSPlot*) G__getstructoffset())->RefillHist((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SPlot_139_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSPlot*) G__getstructoffset())->SetNX((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SPlot_139_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSPlot*) G__getstructoffset())->SetNY((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SPlot_139_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSPlot*) G__getstructoffset())->SetNSpecies((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SPlot_139_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSPlot*) G__getstructoffset())->SetNEvents((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SPlot_139_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSPlot*) G__getstructoffset())->SetInitialNumbersOfSpecies((Int_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SPlot_139_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSPlot*) G__getstructoffset())->SetTree((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SPlot_139_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((TSPlot*) G__getstructoffset())->SetTreeSelection((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Long64_t) G__Longlong(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((TSPlot*) G__getstructoffset())->SetTreeSelection((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TSPlot*) G__getstructoffset())->SetTreeSelection((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TSPlot*) G__getstructoffset())->SetTreeSelection();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SPlot_139_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSPlot::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SPlot_139_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSPlot::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SPlot_139_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSPlot::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SPlot_139_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSPlot::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SPlot_139_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSPlot*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SPlot_139_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSPlot::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SPlot_139_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSPlot::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SPlot_139_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSPlot::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SPlot_139_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSPlot::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSPlot G__TTSPlot;
static int G__G__SPlot_139_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSPlot*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSPlot*) (soff+(sizeof(TSPlot)*i)))->~G__TTSPlot();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSPlot*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSPlot*) (soff))->~G__TTSPlot();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TSPlot */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__SPlot {
 public:
  G__Sizep2memfuncG__SPlot(): p(&G__Sizep2memfuncG__SPlot::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__SPlot::*p)();
};

size_t G__get_sizep2memfuncG__SPlot()
{
  G__Sizep2memfuncG__SPlot a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__SPlot() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__SPlotLN_TSPlot))) {
     TSPlot *G__Lderived;
     G__Lderived=(TSPlot*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SPlotLN_TSPlot),G__get_linked_tagnum(&G__G__SPlotLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__SPlot() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("Long64_t",110,-1,0,-1);
   G__setnewtype(-1,"Portable signed long integer 8 bytes",0);
   G__search_typename2("vector<TSchemaHelper>",117,G__get_linked_tagnum(&G__G__SPlotLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__SPlotLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__SPlotLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__SPlotLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__SPlotLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__SPlotLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__SPlotLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__G__SPlotLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__G__SPlotLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__G__SPlotLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__G__SPlotLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__G__SPlotLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__G__SPlotLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__G__SPlotLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Double_t>",117,G__get_linked_tagnum(&G__G__SPlotLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixD",117,G__get_linked_tagnum(&G__G__SPlotLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TSPlot */
static void G__setup_memvarTSPlot(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SPlotLN_TSPlot));
   { TSPlot *p; p=(TSPlot*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__SPlotLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,2,"fXvar=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__SPlotLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,2,"fYvar=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__SPlotLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,2,"fYpdf=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__SPlotLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,2,"fPdfTot=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__SPlotLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,2,"fMinmax=",0,"mins and maxs of variables for histogramming");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__SPlotLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,2,"fSWeights=",0,"computed sWeights");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__SPlotLN_TObjArray),-1,-1,2,"fXvarHists=",0,"histograms of control variables");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__SPlotLN_TObjArray),-1,-1,2,"fYvarHists=",0,"histograms of discriminating variables");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__SPlotLN_TObjArray),-1,-1,2,"fYpdfHists=",0,"histograms of pdfs");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__SPlotLN_TObjArray),-1,-1,2,"fSWeightsHists=",0,"histograms of weighted variables");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SPlotLN_TTree),-1,-1,2,"fTree=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SPlotLN_TString),-1,-1,2,"fTreename=",0,"The name of the data tree");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SPlotLN_TString),-1,-1,2,"fVarexp=",0,"Variables used for splot");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SPlotLN_TString),-1,-1,2,"fSelection=",0,"Selection on the tree");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNx=",0,"Number of control variables");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNy=",0,"Number of discriminating variables");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNSpecies=",0,"Number of species");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNevents=",0,"Total number of events");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fNumbersOfEvents=",0,"[fNSpecies] estimates of numbers of events in each species");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SPlotLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__SPlot() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTSPlot(void) {
   /* TSPlot */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SPlotLN_TSPlot));
   G__memfunc_setup("SPlots",613,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"D - 'Double_t' 0 - covmat i - 'Int_t' 0 - i_excl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSPlot",582,G__G__SPlot_139_0_2, 105, G__get_linked_tagnum(&G__G__SPlotLN_TSPlot), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSPlot",582,G__G__SPlot_139_0_3, 105, G__get_linked_tagnum(&G__G__SPlotLN_TSPlot), -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 - nx i - 'Int_t' 0 - ny "
"i - 'Int_t' 0 - ne i - 'Int_t' 0 - ns "
"U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Browse",626,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TBrowser' - 0 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsFolder",792,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FillXvarHists",1331,G__G__SPlot_139_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '100' nbins", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillYvarHists",1332,G__G__SPlot_139_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '100' nbins", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillYpdfHists",1317,G__G__SPlot_139_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '100' nbins", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillSWeightsHists",1728,G__G__SPlot_139_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '50' nbins", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNevents",1027,G__G__SPlot_139_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNspecies",1114,G__G__SPlot_139_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSWeightsHists",1625,G__G__SPlot_139_0_12, 85, G__get_linked_tagnum(&G__G__SPlotLN_TObjArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSWeightsHist",1510,G__G__SPlot_139_0_13, 85, G__get_linked_tagnum(&G__G__SPlotLN_TH1D), -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - ixvar i - 'Int_t' 0 - ispecies "
"i - 'Int_t' 0 '-1' iyexcl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXvarHists",1228,G__G__SPlot_139_0_14, 85, G__get_linked_tagnum(&G__G__SPlotLN_TObjArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXvarHist",1113,G__G__SPlot_139_0_15, 85, G__get_linked_tagnum(&G__G__SPlotLN_TH1D), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ixvar", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYvarHists",1229,G__G__SPlot_139_0_16, 85, G__get_linked_tagnum(&G__G__SPlotLN_TObjArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYvarHist",1114,G__G__SPlot_139_0_17, 85, G__get_linked_tagnum(&G__G__SPlotLN_TH1D), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - iyvar", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYpdfHists",1214,G__G__SPlot_139_0_18, 85, G__get_linked_tagnum(&G__G__SPlotLN_TObjArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYpdfHist",1099,G__G__SPlot_139_0_19, 85, G__get_linked_tagnum(&G__G__SPlotLN_TH1D), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - iyvar i - 'Int_t' 0 - ispecies", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSWeights",1102,G__G__SPlot_139_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMatrixT<double>' 'TMatrixD' 1 - weights", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSWeights",1102,G__G__SPlot_139_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "D - 'Double_t' 0 - weights", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTreeName",1073,G__G__SPlot_139_0_22, 85, G__get_linked_tagnum(&G__G__SPlotLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTreeSelection",1622,G__G__SPlot_139_0_23, 85, G__get_linked_tagnum(&G__G__SPlotLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTreeExpression",1760,G__G__SPlot_139_0_24, 85, G__get_linked_tagnum(&G__G__SPlotLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakeSPlot",880,G__G__SPlot_139_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"v\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RefillHist",1014,G__G__SPlot_139_0_26, 121, -1, -1, 0, 6, 1, 1, 0, 
"i - 'Int_t' 0 - type i - 'Int_t' 0 - var "
"i - 'Int_t' 0 - nbins d - 'Double_t' 0 - min "
"d - 'Double_t' 0 - max i - 'Int_t' 0 '-1' nspecies", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNX",466,G__G__SPlot_139_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - nx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNY",467,G__G__SPlot_139_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ny", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNSpecies",1094,G__G__SPlot_139_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ns", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNEvents",1007,G__G__SPlot_139_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ne", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInitialNumbersOfSpecies",2643,G__G__SPlot_139_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "I - 'Int_t' 0 - numbers", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTree",700,G__G__SPlot_139_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTreeSelection",1634,G__G__SPlot_139_0_33, 121, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 '\"\"' varexp C - - 10 '\"\"' selection "
"n - 'Long64_t' 0 '0' firstentry", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__SPlot_139_0_34, 85, G__get_linked_tagnum(&G__G__SPlotLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSPlot::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__SPlot_139_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSPlot::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__SPlot_139_0_36, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSPlot::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__SPlot_139_0_37, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSPlot::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__SPlotLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__SPlot_139_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__SPlot_139_0_42, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSPlot::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__SPlot_139_0_43, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSPlot::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__SPlot_139_0_44, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSPlot::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__SPlot_139_0_45, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSPlot::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TSPlot", 708, G__G__SPlot_139_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__SPlot() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__SPlot() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__SPlot() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__SPlotLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__SPlotLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__SPlotLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__SPlotLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__SPlotLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__SPlotLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__SPlotLN_TBrowser = { "TBrowser" , 99 , -1 };
G__linked_taginfo G__G__SPlotLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__G__SPlotLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__SPlotLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__G__SPlotLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__G__SPlotLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__G__SPlotLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__G__SPlotLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__G__SPlotLN_TMatrixTlEdoublegR = { "TMatrixT<double>" , 99 , -1 };
G__linked_taginfo G__G__SPlotLN_TH1D = { "TH1D" , 99 , -1 };
G__linked_taginfo G__G__SPlotLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__G__SPlotLN_TSPlot = { "TSPlot" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__SPlot() {
  G__G__SPlotLN_TClass.tagnum = -1 ;
  G__G__SPlotLN_TBuffer.tagnum = -1 ;
  G__G__SPlotLN_TMemberInspector.tagnum = -1 ;
  G__G__SPlotLN_TObject.tagnum = -1 ;
  G__G__SPlotLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__SPlotLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__SPlotLN_TBrowser.tagnum = -1 ;
  G__G__SPlotLN_TObjArray.tagnum = -1 ;
  G__G__SPlotLN_TString.tagnum = -1 ;
  G__G__SPlotLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__G__SPlotLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__G__SPlotLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__G__SPlotLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__G__SPlotLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__G__SPlotLN_TMatrixTlEdoublegR.tagnum = -1 ;
  G__G__SPlotLN_TH1D.tagnum = -1 ;
  G__G__SPlotLN_TTree.tagnum = -1 ;
  G__G__SPlotLN_TSPlot.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__SPlot() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__SPlotLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__SPlotLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__SPlotLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__SPlotLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__SPlotLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__SPlotLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__SPlotLN_TBrowser);
   G__get_linked_tagnum_fwd(&G__G__SPlotLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__G__SPlotLN_TString);
   G__get_linked_tagnum_fwd(&G__G__SPlotLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__G__SPlotLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__SPlotLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__SPlotLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__SPlotLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__SPlotLN_TMatrixTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__SPlotLN_TH1D);
   G__get_linked_tagnum_fwd(&G__G__SPlotLN_TTree);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SPlotLN_TSPlot),sizeof(TSPlot),-1,324864,"class to disentangle signal from background",G__setup_memvarTSPlot,G__setup_memfuncTSPlot);
}
extern "C" void G__cpp_setupG__SPlot(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__SPlot()");
  G__set_cpp_environmentG__SPlot();
  G__cpp_setup_tagtableG__SPlot();

  G__cpp_setup_inheritanceG__SPlot();

  G__cpp_setup_typetableG__SPlot();

  G__cpp_setup_memvarG__SPlot();

  G__cpp_setup_memfuncG__SPlot();
  G__cpp_setup_globalG__SPlot();
  G__cpp_setup_funcG__SPlot();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__SPlot();
  return;
}
class G__cpp_setup_initG__SPlot {
  public:
    G__cpp_setup_initG__SPlot() { G__add_setup_func("G__SPlot",(G__incsetup)(&G__cpp_setupG__SPlot)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__SPlot() { G__remove_setup_func("G__SPlot"); }
};
G__cpp_setup_initG__SPlot G__cpp_setup_initializerG__SPlot;

