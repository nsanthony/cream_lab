//
// File generated by core/utils/src/rootcint_tmp at Mon Apr 13 13:45:43 2015

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__Fumili.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TFumili_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TFumili(void *p = 0);
   static void *newArray_TFumili(Long_t size, void *p);
   static void delete_TFumili(void *p);
   static void deleteArray_TFumili(void *p);
   static void destruct_TFumili(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TFumili*)
   {
      ::TFumili *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TFumili >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TFumili", ::TFumili::Class_Version(), "include/TFumili.h", 21,
                  typeid(::TFumili), DefineBehavior(ptr, ptr),
                  &::TFumili::Dictionary, isa_proxy, 0,
                  sizeof(::TFumili) );
      instance.SetNew(&new_TFumili);
      instance.SetNewArray(&newArray_TFumili);
      instance.SetDelete(&delete_TFumili);
      instance.SetDeleteArray(&deleteArray_TFumili);
      instance.SetDestructor(&destruct_TFumili);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TFumili*)
   {
      return GenerateInitInstanceLocal((::TFumili*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TFumili*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TFumiliMinimizer_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TFumiliMinimizer(void *p = 0);
   static void *newArray_TFumiliMinimizer(Long_t size, void *p);
   static void delete_TFumiliMinimizer(void *p);
   static void deleteArray_TFumiliMinimizer(void *p);
   static void destruct_TFumiliMinimizer(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TFumiliMinimizer*)
   {
      ::TFumiliMinimizer *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TFumiliMinimizer >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TFumiliMinimizer", ::TFumiliMinimizer::Class_Version(), "include/TFumiliMinimizer.h", 47,
                  typeid(::TFumiliMinimizer), DefineBehavior(ptr, ptr),
                  &::TFumiliMinimizer::Dictionary, isa_proxy, 0,
                  sizeof(::TFumiliMinimizer) );
      instance.SetNew(&new_TFumiliMinimizer);
      instance.SetNewArray(&newArray_TFumiliMinimizer);
      instance.SetDelete(&delete_TFumiliMinimizer);
      instance.SetDeleteArray(&deleteArray_TFumiliMinimizer);
      instance.SetDestructor(&destruct_TFumiliMinimizer);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TFumiliMinimizer*)
   {
      return GenerateInitInstanceLocal((::TFumiliMinimizer*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TFumiliMinimizer*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TFumili::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TFumili::Class_Name()
{
   return "TFumili";
}

//______________________________________________________________________________
const char *TFumili::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TFumili*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TFumili::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TFumili*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TFumili::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TFumili*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TFumili::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TFumili*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TFumiliMinimizer::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TFumiliMinimizer::Class_Name()
{
   return "TFumiliMinimizer";
}

//______________________________________________________________________________
const char *TFumiliMinimizer::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TFumiliMinimizer*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TFumiliMinimizer::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TFumiliMinimizer*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TFumiliMinimizer::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TFumiliMinimizer*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TFumiliMinimizer::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TFumiliMinimizer*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TFumili::Streamer(TBuffer &R__b)
{
   // Stream an object of class TFumili.

   TVirtualFitter::Streamer(R__b);
}

//______________________________________________________________________________
void TFumili::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TFumili.
      TClass *R__cl = ::TFumili::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fMaxParam", &fMaxParam);
      R__insp.Inspect(R__cl, R__parent, "fMaxParam2", &fMaxParam2);
      R__insp.Inspect(R__cl, R__parent, "fNlog", &fNlog);
      R__insp.Inspect(R__cl, R__parent, "fNfcn", &fNfcn);
      R__insp.Inspect(R__cl, R__parent, "fNED1", &fNED1);
      R__insp.Inspect(R__cl, R__parent, "fNED2", &fNED2);
      R__insp.Inspect(R__cl, R__parent, "fNED12", &fNED12);
      R__insp.Inspect(R__cl, R__parent, "fNpar", &fNpar);
      R__insp.Inspect(R__cl, R__parent, "fNstepDec", &fNstepDec);
      R__insp.Inspect(R__cl, R__parent, "fNlimMul", &fNlimMul);
      R__insp.Inspect(R__cl, R__parent, "fNmaxIter", &fNmaxIter);
      R__insp.Inspect(R__cl, R__parent, "fLastFixed", &fLastFixed);
      R__insp.Inspect(R__cl, R__parent, "fENDFLG", &fENDFLG);
      R__insp.Inspect(R__cl, R__parent, "fINDFLG[5]", fINDFLG);
      R__insp.Inspect(R__cl, R__parent, "fGRAD", &fGRAD);
      R__insp.Inspect(R__cl, R__parent, "fWARN", &fWARN);
      R__insp.Inspect(R__cl, R__parent, "fDEBUG", &fDEBUG);
      R__insp.Inspect(R__cl, R__parent, "fLogLike", &fLogLike);
      R__insp.Inspect(R__cl, R__parent, "fNumericDerivatives", &fNumericDerivatives);
      R__insp.Inspect(R__cl, R__parent, "*fZ0", &fZ0);
      R__insp.Inspect(R__cl, R__parent, "*fZ", &fZ);
      R__insp.Inspect(R__cl, R__parent, "*fGr", &fGr);
      R__insp.Inspect(R__cl, R__parent, "*fParamError", &fParamError);
      R__insp.Inspect(R__cl, R__parent, "*fSumLog", &fSumLog);
      R__insp.Inspect(R__cl, R__parent, "*fEXDA", &fEXDA);
      R__insp.Inspect(R__cl, R__parent, "*fA", &fA);
      R__insp.Inspect(R__cl, R__parent, "*fPL0", &fPL0);
      R__insp.Inspect(R__cl, R__parent, "*fPL", &fPL);
      R__insp.Inspect(R__cl, R__parent, "*fDA", &fDA);
      R__insp.Inspect(R__cl, R__parent, "*fAMX", &fAMX);
      R__insp.Inspect(R__cl, R__parent, "*fAMN", &fAMN);
      R__insp.Inspect(R__cl, R__parent, "*fR", &fR);
      R__insp.Inspect(R__cl, R__parent, "*fDF", &fDF);
      R__insp.Inspect(R__cl, R__parent, "*fCmPar", &fCmPar);
      R__insp.Inspect(R__cl, R__parent, "fS", &fS);
      R__insp.Inspect(R__cl, R__parent, "fEPS", &fEPS);
      R__insp.Inspect(R__cl, R__parent, "fRP", &fRP);
      R__insp.Inspect(R__cl, R__parent, "fAKAPPA", &fAKAPPA);
      R__insp.Inspect(R__cl, R__parent, "fGT", &fGT);
      R__insp.Inspect(R__cl, R__parent, "*fANames", &fANames);
      R__insp.Inspect(R__cl, R__parent, "fCword", &fCword);
      fCword.ShowMembers(R__insp, strcat(R__parent,"fCword.")); R__parent[R__ncp] = 0;
      TVirtualFitter::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TFumili(void *p) {
      return  p ? new(p) ::TFumili : new ::TFumili;
   }
   static void *newArray_TFumili(Long_t nElements, void *p) {
      return p ? new(p) ::TFumili[nElements] : new ::TFumili[nElements];
   }
   // Wrapper around operator delete
   static void delete_TFumili(void *p) {
      delete ((::TFumili*)p);
   }
   static void deleteArray_TFumili(void *p) {
      delete [] ((::TFumili*)p);
   }
   static void destruct_TFumili(void *p) {
      typedef ::TFumili current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TFumili

//______________________________________________________________________________
void TFumiliMinimizer::Streamer(TBuffer &R__b)
{
   // Stream an object of class TFumiliMinimizer.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b >> fDim;
      R__b >> fNFree;
      R__b >> fMinVal;
      R__b >> fEdm;
      {
         vector<double> &R__stl =  fParams;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            double R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<double> &R__stl =  fErrors;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            double R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<double> &R__stl =  fCovar;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            double R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      R__b >> fFumili;
      R__b.CheckByteCount(R__s, R__c, TFumiliMinimizer::IsA());
   } else {
      R__c = R__b.WriteVersion(TFumiliMinimizer::IsA(), kTRUE);
      R__b << fDim;
      R__b << fNFree;
      R__b << fMinVal;
      R__b << fEdm;
      {
         vector<double> &R__stl =  fParams;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<double>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<double> &R__stl =  fErrors;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<double>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<double> &R__stl =  fCovar;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<double>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      R__b << fFumili;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TFumiliMinimizer::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TFumiliMinimizer.
      TClass *R__cl = ::TFumiliMinimizer::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fDim", &fDim);
      R__insp.Inspect(R__cl, R__parent, "fNFree", &fNFree);
      R__insp.Inspect(R__cl, R__parent, "fMinVal", &fMinVal);
      R__insp.Inspect(R__cl, R__parent, "fEdm", &fEdm);
      R__insp.Inspect(R__cl, R__parent, "fParams", (void*)&fParams);
      ::ROOT::GenericShowMembers("vector<double>", (void*)&fParams, R__insp, strcat(R__parent,"fParams."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fErrors", (void*)&fErrors);
      ::ROOT::GenericShowMembers("vector<double>", (void*)&fErrors, R__insp, strcat(R__parent,"fErrors."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fCovar", (void*)&fCovar);
      ::ROOT::GenericShowMembers("vector<double>", (void*)&fCovar, R__insp, strcat(R__parent,"fCovar."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fFumili", &fFumili);
      ::ROOT::GenericShowMembers("ROOT::Math::Minimizer", ( ::ROOT::Math::Minimizer *) (this ), R__insp, R__parent, false);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TFumiliMinimizer(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TFumiliMinimizer : new ::TFumiliMinimizer;
   }
   static void *newArray_TFumiliMinimizer(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TFumiliMinimizer[nElements] : new ::TFumiliMinimizer[nElements];
   }
   // Wrapper around operator delete
   static void delete_TFumiliMinimizer(void *p) {
      delete ((::TFumiliMinimizer*)p);
   }
   static void deleteArray_TFumiliMinimizer(void *p) {
      delete [] ((::TFumiliMinimizer*)p);
   }
   static void destruct_TFumiliMinimizer(void *p) {
      typedef ::TFumiliMinimizer current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TFumiliMinimizer

namespace ROOT {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "prec_stl/vector", 49,
                  typeid(vector<double>), DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<double>

/********************************************************
* math/fumili/src/G__Fumili.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__Fumili();

extern "C" void G__set_cpp_environmentG__Fumili() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("TFumili.h");
  G__add_compiledheader("TFumiliMinimizer.h");
  G__cpp_reset_tagtableG__Fumili();
}
#include <new>
extern "C" int G__cpp_dllrevG__Fumili() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TFumili */
static int G__G__Fumili_115_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TFumili* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TFumili((Int_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TFumili((Int_t) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TFumili[n];
       } else {
         p = new((void*) gvp) TFumili[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TFumili;
       } else {
         p = new((void*) gvp) TFumili;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FumiliLN_TFumili));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_115_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFumili*) G__getstructoffset())->BuildArrays();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_115_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFumili*) G__getstructoffset())->DeleteArrays();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_115_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFumili*) G__getstructoffset())->Derivatives((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_115_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TFumili*) G__getstructoffset())->Eval(*(Int_t*) G__Intref(&libp->para[0]), (Double_t*) G__int(libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), (Double_t*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_115_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TFumili*) G__getstructoffset())->EvalTFN((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_115_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TFumili*) G__getstructoffset())->ExecuteSetCommand((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_115_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFumili*) G__getstructoffset())->FitChisquare(*(Int_t*) G__Intref(&libp->para[0]), (Double_t*) G__int(libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), (Double_t*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_115_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFumili*) G__getstructoffset())->FitChisquareI(*(Int_t*) G__Intref(&libp->para[0]), (Double_t*) G__int(libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), (Double_t*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_115_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFumili*) G__getstructoffset())->FitLikelihood(*(Int_t*) G__Intref(&libp->para[0]), (Double_t*) G__int(libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), (Double_t*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_115_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFumili*) G__getstructoffset())->FitLikelihoodI(*(Int_t*) G__Intref(&libp->para[0]), (Double_t*) G__int(libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), (Double_t*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_115_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const TFumili*) G__getstructoffset())->GetPL0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_115_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const TFumili*) G__getstructoffset())->GetZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_115_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFumili*) G__getstructoffset())->InvertZ((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_115_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TFumili*) G__getstructoffset())->Minimize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_115_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TFumili*) G__getstructoffset())->SGZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_115_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFumili*) G__getstructoffset())->SetData((Double_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_115_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFumili*) G__getstructoffset())->SetParNumber((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_115_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TFumili::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_115_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TFumili::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_115_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TFumili::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_115_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TFumili::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_115_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFumili*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_115_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TFumili::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_115_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TFumili::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_115_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TFumili::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_115_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TFumili::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Fumili_115_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TFumili* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TFumili(*(TFumili*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FumiliLN_TFumili));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TFumili G__TTFumili;
static int G__G__Fumili_115_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TFumili*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TFumili*) (soff+(sizeof(TFumili)*i)))->~G__TTFumili();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TFumili*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TFumili*) (soff))->~G__TTFumili();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TFumiliMinimizer */
static int G__G__Fumili_128_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TFumiliMinimizer* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TFumiliMinimizer((int) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TFumiliMinimizer((int) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TFumiliMinimizer[n];
       } else {
         p = new((void*) gvp) TFumiliMinimizer[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TFumiliMinimizer;
       } else {
         p = new((void*) gvp) TFumiliMinimizer;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FumiliLN_TFumiliMinimizer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_128_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TFumiliMinimizer::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_128_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TFumiliMinimizer::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_128_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TFumiliMinimizer::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_128_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TFumiliMinimizer::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_128_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TFumiliMinimizer*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_128_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFumiliMinimizer*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_128_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFumiliMinimizer*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_128_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFumiliMinimizer*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_128_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TFumiliMinimizer::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_128_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TFumiliMinimizer::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_128_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TFumiliMinimizer::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_128_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TFumiliMinimizer::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TFumiliMinimizer G__TTFumiliMinimizer;
static int G__G__Fumili_128_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TFumiliMinimizer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TFumiliMinimizer*) (soff+(sizeof(TFumiliMinimizer)*i)))->~G__TTFumiliMinimizer();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TFumiliMinimizer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TFumiliMinimizer*) (soff))->~G__TTFumiliMinimizer();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TFumili */

/* TFumiliMinimizer */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__Fumili {
 public:
  G__Sizep2memfuncG__Fumili(): p(&G__Sizep2memfuncG__Fumili::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__Fumili::*p)();
};

size_t G__get_sizep2memfuncG__Fumili()
{
  G__Sizep2memfuncG__Fumili a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__Fumili() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__FumiliLN_TFumili))) {
     TFumili *G__Lderived;
     G__Lderived=(TFumili*)0x1000;
     {
       TVirtualFitter *G__Lpbase=(TVirtualFitter*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FumiliLN_TFumili),G__get_linked_tagnum(&G__G__FumiliLN_TVirtualFitter),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FumiliLN_TFumili),G__get_linked_tagnum(&G__G__FumiliLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FumiliLN_TFumili),G__get_linked_tagnum(&G__G__FumiliLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__FumiliLN_TFumiliMinimizer))) {
     TFumiliMinimizer *G__Lderived;
     G__Lderived=(TFumiliMinimizer*)0x1000;
     {
       ROOT::Math::Minimizer *G__Lpbase=(ROOT::Math::Minimizer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FumiliLN_TFumiliMinimizer),G__get_linked_tagnum(&G__G__FumiliLN_ROOTcLcLMathcLcLMinimizer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__Fumili() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<TSchemaHelper>",117,G__get_linked_tagnum(&G__G__FumiliLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__FumiliLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__FumiliLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__FumiliLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__FumiliLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__FumiliLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("BasicFitMethodFunction<ROOT::Math::IMultiGenFunction>",117,G__get_linked_tagnum(&G__G__FumiliLN_ROOTcLcLMathcLcLBasicFitMethodFunctionlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR),0,G__get_linked_tagnum(&G__G__FumiliLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("BasicFitMethodFunction<ROOT::Math::IMultiGradFunction>",117,G__get_linked_tagnum(&G__G__FumiliLN_ROOTcLcLMathcLcLBasicFitMethodFunctionlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR),0,G__get_linked_tagnum(&G__G__FumiliLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<double>",117,G__get_linked_tagnum(&G__G__FumiliLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__FumiliLN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__FumiliLN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__FumiliLN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__FumiliLN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TFumili */
static void G__setup_memvarTFumili(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__FumiliLN_TFumili));
   { TFumili *p; p=(TFumili*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMaxParam=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMaxParam2=",0,"fMaxParam*fMaxParam");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNlog=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNfcn=",0,"Number of FCN calls;");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNED1=",0,"Number of experimental vectors X=(x1,x2,...xK)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNED2=",0,"K - Length of vector X plus 2 (for chi2)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNED12=",0,"fNED1+fNED2");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNpar=",0,"fNpar - number of parameters");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNstepDec=",0,"fNstepDec - maximum number of step decreasing counter");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNlimMul=",0,"fNlimMul - after fNlimMul successful iterations permits four-fold increasing of fPL");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNmaxIter=",0,"fNmaxIter - maximum number of iterations");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fLastFixed=",0,"Last fixed parameter number");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fENDFLG=",0,"End flag of fit ");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fINDFLG[5]=",0,"internal flags;");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fGRAD=",0,"user calculated gradients  ");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fWARN=",0,"warnings");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fDEBUG=",0,"debug info");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fLogLike=",0,"LogLikelihood flag");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fNumericDerivatives=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fZ0=",0,"[fMaxParam2] Matrix of approximate second derivatives of objective function");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fZ=",0,"[fMaxParam2] Invers fZ0 matrix - covariance matrix");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fGr=",0,"[fMaxParam] Gradients of objective function");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fParamError=",0,"[fMaxParam] Parameter errors");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSumLog=",0,"[fNlog]");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fEXDA=",0,"[fNED12] experimental data poInt_ter");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fA=",0,"[fMaxParam] Fit parameter array");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPL0=",0,"[fMaxParam] Step initial bounds");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPL=",0,"[fMaxParam] Limits for parameters step. If <0, then parameter is fixed");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDA=",0,"[fMaxParam] Parameter step");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fAMX=",0,"[fMaxParam] Maximum param value");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fAMN=",0,"[fMaxParam] Minimum param value");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fR=",0,"[fMaxParam] Correlation factors");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDF=",0,"[fMaxParam] // First derivatives of theoretical function ");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCmPar=",0,"[fMaxParam] parameters of commands");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fS=",0,"fS - objective function value (return)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fEPS=",0,"fEPS - required precision of parameters. If fEPS<0 then ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRP=",0,"Precision of fit ( machine zero on CDC 6000) quite old yeh?");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fAKAPPA=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fGT=",0,"Expected function change in next iteration");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__FumiliLN_TString),-1,-1,4,"fANames=",0,"[fMaxParam] Parameter names");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__FumiliLN_TString),-1,-1,4,"fCword=",0,"Command string");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__FumiliLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TFumiliMinimizer */
static void G__setup_memvarTFumiliMinimizer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__FumiliLN_TFumiliMinimizer));
   { TFumiliMinimizer *p; p=(TFumiliMinimizer*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fDim=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fNFree=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fMinVal=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fEdm=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__FumiliLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fParams=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__FumiliLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fErrors=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__FumiliLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fCovar=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__FumiliLN_TFumili),-1,-1,4,"fFumili=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__FumiliLN_ROOTcLcLMathcLcLBasicFitMethodFunctionlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR),G__defined_typename("FitMethodFunction"),-2,4,"fgFunc=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__FumiliLN_ROOTcLcLMathcLcLBasicFitMethodFunctionlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR),G__defined_typename("FitMethodGradFunction"),-2,4,"fgGradFunc=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__FumiliLN_TFumili),-1,-2,4,"fgFumili=",0,"static instance (used by fcn function) ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__FumiliLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__Fumili() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTFumili(void) {
   /* TFumili */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__FumiliLN_TFumili));
   G__memfunc_setup("TFumili",698,G__G__Fumili_115_0_1, 105, G__get_linked_tagnum(&G__G__FumiliLN_TFumili), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '25' maxpar", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildArrays",1122,G__G__Fumili_115_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Chisquare",933,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - npar D - 'Double_t' 0 - params", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DeleteArrays",1221,G__G__Fumili_115_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Derivatives",1158,G__G__Fumili_115_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"D - 'Double_t' 0 - - D - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Eval",392,G__G__Fumili_115_0_7, 105, -1, G__defined_typename("Int_t"), 0, 5, 1, 1, 0, 
"i - 'Int_t' 1 - npar D - 'Double_t' 0 - grad "
"d - 'Double_t' 1 - fval D - 'Double_t' 0 - par "
"i - 'Int_t' 0 - flag", "Evaluate the minimisation function", (void*) NULL, 0);
   G__memfunc_setup("EvalTFN",624,G__G__Fumili_115_0_8, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"D - 'Double_t' 0 - - D - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ExecuteCommand",1426,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"C - - 10 - command D - 'Double_t' 0 - args "
"i - 'Int_t' 0 - nargs", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ExecuteSetCommand",1726,G__G__Fumili_115_0_10, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FitChisquare",1224,G__G__Fumili_115_0_11, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 1 - npar D - 'Double_t' 0 - gin "
"d - 'Double_t' 1 - f D - 'Double_t' 0 - u "
"i - 'Int_t' 0 - flag", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FitChisquareI",1297,G__G__Fumili_115_0_12, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 1 - npar D - 'Double_t' 0 - gin "
"d - 'Double_t' 1 - f D - 'Double_t' 0 - u "
"i - 'Int_t' 0 - flag", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FitLikelihood",1319,G__G__Fumili_115_0_13, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 1 - npar D - 'Double_t' 0 - gin "
"d - 'Double_t' 1 - f D - 'Double_t' 0 - u "
"i - 'Int_t' 0 - flag", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FitLikelihoodI",1392,G__G__Fumili_115_0_14, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 1 - npar D - 'Double_t' 0 - gin "
"d - 'Double_t' 1 - f D - 'Double_t' 0 - u "
"i - 'Int_t' 0 - flag", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FixParameter",1224,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ipar", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCovarianceMatrix",1936,(G__InterfaceMethod) NULL,68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCovarianceMatrixElement",2650,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - i i - 'Int_t' 0 - j", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetErrors",925,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 5, 1, 1, 8, 
"i - 'Int_t' 0 - ipar d - 'Double_t' 1 - eplus "
"d - 'Double_t' 1 - eminus d - 'Double_t' 1 - eparab "
"d - 'Double_t' 1 - globcc", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNumberTotalParameters",2465,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNumberFreeParameters",2335,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPL0",492,G__G__Fumili_115_0_21, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParError",1101,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - ipar", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetParameter",1217,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - ipar", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetParameter",1217,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 6, 1, 1, 8, 
"i - 'Int_t' 0 - ipar C - - 0 - name "
"d - 'Double_t' 1 - value d - 'Double_t' 1 - verr "
"d - 'Double_t' 1 - vlow d - 'Double_t' 1 - vhigh", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetParName",964,(G__InterfaceMethod) NULL,67, -1, -1, 0, 1, 1, 1, 9, "i - 'Int_t' 0 - ipar", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetStats",815,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 5, 1, 1, 8, 
"d - 'Double_t' 1 - amin d - 'Double_t' 1 - edm "
"d - 'Double_t' 1 - errdef i - 'Int_t' 1 - nvpar "
"i - 'Int_t' 1 - nparx", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSumLog",887,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetZ",378,G__G__Fumili_115_0_28, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertZ",722,G__G__Fumili_115_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsFixed",684,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - ipar", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Minimize",834,G__G__Fumili_115_0_31, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintResults",1279,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - k d - 'Double_t' 0 - p", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReleaseParameter",1634,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ipar", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SGZ",244,G__G__Fumili_115_0_34, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetData",678,G__G__Fumili_115_0_35, 121, -1, -1, 0, 3, 1, 1, 0, 
"D - 'Double_t' 0 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFitMethod",1200,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetParameter",1229,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 6, 1, 1, 0, 
"i - 'Int_t' 0 - ipar C - - 10 - parname "
"d - 'Double_t' 0 - value d - 'Double_t' 0 - verr "
"d - 'Double_t' 0 - vlow d - 'Double_t' 0 - vhigh", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetParNumber",1208,G__G__Fumili_115_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ParNum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Fumili_115_0_39, 85, G__get_linked_tagnum(&G__G__FumiliLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TFumili::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Fumili_115_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TFumili::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Fumili_115_0_41, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TFumili::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Fumili_115_0_42, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TFumili::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__FumiliLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Fumili_115_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Fumili_115_0_47, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TFumili::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Fumili_115_0_48, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TFumili::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Fumili_115_0_49, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TFumili::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Fumili_115_0_50, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TFumili::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TFumili", 698, G__G__Fumili_115_0_51, (int) ('i'), G__get_linked_tagnum(&G__G__FumiliLN_TFumili), -1, 0, 1, 1, 1, 0, "u 'TFumili' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TFumili", 824, G__G__Fumili_115_0_52, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTFumiliMinimizer(void) {
   /* TFumiliMinimizer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__FumiliLN_TFumiliMinimizer));
   G__memfunc_setup("TFumiliMinimizer",1646,G__G__Fumili_128_0_1, 105, G__get_linked_tagnum(&G__G__FumiliLN_TFumiliMinimizer), -1, 0, 1, 1, 1, 0, "i - - 0 '0' dummy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TFumiliMinimizer",1646,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__FumiliLN_TFumiliMinimizer), -1, 0, 1, 1, 4, 0, "u 'TFumiliMinimizer' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__FumiliLN_TFumiliMinimizer), -1, 1, 1, 1, 4, 0, "u 'TFumiliMinimizer' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFunction",1138,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::IBaseFunctionMultiDim' 'ROOT::Math::IMultiGenFunction' 11 - func", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFunction",1138,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::IGradientFunctionMultiDim' 'ROOT::Math::IMultiGradFunction' 11 - func", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetVariable",1106,(G__InterfaceMethod) NULL,103, -1, -1, 0, 4, 1, 1, 0, 
"h - - 0 - ivar u 'string' - 11 - name "
"d - - 0 - val d - - 0 - step", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetLimitedVariable",1818,(G__InterfaceMethod) NULL,103, -1, -1, 0, 6, 1, 1, 0, 
"h - - 0 - ivar u 'string' - 11 - name "
"d - - 0 - val d - - 0 - step "
"d - - 0 - - d - - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFixedVariable",1602,(G__InterfaceMethod) NULL,103, -1, -1, 0, 3, 1, 1, 0, 
"h - - 0 - - u 'string' - 11 - - "
"d - - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetVariableValue",1615,(G__InterfaceMethod) NULL,103, -1, -1, 0, 2, 1, 1, 0, 
"h - - 0 - ivar d - - 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Minimize",834,(G__InterfaceMethod) NULL,103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MinValue",801,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Edm",278,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("X",88,(G__InterfaceMethod) NULL,68, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MinGradient",1106,(G__InterfaceMethod) NULL,68, -1, -1, 0, 0, 1, 1, 9, "", "not available ", (void*) NULL, 1);
   G__memfunc_setup("NCalls",573,(G__InterfaceMethod) NULL,104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("NDim",360,(G__InterfaceMethod) NULL,104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("NFree",464,(G__InterfaceMethod) NULL,104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ProvidesError",1366,(G__InterfaceMethod) NULL,103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Errors",637,(G__InterfaceMethod) NULL,68, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CovMatrix",925,(G__InterfaceMethod) NULL,100, -1, -1, 0, 2, 1, 1, 8, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CovMatrixStatus",1569,(G__InterfaceMethod) NULL,105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Fcn",279,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 5, 3, 2, 0, 
"i - - 1 - - D - - 0 - - "
"d - - 1 - f D - - 0 - - "
"i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EvaluateFCN",1038,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 2, 3, 2, 0, 
"D - - 10 - x D - - 0 - g", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Fumili_128_0_24, 85, G__get_linked_tagnum(&G__G__FumiliLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TFumiliMinimizer::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Fumili_128_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TFumiliMinimizer::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Fumili_128_0_26, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TFumiliMinimizer::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Fumili_128_0_27, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TFumiliMinimizer::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__G__Fumili_128_0_28, 85, G__get_linked_tagnum(&G__G__FumiliLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__G__Fumili_128_0_29, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__G__Fumili_128_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Fumili_128_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Fumili_128_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TFumiliMinimizer::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Fumili_128_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TFumiliMinimizer::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Fumili_128_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TFumiliMinimizer::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Fumili_128_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TFumiliMinimizer::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TFumiliMinimizer", 1772, G__G__Fumili_128_0_36, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__Fumili() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
   G__memvar_setup((void*)(&gFumili),85,0,0,G__get_linked_tagnum(&G__G__FumiliLN_TFumili),-1,-1,1,"gFumili=",0,(char*)NULL);

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__Fumili() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__Fumili() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__FumiliLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__FumiliLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__FumiliLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__FumiliLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__FumiliLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__G__FumiliLN_ROOT = { "ROOT" , 110 , -1 };
G__linked_taginfo G__G__FumiliLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__G__FumiliLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__FumiliLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__FumiliLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__FumiliLN_TVirtualFitter = { "TVirtualFitter" , 99 , -1 };
G__linked_taginfo G__G__FumiliLN_TFumili = { "TFumili" , 99 , -1 };
G__linked_taginfo G__G__FumiliLN_ROOTcLcLMath = { "ROOT::Math" , 110 , -1 };
G__linked_taginfo G__G__FumiliLN_ROOTcLcLMathcLcLIBaseFunctionMultiDim = { "ROOT::Math::IBaseFunctionMultiDim" , 99 , -1 };
G__linked_taginfo G__G__FumiliLN_ROOTcLcLMathcLcLIGradientFunctionMultiDim = { "ROOT::Math::IGradientFunctionMultiDim" , 99 , -1 };
G__linked_taginfo G__G__FumiliLN_ROOTcLcLMathcLcLMinimizer = { "ROOT::Math::Minimizer" , 99 , -1 };
G__linked_taginfo G__G__FumiliLN_ROOTcLcLMathcLcLBasicFitMethodFunctionlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR = { "ROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim>" , 99 , -1 };
G__linked_taginfo G__G__FumiliLN_ROOTcLcLMathcLcLBasicFitMethodFunctionlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR = { "ROOT::Math::BasicFitMethodFunction<ROOT::Math::IGradientFunctionMultiDim>" , 99 , -1 };
G__linked_taginfo G__G__FumiliLN_TFumiliMinimizer = { "TFumiliMinimizer" , 99 , -1 };
G__linked_taginfo G__G__FumiliLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__G__FumiliLN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR = { "reverse_iterator<vector<double,allocator<double> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__Fumili() {
  G__G__FumiliLN_TClass.tagnum = -1 ;
  G__G__FumiliLN_TBuffer.tagnum = -1 ;
  G__G__FumiliLN_TMemberInspector.tagnum = -1 ;
  G__G__FumiliLN_TObject.tagnum = -1 ;
  G__G__FumiliLN_TNamed.tagnum = -1 ;
  G__G__FumiliLN_ROOT.tagnum = -1 ;
  G__G__FumiliLN_string.tagnum = -1 ;
  G__G__FumiliLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__FumiliLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__FumiliLN_TString.tagnum = -1 ;
  G__G__FumiliLN_TVirtualFitter.tagnum = -1 ;
  G__G__FumiliLN_TFumili.tagnum = -1 ;
  G__G__FumiliLN_ROOTcLcLMath.tagnum = -1 ;
  G__G__FumiliLN_ROOTcLcLMathcLcLIBaseFunctionMultiDim.tagnum = -1 ;
  G__G__FumiliLN_ROOTcLcLMathcLcLIGradientFunctionMultiDim.tagnum = -1 ;
  G__G__FumiliLN_ROOTcLcLMathcLcLMinimizer.tagnum = -1 ;
  G__G__FumiliLN_ROOTcLcLMathcLcLBasicFitMethodFunctionlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR.tagnum = -1 ;
  G__G__FumiliLN_ROOTcLcLMathcLcLBasicFitMethodFunctionlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR.tagnum = -1 ;
  G__G__FumiliLN_TFumiliMinimizer.tagnum = -1 ;
  G__G__FumiliLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__G__FumiliLN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__Fumili() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__FumiliLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__FumiliLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__FumiliLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__FumiliLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__FumiliLN_TNamed);
   G__get_linked_tagnum_fwd(&G__G__FumiliLN_ROOT);
   G__get_linked_tagnum_fwd(&G__G__FumiliLN_string);
   G__get_linked_tagnum_fwd(&G__G__FumiliLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__FumiliLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__FumiliLN_TString);
   G__get_linked_tagnum_fwd(&G__G__FumiliLN_TVirtualFitter);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__FumiliLN_TFumili),sizeof(TFumili),-1,62720,"The FUMILI Minimization package",G__setup_memvarTFumili,G__setup_memfuncTFumili);
   G__get_linked_tagnum_fwd(&G__G__FumiliLN_ROOTcLcLMath);
   G__get_linked_tagnum_fwd(&G__G__FumiliLN_ROOTcLcLMathcLcLIBaseFunctionMultiDim);
   G__get_linked_tagnum_fwd(&G__G__FumiliLN_ROOTcLcLMathcLcLIGradientFunctionMultiDim);
   G__get_linked_tagnum_fwd(&G__G__FumiliLN_ROOTcLcLMathcLcLMinimizer);
   G__get_linked_tagnum_fwd(&G__G__FumiliLN_ROOTcLcLMathcLcLBasicFitMethodFunctionlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR);
   G__get_linked_tagnum_fwd(&G__G__FumiliLN_ROOTcLcLMathcLcLBasicFitMethodFunctionlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__FumiliLN_TFumiliMinimizer),sizeof(TFumiliMinimizer),-1,3840,"Implementation of Minimizer interface using TFumili ",G__setup_memvarTFumiliMinimizer,G__setup_memfuncTFumiliMinimizer);
   G__get_linked_tagnum_fwd(&G__G__FumiliLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__G__FumiliLN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupG__Fumili(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__Fumili()");
  G__set_cpp_environmentG__Fumili();
  G__cpp_setup_tagtableG__Fumili();

  G__cpp_setup_inheritanceG__Fumili();

  G__cpp_setup_typetableG__Fumili();

  G__cpp_setup_memvarG__Fumili();

  G__cpp_setup_memfuncG__Fumili();
  G__cpp_setup_globalG__Fumili();
  G__cpp_setup_funcG__Fumili();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__Fumili();
  return;
}
class G__cpp_setup_initG__Fumili {
  public:
    G__cpp_setup_initG__Fumili() { G__add_setup_func("G__Fumili",(G__incsetup)(&G__cpp_setupG__Fumili)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__Fumili() { G__remove_setup_func("G__Fumili"); }
};
G__cpp_setup_initG__Fumili G__cpp_setup_initializerG__Fumili;

