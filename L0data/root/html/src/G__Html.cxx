//
// File generated by core/utils/src/rootcint_tmp at Mon Apr 13 13:45:04 2015

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__Html.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TClassDocOutput_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TClassDocOutput(void *p);
   static void deleteArray_TClassDocOutput(void *p);
   static void destruct_TClassDocOutput(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TClassDocOutput*)
   {
      ::TClassDocOutput *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TClassDocOutput >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TClassDocOutput", ::TClassDocOutput::Class_Version(), "include/TClassDocOutput.h", 22,
                  typeid(::TClassDocOutput), DefineBehavior(ptr, ptr),
                  &::TClassDocOutput::Dictionary, isa_proxy, 0,
                  sizeof(::TClassDocOutput) );
      instance.SetDelete(&delete_TClassDocOutput);
      instance.SetDeleteArray(&deleteArray_TClassDocOutput);
      instance.SetDestructor(&destruct_TClassDocOutput);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TClassDocOutput*)
   {
      return GenerateInitInstanceLocal((::TClassDocOutput*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TClassDocOutput*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TDocOutput_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TDocOutput(void *p);
   static void deleteArray_TDocOutput(void *p);
   static void destruct_TDocOutput(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TDocOutput*)
   {
      ::TDocOutput *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TDocOutput >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TDocOutput", ::TDocOutput::Class_Version(), "include/TDocOutput.h", 44,
                  typeid(::TDocOutput), DefineBehavior(ptr, ptr),
                  &::TDocOutput::Dictionary, isa_proxy, 0,
                  sizeof(::TDocOutput) );
      instance.SetDelete(&delete_TDocOutput);
      instance.SetDeleteArray(&deleteArray_TDocOutput);
      instance.SetDestructor(&destruct_TDocOutput);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TDocOutput*)
   {
      return GenerateInitInstanceLocal((::TDocOutput*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TDocOutput*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void THtml_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_THtml(void *p = 0);
   static void *newArray_THtml(Long_t size, void *p);
   static void delete_THtml(void *p);
   static void deleteArray_THtml(void *p);
   static void destruct_THtml(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::THtml*)
   {
      ::THtml *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::THtml >(0);
      static ::ROOT::TGenericClassInfo 
         instance("THtml", ::THtml::Class_Version(), "include/THtml.h", 44,
                  typeid(::THtml), DefineBehavior(ptr, ptr),
                  &::THtml::Dictionary, isa_proxy, 0,
                  sizeof(::THtml) );
      instance.SetNew(&new_THtml);
      instance.SetNewArray(&newArray_THtml);
      instance.SetDelete(&delete_THtml);
      instance.SetDeleteArray(&deleteArray_THtml);
      instance.SetDestructor(&destruct_THtml);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::THtml*)
   {
      return GenerateInitInstanceLocal((::THtml*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::THtml*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TDocParser_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TDocParser(void *p);
   static void deleteArray_TDocParser(void *p);
   static void destruct_TDocParser(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TDocParser*)
   {
      ::TDocParser *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TDocParser >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TDocParser", ::TDocParser::Class_Version(), "include/TDocParser.h", 52,
                  typeid(::TDocParser), DefineBehavior(ptr, ptr),
                  &::TDocParser::Dictionary, isa_proxy, 0,
                  sizeof(::TDocParser) );
      instance.SetDelete(&delete_TDocParser);
      instance.SetDeleteArray(&deleteArray_TDocParser);
      instance.SetDestructor(&destruct_TDocParser);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TDocParser*)
   {
      return GenerateInitInstanceLocal((::TDocParser*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TDocParser*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TModuleDocInfo_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TModuleDocInfo(void *p);
   static void deleteArray_TModuleDocInfo(void *p);
   static void destruct_TModuleDocInfo(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TModuleDocInfo*)
   {
      ::TModuleDocInfo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TModuleDocInfo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TModuleDocInfo", ::TModuleDocInfo::Class_Version(), "include/TDocInfo.h", 108,
                  typeid(::TModuleDocInfo), DefineBehavior(ptr, ptr),
                  &::TModuleDocInfo::Dictionary, isa_proxy, 0,
                  sizeof(::TModuleDocInfo) );
      instance.SetDelete(&delete_TModuleDocInfo);
      instance.SetDeleteArray(&deleteArray_TModuleDocInfo);
      instance.SetDestructor(&destruct_TModuleDocInfo);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TModuleDocInfo*)
   {
      return GenerateInitInstanceLocal((::TModuleDocInfo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TModuleDocInfo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TDocDirective_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TDocDirective*)
   {
      ::TDocDirective *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TDocDirective >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TDocDirective", ::TDocDirective::Class_Version(), "include/TDocDirective.h", 36,
                  typeid(::TDocDirective), DefineBehavior(ptr, ptr),
                  &::TDocDirective::Dictionary, isa_proxy, 0,
                  sizeof(::TDocDirective) );
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TDocDirective*)
   {
      return GenerateInitInstanceLocal((::TDocDirective*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TDocDirective*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TDocHtmlDirective_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TDocHtmlDirective(void *p = 0);
   static void *newArray_TDocHtmlDirective(Long_t size, void *p);
   static void delete_TDocHtmlDirective(void *p);
   static void deleteArray_TDocHtmlDirective(void *p);
   static void destruct_TDocHtmlDirective(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TDocHtmlDirective*)
   {
      ::TDocHtmlDirective *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TDocHtmlDirective >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TDocHtmlDirective", ::TDocHtmlDirective::Class_Version(), "include/TDocDirective.h", 81,
                  typeid(::TDocHtmlDirective), DefineBehavior(ptr, ptr),
                  &::TDocHtmlDirective::Dictionary, isa_proxy, 0,
                  sizeof(::TDocHtmlDirective) );
      instance.SetNew(&new_TDocHtmlDirective);
      instance.SetNewArray(&newArray_TDocHtmlDirective);
      instance.SetDelete(&delete_TDocHtmlDirective);
      instance.SetDeleteArray(&deleteArray_TDocHtmlDirective);
      instance.SetDestructor(&destruct_TDocHtmlDirective);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TDocHtmlDirective*)
   {
      return GenerateInitInstanceLocal((::TDocHtmlDirective*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TDocHtmlDirective*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TDocMacroDirective_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TDocMacroDirective(void *p = 0);
   static void *newArray_TDocMacroDirective(Long_t size, void *p);
   static void delete_TDocMacroDirective(void *p);
   static void deleteArray_TDocMacroDirective(void *p);
   static void destruct_TDocMacroDirective(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TDocMacroDirective*)
   {
      ::TDocMacroDirective *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TDocMacroDirective >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TDocMacroDirective", ::TDocMacroDirective::Class_Version(), "include/TDocDirective.h", 96,
                  typeid(::TDocMacroDirective), DefineBehavior(ptr, ptr),
                  &::TDocMacroDirective::Dictionary, isa_proxy, 0,
                  sizeof(::TDocMacroDirective) );
      instance.SetNew(&new_TDocMacroDirective);
      instance.SetNewArray(&newArray_TDocMacroDirective);
      instance.SetDelete(&delete_TDocMacroDirective);
      instance.SetDeleteArray(&deleteArray_TDocMacroDirective);
      instance.SetDestructor(&destruct_TDocMacroDirective);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TDocMacroDirective*)
   {
      return GenerateInitInstanceLocal((::TDocMacroDirective*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TDocMacroDirective*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TDocLatexDirective_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TDocLatexDirective(void *p = 0);
   static void *newArray_TDocLatexDirective(Long_t size, void *p);
   static void delete_TDocLatexDirective(void *p);
   static void deleteArray_TDocLatexDirective(void *p);
   static void destruct_TDocLatexDirective(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TDocLatexDirective*)
   {
      ::TDocLatexDirective *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TDocLatexDirective >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TDocLatexDirective", ::TDocLatexDirective::Class_Version(), "include/TDocDirective.h", 120,
                  typeid(::TDocLatexDirective), DefineBehavior(ptr, ptr),
                  &::TDocLatexDirective::Dictionary, isa_proxy, 0,
                  sizeof(::TDocLatexDirective) );
      instance.SetNew(&new_TDocLatexDirective);
      instance.SetNewArray(&newArray_TDocLatexDirective);
      instance.SetDelete(&delete_TDocLatexDirective);
      instance.SetDeleteArray(&deleteArray_TDocLatexDirective);
      instance.SetDestructor(&destruct_TDocLatexDirective);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TDocLatexDirective*)
   {
      return GenerateInitInstanceLocal((::TDocLatexDirective*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TDocLatexDirective*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TClassDocInfo_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TClassDocInfo(void *p);
   static void deleteArray_TClassDocInfo(void *p);
   static void destruct_TClassDocInfo(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TClassDocInfo*)
   {
      ::TClassDocInfo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TClassDocInfo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TClassDocInfo", ::TClassDocInfo::Class_Version(), "include/TDocInfo.h", 34,
                  typeid(::TClassDocInfo), DefineBehavior(ptr, ptr),
                  &::TClassDocInfo::Dictionary, isa_proxy, 0,
                  sizeof(::TClassDocInfo) );
      instance.SetDelete(&delete_TClassDocInfo);
      instance.SetDeleteArray(&deleteArray_TClassDocInfo);
      instance.SetDestructor(&destruct_TClassDocInfo);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TClassDocInfo*)
   {
      return GenerateInitInstanceLocal((::TClassDocInfo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TClassDocInfo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TLibraryDocInfo_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TLibraryDocInfo(void *p = 0);
   static void *newArray_TLibraryDocInfo(Long_t size, void *p);
   static void delete_TLibraryDocInfo(void *p);
   static void deleteArray_TLibraryDocInfo(void *p);
   static void destruct_TLibraryDocInfo(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TLibraryDocInfo*)
   {
      ::TLibraryDocInfo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TLibraryDocInfo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TLibraryDocInfo", ::TLibraryDocInfo::Class_Version(), "include/TDocInfo.h", 142,
                  typeid(::TLibraryDocInfo), DefineBehavior(ptr, ptr),
                  &::TLibraryDocInfo::Dictionary, isa_proxy, 0,
                  sizeof(::TLibraryDocInfo) );
      instance.SetNew(&new_TLibraryDocInfo);
      instance.SetNewArray(&newArray_TLibraryDocInfo);
      instance.SetDelete(&delete_TLibraryDocInfo);
      instance.SetDeleteArray(&deleteArray_TLibraryDocInfo);
      instance.SetDestructor(&destruct_TLibraryDocInfo);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TLibraryDocInfo*)
   {
      return GenerateInitInstanceLocal((::TLibraryDocInfo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TLibraryDocInfo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void THtmlcLcLTHelperBase_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_THtmlcLcLTHelperBase(void *p = 0);
   static void *newArray_THtmlcLcLTHelperBase(Long_t size, void *p);
   static void delete_THtmlcLcLTHelperBase(void *p);
   static void deleteArray_THtmlcLcLTHelperBase(void *p);
   static void destruct_THtmlcLcLTHelperBase(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::THtml::THelperBase*)
   {
      ::THtml::THelperBase *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::THtml::THelperBase >(0);
      static ::ROOT::TGenericClassInfo 
         instance("THtml::THelperBase", ::THtml::THelperBase::Class_Version(), "include/THtml.h", 48,
                  typeid(::THtml::THelperBase), DefineBehavior(ptr, ptr),
                  &::THtml::THelperBase::Dictionary, isa_proxy, 0,
                  sizeof(::THtml::THelperBase) );
      instance.SetNew(&new_THtmlcLcLTHelperBase);
      instance.SetNewArray(&newArray_THtmlcLcLTHelperBase);
      instance.SetDelete(&delete_THtmlcLcLTHelperBase);
      instance.SetDeleteArray(&deleteArray_THtmlcLcLTHelperBase);
      instance.SetDestructor(&destruct_THtmlcLcLTHelperBase);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::THtml::THelperBase*)
   {
      return GenerateInitInstanceLocal((::THtml::THelperBase*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::THtml::THelperBase*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void THtmlcLcLTFileSysEntry_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_THtmlcLcLTFileSysEntry(void *p);
   static void deleteArray_THtmlcLcLTFileSysEntry(void *p);
   static void destruct_THtmlcLcLTFileSysEntry(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::THtml::TFileSysEntry*)
   {
      ::THtml::TFileSysEntry *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::THtml::TFileSysEntry >(0);
      static ::ROOT::TGenericClassInfo 
         instance("THtml::TFileSysEntry", ::THtml::TFileSysEntry::Class_Version(), "include/THtml.h", 110,
                  typeid(::THtml::TFileSysEntry), DefineBehavior(ptr, ptr),
                  &::THtml::TFileSysEntry::Dictionary, isa_proxy, 0,
                  sizeof(::THtml::TFileSysEntry) );
      instance.SetDelete(&delete_THtmlcLcLTFileSysEntry);
      instance.SetDeleteArray(&deleteArray_THtmlcLcLTFileSysEntry);
      instance.SetDestructor(&destruct_THtmlcLcLTFileSysEntry);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::THtml::TFileSysEntry*)
   {
      return GenerateInitInstanceLocal((::THtml::TFileSysEntry*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::THtml::TFileSysEntry*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void THtmlcLcLTModuleDefinition_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_THtmlcLcLTModuleDefinition(void *p = 0);
   static void *newArray_THtmlcLcLTModuleDefinition(Long_t size, void *p);
   static void delete_THtmlcLcLTModuleDefinition(void *p);
   static void deleteArray_THtmlcLcLTModuleDefinition(void *p);
   static void destruct_THtmlcLcLTModuleDefinition(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::THtml::TModuleDefinition*)
   {
      ::THtml::TModuleDefinition *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::THtml::TModuleDefinition >(0);
      static ::ROOT::TGenericClassInfo 
         instance("THtml::TModuleDefinition", ::THtml::TModuleDefinition::Class_Version(), "include/THtml.h", 65,
                  typeid(::THtml::TModuleDefinition), DefineBehavior(ptr, ptr),
                  &::THtml::TModuleDefinition::Dictionary, isa_proxy, 0,
                  sizeof(::THtml::TModuleDefinition) );
      instance.SetNew(&new_THtmlcLcLTModuleDefinition);
      instance.SetNewArray(&newArray_THtmlcLcLTModuleDefinition);
      instance.SetDelete(&delete_THtmlcLcLTModuleDefinition);
      instance.SetDeleteArray(&deleteArray_THtmlcLcLTModuleDefinition);
      instance.SetDestructor(&destruct_THtmlcLcLTModuleDefinition);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::THtml::TModuleDefinition*)
   {
      return GenerateInitInstanceLocal((::THtml::TModuleDefinition*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::THtml::TModuleDefinition*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void THtmlcLcLTFileDefinition_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_THtmlcLcLTFileDefinition(void *p = 0);
   static void *newArray_THtmlcLcLTFileDefinition(Long_t size, void *p);
   static void delete_THtmlcLcLTFileDefinition(void *p);
   static void deleteArray_THtmlcLcLTFileDefinition(void *p);
   static void destruct_THtmlcLcLTFileDefinition(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::THtml::TFileDefinition*)
   {
      ::THtml::TFileDefinition *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::THtml::TFileDefinition >(0);
      static ::ROOT::TGenericClassInfo 
         instance("THtml::TFileDefinition", ::THtml::TFileDefinition::Class_Version(), "include/THtml.h", 75,
                  typeid(::THtml::TFileDefinition), DefineBehavior(ptr, ptr),
                  &::THtml::TFileDefinition::Dictionary, isa_proxy, 0,
                  sizeof(::THtml::TFileDefinition) );
      instance.SetNew(&new_THtmlcLcLTFileDefinition);
      instance.SetNewArray(&newArray_THtmlcLcLTFileDefinition);
      instance.SetDelete(&delete_THtmlcLcLTFileDefinition);
      instance.SetDeleteArray(&deleteArray_THtmlcLcLTFileDefinition);
      instance.SetDestructor(&destruct_THtmlcLcLTFileDefinition);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::THtml::TFileDefinition*)
   {
      return GenerateInitInstanceLocal((::THtml::TFileDefinition*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::THtml::TFileDefinition*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void THtmlcLcLTPathDefinition_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_THtmlcLcLTPathDefinition(void *p = 0);
   static void *newArray_THtmlcLcLTPathDefinition(Long_t size, void *p);
   static void delete_THtmlcLcLTPathDefinition(void *p);
   static void deleteArray_THtmlcLcLTPathDefinition(void *p);
   static void destruct_THtmlcLcLTPathDefinition(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::THtml::TPathDefinition*)
   {
      ::THtml::TPathDefinition *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::THtml::TPathDefinition >(0);
      static ::ROOT::TGenericClassInfo 
         instance("THtml::TPathDefinition", ::THtml::TPathDefinition::Class_Version(), "include/THtml.h", 96,
                  typeid(::THtml::TPathDefinition), DefineBehavior(ptr, ptr),
                  &::THtml::TPathDefinition::Dictionary, isa_proxy, 0,
                  sizeof(::THtml::TPathDefinition) );
      instance.SetNew(&new_THtmlcLcLTPathDefinition);
      instance.SetNewArray(&newArray_THtmlcLcLTPathDefinition);
      instance.SetDelete(&delete_THtmlcLcLTPathDefinition);
      instance.SetDeleteArray(&deleteArray_THtmlcLcLTPathDefinition);
      instance.SetDestructor(&destruct_THtmlcLcLTPathDefinition);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::THtml::TPathDefinition*)
   {
      return GenerateInitInstanceLocal((::THtml::TPathDefinition*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::THtml::TPathDefinition*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void THtmlcLcLTFileSysDir_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_THtmlcLcLTFileSysDir(void *p);
   static void deleteArray_THtmlcLcLTFileSysDir(void *p);
   static void destruct_THtmlcLcLTFileSysDir(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::THtml::TFileSysDir*)
   {
      ::THtml::TFileSysDir *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::THtml::TFileSysDir >(0);
      static ::ROOT::TGenericClassInfo 
         instance("THtml::TFileSysDir", ::THtml::TFileSysDir::Class_Version(), "include/THtml.h", 137,
                  typeid(::THtml::TFileSysDir), DefineBehavior(ptr, ptr),
                  &::THtml::TFileSysDir::Dictionary, isa_proxy, 0,
                  sizeof(::THtml::TFileSysDir) );
      instance.SetDelete(&delete_THtmlcLcLTFileSysDir);
      instance.SetDeleteArray(&deleteArray_THtmlcLcLTFileSysDir);
      instance.SetDestructor(&destruct_THtmlcLcLTFileSysDir);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::THtml::TFileSysDir*)
   {
      return GenerateInitInstanceLocal((::THtml::TFileSysDir*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::THtml::TFileSysDir*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void THtmlcLcLTFileSysDB_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_THtmlcLcLTFileSysDB(void *p);
   static void deleteArray_THtmlcLcLTFileSysDB(void *p);
   static void destruct_THtmlcLcLTFileSysDB(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::THtml::TFileSysDB*)
   {
      ::THtml::TFileSysDB *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::THtml::TFileSysDB >(0);
      static ::ROOT::TGenericClassInfo 
         instance("THtml::TFileSysDB", ::THtml::TFileSysDB::Class_Version(), "include/THtml.h", 173,
                  typeid(::THtml::TFileSysDB), DefineBehavior(ptr, ptr),
                  &::THtml::TFileSysDB::Dictionary, isa_proxy, 0,
                  sizeof(::THtml::TFileSysDB) );
      instance.SetDelete(&delete_THtmlcLcLTFileSysDB);
      instance.SetDeleteArray(&deleteArray_THtmlcLcLTFileSysDB);
      instance.SetDestructor(&destruct_THtmlcLcLTFileSysDB);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::THtml::TFileSysDB*)
   {
      return GenerateInitInstanceLocal((::THtml::TFileSysDB*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::THtml::TFileSysDB*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void THtmlcLcLTFileSysRoot_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_THtmlcLcLTFileSysRoot(void *p);
   static void deleteArray_THtmlcLcLTFileSysRoot(void *p);
   static void destruct_THtmlcLcLTFileSysRoot(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::THtml::TFileSysRoot*)
   {
      ::THtml::TFileSysRoot *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::THtml::TFileSysRoot >(0);
      static ::ROOT::TGenericClassInfo 
         instance("THtml::TFileSysRoot", ::THtml::TFileSysRoot::Class_Version(), "include/THtml.h", 156,
                  typeid(::THtml::TFileSysRoot), DefineBehavior(ptr, ptr),
                  &::THtml::TFileSysRoot::Dictionary, isa_proxy, 0,
                  sizeof(::THtml::TFileSysRoot) );
      instance.SetDelete(&delete_THtmlcLcLTFileSysRoot);
      instance.SetDeleteArray(&deleteArray_THtmlcLcLTFileSysRoot);
      instance.SetDestructor(&destruct_THtmlcLcLTFileSysRoot);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::THtml::TFileSysRoot*)
   {
      return GenerateInitInstanceLocal((::THtml::TFileSysRoot*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::THtml::TFileSysRoot*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TClassDocOutput::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TClassDocOutput::Class_Name()
{
   return "TClassDocOutput";
}

//______________________________________________________________________________
const char *TClassDocOutput::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TClassDocOutput*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TClassDocOutput::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TClassDocOutput*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TClassDocOutput::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TClassDocOutput*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TClassDocOutput::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TClassDocOutput*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDocOutput::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDocOutput::Class_Name()
{
   return "TDocOutput";
}

//______________________________________________________________________________
const char *TDocOutput::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TDocOutput*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDocOutput::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TDocOutput*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDocOutput::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TDocOutput*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDocOutput::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TDocOutput*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *THtml::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *THtml::Class_Name()
{
   return "THtml";
}

//______________________________________________________________________________
const char *THtml::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::THtml*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THtml::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::THtml*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THtml::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::THtml*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THtml::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::THtml*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDocParser::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDocParser::Class_Name()
{
   return "TDocParser";
}

//______________________________________________________________________________
const char *TDocParser::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TDocParser*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDocParser::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TDocParser*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDocParser::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TDocParser*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDocParser::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TDocParser*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TModuleDocInfo::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TModuleDocInfo::Class_Name()
{
   return "TModuleDocInfo";
}

//______________________________________________________________________________
const char *TModuleDocInfo::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TModuleDocInfo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TModuleDocInfo::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TModuleDocInfo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TModuleDocInfo::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TModuleDocInfo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TModuleDocInfo::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TModuleDocInfo*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDocDirective::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDocDirective::Class_Name()
{
   return "TDocDirective";
}

//______________________________________________________________________________
const char *TDocDirective::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TDocDirective*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDocDirective::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TDocDirective*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDocDirective::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TDocDirective*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDocDirective::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TDocDirective*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDocHtmlDirective::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDocHtmlDirective::Class_Name()
{
   return "TDocHtmlDirective";
}

//______________________________________________________________________________
const char *TDocHtmlDirective::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TDocHtmlDirective*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDocHtmlDirective::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TDocHtmlDirective*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDocHtmlDirective::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TDocHtmlDirective*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDocHtmlDirective::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TDocHtmlDirective*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDocMacroDirective::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDocMacroDirective::Class_Name()
{
   return "TDocMacroDirective";
}

//______________________________________________________________________________
const char *TDocMacroDirective::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TDocMacroDirective*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDocMacroDirective::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TDocMacroDirective*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDocMacroDirective::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TDocMacroDirective*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDocMacroDirective::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TDocMacroDirective*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDocLatexDirective::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDocLatexDirective::Class_Name()
{
   return "TDocLatexDirective";
}

//______________________________________________________________________________
const char *TDocLatexDirective::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TDocLatexDirective*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDocLatexDirective::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TDocLatexDirective*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDocLatexDirective::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TDocLatexDirective*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDocLatexDirective::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TDocLatexDirective*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TClassDocInfo::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TClassDocInfo::Class_Name()
{
   return "TClassDocInfo";
}

//______________________________________________________________________________
const char *TClassDocInfo::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TClassDocInfo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TClassDocInfo::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TClassDocInfo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TClassDocInfo::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TClassDocInfo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TClassDocInfo::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TClassDocInfo*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TLibraryDocInfo::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TLibraryDocInfo::Class_Name()
{
   return "TLibraryDocInfo";
}

//______________________________________________________________________________
const char *TLibraryDocInfo::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TLibraryDocInfo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TLibraryDocInfo::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TLibraryDocInfo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TLibraryDocInfo::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TLibraryDocInfo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TLibraryDocInfo::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TLibraryDocInfo*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *THtml::THelperBase::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *THtml::THelperBase::Class_Name()
{
   return "THtml::THelperBase";
}

//______________________________________________________________________________
const char *THtml::THelperBase::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::THtml::THelperBase*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THtml::THelperBase::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::THtml::THelperBase*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THtml::THelperBase::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::THtml::THelperBase*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THtml::THelperBase::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::THtml::THelperBase*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *THtml::TFileSysEntry::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *THtml::TFileSysEntry::Class_Name()
{
   return "THtml::TFileSysEntry";
}

//______________________________________________________________________________
const char *THtml::TFileSysEntry::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::THtml::TFileSysEntry*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THtml::TFileSysEntry::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::THtml::TFileSysEntry*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THtml::TFileSysEntry::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::THtml::TFileSysEntry*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THtml::TFileSysEntry::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::THtml::TFileSysEntry*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *THtml::TModuleDefinition::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *THtml::TModuleDefinition::Class_Name()
{
   return "THtml::TModuleDefinition";
}

//______________________________________________________________________________
const char *THtml::TModuleDefinition::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::THtml::TModuleDefinition*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THtml::TModuleDefinition::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::THtml::TModuleDefinition*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THtml::TModuleDefinition::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::THtml::TModuleDefinition*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THtml::TModuleDefinition::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::THtml::TModuleDefinition*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *THtml::TFileDefinition::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *THtml::TFileDefinition::Class_Name()
{
   return "THtml::TFileDefinition";
}

//______________________________________________________________________________
const char *THtml::TFileDefinition::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::THtml::TFileDefinition*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THtml::TFileDefinition::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::THtml::TFileDefinition*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THtml::TFileDefinition::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::THtml::TFileDefinition*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THtml::TFileDefinition::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::THtml::TFileDefinition*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *THtml::TPathDefinition::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *THtml::TPathDefinition::Class_Name()
{
   return "THtml::TPathDefinition";
}

//______________________________________________________________________________
const char *THtml::TPathDefinition::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::THtml::TPathDefinition*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THtml::TPathDefinition::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::THtml::TPathDefinition*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THtml::TPathDefinition::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::THtml::TPathDefinition*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THtml::TPathDefinition::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::THtml::TPathDefinition*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *THtml::TFileSysDir::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *THtml::TFileSysDir::Class_Name()
{
   return "THtml::TFileSysDir";
}

//______________________________________________________________________________
const char *THtml::TFileSysDir::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::THtml::TFileSysDir*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THtml::TFileSysDir::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::THtml::TFileSysDir*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THtml::TFileSysDir::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::THtml::TFileSysDir*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THtml::TFileSysDir::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::THtml::TFileSysDir*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *THtml::TFileSysDB::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *THtml::TFileSysDB::Class_Name()
{
   return "THtml::TFileSysDB";
}

//______________________________________________________________________________
const char *THtml::TFileSysDB::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::THtml::TFileSysDB*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THtml::TFileSysDB::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::THtml::TFileSysDB*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THtml::TFileSysDB::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::THtml::TFileSysDB*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THtml::TFileSysDB::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::THtml::TFileSysDB*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *THtml::TFileSysRoot::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *THtml::TFileSysRoot::Class_Name()
{
   return "THtml::TFileSysRoot";
}

//______________________________________________________________________________
const char *THtml::TFileSysRoot::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::THtml::TFileSysRoot*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THtml::TFileSysRoot::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::THtml::TFileSysRoot*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THtml::TFileSysRoot::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::THtml::TFileSysRoot*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THtml::TFileSysRoot::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::THtml::TFileSysRoot*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void THtml::Streamer(TBuffer &R__b)
{
   // Stream an object of class THtml.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void THtml::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class THtml.
      TClass *R__cl = ::THtml::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fCounter", &fCounter);
      fCounter.ShowMembers(R__insp, strcat(R__parent,"fCounter.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fCounterFormat", &fCounterFormat);
      fCounterFormat.ShowMembers(R__insp, strcat(R__parent,"fCounterFormat.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fProductName", &fProductName);
      fProductName.ShowMembers(R__insp, strcat(R__parent,"fProductName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fThreadedClassIter", &fThreadedClassIter);
      R__insp.Inspect(R__cl, R__parent, "fThreadedClassCount", &fThreadedClassCount);
      R__insp.Inspect(R__cl, R__parent, "*fMakeClassMutex", &fMakeClassMutex);
      R__insp.Inspect(R__cl, R__parent, "*fGClient", &fGClient);
      R__insp.Inspect(R__cl, R__parent, "fDocSyntax", (void*)&fDocSyntax);
      ::ROOT::GenericShowMembers("THtml::DocSyntax_t", (void*)&fDocSyntax, R__insp, strcat(R__parent,"fDocSyntax."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fLinkInfo", (void*)&fLinkInfo);
      ::ROOT::GenericShowMembers("THtml::LinkInfo_t", (void*)&fLinkInfo, R__insp, strcat(R__parent,"fLinkInfo."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fOutputStyle", (void*)&fOutputStyle);
      ::ROOT::GenericShowMembers("THtml::OutputStyle_t", (void*)&fOutputStyle, R__insp, strcat(R__parent,"fOutputStyle."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fPathInfo", (void*)&fPathInfo);
      ::ROOT::GenericShowMembers("THtml::PathInfo_t", (void*)&fPathInfo, R__insp, strcat(R__parent,"fPathInfo."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fDocEntityInfo", (void*)&fDocEntityInfo);
      ::ROOT::GenericShowMembers("THtml::DocEntityInfo_t", (void*)&fDocEntityInfo, R__insp, strcat(R__parent,"fDocEntityInfo."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fPathDef", &fPathDef);
      R__insp.Inspect(R__cl, R__parent, "*fModuleDef", &fModuleDef);
      R__insp.Inspect(R__cl, R__parent, "*fFileDef", &fFileDef);
      R__insp.Inspect(R__cl, R__parent, "*fLocalFiles", &fLocalFiles);
      R__insp.Inspect(R__cl, R__parent, "fBatch", &fBatch);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_THtml(void *p) {
      return  p ? new(p) ::THtml : new ::THtml;
   }
   static void *newArray_THtml(Long_t nElements, void *p) {
      return p ? new(p) ::THtml[nElements] : new ::THtml[nElements];
   }
   // Wrapper around operator delete
   static void delete_THtml(void *p) {
      delete ((::THtml*)p);
   }
   static void deleteArray_THtml(void *p) {
      delete [] ((::THtml*)p);
   }
   static void destruct_THtml(void *p) {
      typedef ::THtml current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::THtml

//______________________________________________________________________________
void TDocParser::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDocParser.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void TDocParser::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDocParser.
      TClass *R__cl = ::TDocParser::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fHtml", &fHtml);
      R__insp.Inspect(R__cl, R__parent, "*fDocOutput", &fDocOutput);
      R__insp.Inspect(R__cl, R__parent, "fLineNo", &fLineNo);
      R__insp.Inspect(R__cl, R__parent, "fLineRaw", &fLineRaw);
      fLineRaw.ShowMembers(R__insp, strcat(R__parent,"fLineRaw.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fLineStripped", &fLineStripped);
      fLineStripped.ShowMembers(R__insp, strcat(R__parent,"fLineStripped.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fLineComment", &fLineComment);
      fLineComment.ShowMembers(R__insp, strcat(R__parent,"fLineComment.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fLineSource", &fLineSource);
      fLineSource.ShowMembers(R__insp, strcat(R__parent,"fLineSource.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fComment", &fComment);
      fComment.ShowMembers(R__insp, strcat(R__parent,"fComment.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fFirstClassDoc", &fFirstClassDoc);
      fFirstClassDoc.ShowMembers(R__insp, strcat(R__parent,"fFirstClassDoc.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fLastClassDoc", &fLastClassDoc);
      fLastClassDoc.ShowMembers(R__insp, strcat(R__parent,"fLastClassDoc.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fCurrentClass", &fCurrentClass);
      R__insp.Inspect(R__cl, R__parent, "*fRecentClass", &fRecentClass);
      R__insp.Inspect(R__cl, R__parent, "fCurrentModule", &fCurrentModule);
      fCurrentModule.ShowMembers(R__insp, strcat(R__parent,"fCurrentModule.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fCurrentMethodTag", &fCurrentMethodTag);
      fCurrentMethodTag.ShowMembers(R__insp, strcat(R__parent,"fCurrentMethodTag.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fDirectiveCount", &fDirectiveCount);
      R__insp.Inspect(R__cl, R__parent, "fLineNumber", &fLineNumber);
      R__insp.Inspect(R__cl, R__parent, "fCurrentFile", &fCurrentFile);
      fCurrentFile.ShowMembers(R__insp, strcat(R__parent,"fCurrentFile.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fMethodCounts", (void*)&fMethodCounts);
      ::ROOT::GenericShowMembers("map<std::string,Int_t>", (void*)&fMethodCounts, R__insp, strcat(R__parent,"fMethodCounts."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fDocContext", &fDocContext);
      R__insp.Inspect(R__cl, R__parent, "fParseContext", (void*)&fParseContext);
      ::ROOT::GenericShowMembers("list<UInt_t>", (void*)&fParseContext, R__insp, strcat(R__parent,"fParseContext."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fCheckForMethod", &fCheckForMethod);
      R__insp.Inspect(R__cl, R__parent, "fClassDocState", &fClassDocState);
      R__insp.Inspect(R__cl, R__parent, "fCommentAtBOL", &fCommentAtBOL);
      R__insp.Inspect(R__cl, R__parent, "fClassDescrTag", &fClassDescrTag);
      fClassDescrTag.ShowMembers(R__insp, strcat(R__parent,"fClassDescrTag.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fSourceInfoTags[5]", fSourceInfoTags);
      R__insp.Inspect(R__cl, R__parent, "fDirectiveHandlers", &fDirectiveHandlers);
      fDirectiveHandlers.ShowMembers(R__insp, strcat(R__parent,"fDirectiveHandlers.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fAllowDirectives", &fAllowDirectives);
      R__insp.Inspect(R__cl, R__parent, "fExtraLinesWithAnchor", (void*)&fExtraLinesWithAnchor);
      ::ROOT::GenericShowMembers("set<UInt_t>", (void*)&fExtraLinesWithAnchor, R__insp, strcat(R__parent,"fExtraLinesWithAnchor."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fSourceInfo[5]", fSourceInfo);
      R__insp.Inspect(R__cl, R__parent, "fMethods[3]", fMethods);
      R__insp.Inspect(R__cl, R__parent, "fDataMembers[6]", fDataMembers);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TDocParser(void *p) {
      delete ((::TDocParser*)p);
   }
   static void deleteArray_TDocParser(void *p) {
      delete [] ((::TDocParser*)p);
   }
   static void destruct_TDocParser(void *p) {
      typedef ::TDocParser current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDocParser

//______________________________________________________________________________
void TDocOutput::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDocOutput.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void TDocOutput::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDocOutput.
      TClass *R__cl = ::TDocOutput::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fHtml", &fHtml);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TDocOutput(void *p) {
      delete ((::TDocOutput*)p);
   }
   static void deleteArray_TDocOutput(void *p) {
      delete [] ((::TDocOutput*)p);
   }
   static void destruct_TDocOutput(void *p) {
      typedef ::TDocOutput current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDocOutput

//______________________________________________________________________________
void TDocDirective::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDocDirective.

   TNamed::Streamer(R__b);
}

//______________________________________________________________________________
void TDocDirective::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDocDirective.
      TClass *R__cl = ::TDocDirective::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fDocParser", &fDocParser);
      R__insp.Inspect(R__cl, R__parent, "*fHtml", &fHtml);
      R__insp.Inspect(R__cl, R__parent, "*fDocOutput", &fDocOutput);
      R__insp.Inspect(R__cl, R__parent, "fParameters", &fParameters);
      fParameters.ShowMembers(R__insp, strcat(R__parent,"fParameters.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fCounter", &fCounter);
      TNamed::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
} // end of namespace ROOT for class ::TDocDirective

//______________________________________________________________________________
void TDocHtmlDirective::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDocHtmlDirective.

   TDocDirective::Streamer(R__b);
}

//______________________________________________________________________________
void TDocHtmlDirective::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDocHtmlDirective.
      TClass *R__cl = ::TDocHtmlDirective::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fText", &fText);
      fText.ShowMembers(R__insp, strcat(R__parent,"fText.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fVerbatim", &fVerbatim);
      TDocDirective::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TDocHtmlDirective(void *p) {
      return  p ? new(p) ::TDocHtmlDirective : new ::TDocHtmlDirective;
   }
   static void *newArray_TDocHtmlDirective(Long_t nElements, void *p) {
      return p ? new(p) ::TDocHtmlDirective[nElements] : new ::TDocHtmlDirective[nElements];
   }
   // Wrapper around operator delete
   static void delete_TDocHtmlDirective(void *p) {
      delete ((::TDocHtmlDirective*)p);
   }
   static void deleteArray_TDocHtmlDirective(void *p) {
      delete [] ((::TDocHtmlDirective*)p);
   }
   static void destruct_TDocHtmlDirective(void *p) {
      typedef ::TDocHtmlDirective current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDocHtmlDirective

//______________________________________________________________________________
void TDocMacroDirective::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDocMacroDirective.

   TDocDirective::Streamer(R__b);
}

//______________________________________________________________________________
void TDocMacroDirective::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDocMacroDirective.
      TClass *R__cl = ::TDocMacroDirective::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fMacro", &fMacro);
      R__insp.Inspect(R__cl, R__parent, "fNeedGraphics", &fNeedGraphics);
      R__insp.Inspect(R__cl, R__parent, "fShowSource", &fShowSource);
      R__insp.Inspect(R__cl, R__parent, "fIsFilename", &fIsFilename);
      TDocDirective::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TDocMacroDirective(void *p) {
      return  p ? new(p) ::TDocMacroDirective : new ::TDocMacroDirective;
   }
   static void *newArray_TDocMacroDirective(Long_t nElements, void *p) {
      return p ? new(p) ::TDocMacroDirective[nElements] : new ::TDocMacroDirective[nElements];
   }
   // Wrapper around operator delete
   static void delete_TDocMacroDirective(void *p) {
      delete ((::TDocMacroDirective*)p);
   }
   static void deleteArray_TDocMacroDirective(void *p) {
      delete [] ((::TDocMacroDirective*)p);
   }
   static void destruct_TDocMacroDirective(void *p) {
      typedef ::TDocMacroDirective current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDocMacroDirective

//______________________________________________________________________________
void TDocLatexDirective::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDocLatexDirective.

   TDocDirective::Streamer(R__b);
}

//______________________________________________________________________________
void TDocLatexDirective::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDocLatexDirective.
      TClass *R__cl = ::TDocLatexDirective::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fLatex", &fLatex);
      R__insp.Inspect(R__cl, R__parent, "fFontSize", &fFontSize);
      R__insp.Inspect(R__cl, R__parent, "fSeparator", &fSeparator);
      fSeparator.ShowMembers(R__insp, strcat(R__parent,"fSeparator.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fSepIsRegexp", &fSepIsRegexp);
      R__insp.Inspect(R__cl, R__parent, "fAlignment", &fAlignment);
      fAlignment.ShowMembers(R__insp, strcat(R__parent,"fAlignment.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fBBCanvas", &fBBCanvas);
      TDocDirective::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TDocLatexDirective(void *p) {
      return  p ? new(p) ::TDocLatexDirective : new ::TDocLatexDirective;
   }
   static void *newArray_TDocLatexDirective(Long_t nElements, void *p) {
      return p ? new(p) ::TDocLatexDirective[nElements] : new ::TDocLatexDirective[nElements];
   }
   // Wrapper around operator delete
   static void delete_TDocLatexDirective(void *p) {
      delete ((::TDocLatexDirective*)p);
   }
   static void deleteArray_TDocLatexDirective(void *p) {
      delete [] ((::TDocLatexDirective*)p);
   }
   static void destruct_TDocLatexDirective(void *p) {
      typedef ::TDocLatexDirective current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDocLatexDirective

//______________________________________________________________________________
void TClassDocOutput::Streamer(TBuffer &R__b)
{
   // Stream an object of class TClassDocOutput.

   TDocOutput::Streamer(R__b);
}

//______________________________________________________________________________
void TClassDocOutput::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TClassDocOutput.
      TClass *R__cl = ::TClassDocOutput::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fHierarchyLines", &fHierarchyLines);
      R__insp.Inspect(R__cl, R__parent, "*fCurrentClass", &fCurrentClass);
      R__insp.Inspect(R__cl, R__parent, "*fCurrentClassesTypedefs", &fCurrentClassesTypedefs);
      R__insp.Inspect(R__cl, R__parent, "*fParser", &fParser);
      TDocOutput::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TClassDocOutput(void *p) {
      delete ((::TClassDocOutput*)p);
   }
   static void deleteArray_TClassDocOutput(void *p) {
      delete [] ((::TClassDocOutput*)p);
   }
   static void destruct_TClassDocOutput(void *p) {
      typedef ::TClassDocOutput current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TClassDocOutput

//______________________________________________________________________________
void TClassDocInfo::Streamer(TBuffer &R__b)
{
   // Stream an object of class TClassDocInfo.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void TClassDocInfo::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TClassDocInfo.
      TClass *R__cl = ::TClassDocInfo::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fClass", &fClass);
      R__insp.Inspect(R__cl, R__parent, "*fModule", &fModule);
      R__insp.Inspect(R__cl, R__parent, "fHtmlFileName", &fHtmlFileName);
      fHtmlFileName.ShowMembers(R__insp, strcat(R__parent,"fHtmlFileName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fDeclFileName", &fDeclFileName);
      fDeclFileName.ShowMembers(R__insp, strcat(R__parent,"fDeclFileName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fImplFileName", &fImplFileName);
      fImplFileName.ShowMembers(R__insp, strcat(R__parent,"fImplFileName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fDeclFileSysName", &fDeclFileSysName);
      fDeclFileSysName.ShowMembers(R__insp, strcat(R__parent,"fDeclFileSysName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fImplFileSysName", &fImplFileSysName);
      fImplFileSysName.ShowMembers(R__insp, strcat(R__parent,"fImplFileSysName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fTypedefs", &fTypedefs);
      fTypedefs.ShowMembers(R__insp, strcat(R__parent,"fTypedefs.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fSelected", &fSelected);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TClassDocInfo(void *p) {
      delete ((::TClassDocInfo*)p);
   }
   static void deleteArray_TClassDocInfo(void *p) {
      delete [] ((::TClassDocInfo*)p);
   }
   static void destruct_TClassDocInfo(void *p) {
      typedef ::TClassDocInfo current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TClassDocInfo

//______________________________________________________________________________
void TModuleDocInfo::Streamer(TBuffer &R__b)
{
   // Stream an object of class TModuleDocInfo.

   TNamed::Streamer(R__b);
}

//______________________________________________________________________________
void TModuleDocInfo::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TModuleDocInfo.
      TClass *R__cl = ::TModuleDocInfo::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fSuper", &fSuper);
      R__insp.Inspect(R__cl, R__parent, "fSub", &fSub);
      fSub.ShowMembers(R__insp, strcat(R__parent,"fSub.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fClasses", &fClasses);
      fClasses.ShowMembers(R__insp, strcat(R__parent,"fClasses.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fSelected", &fSelected);
      TNamed::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TModuleDocInfo(void *p) {
      delete ((::TModuleDocInfo*)p);
   }
   static void deleteArray_TModuleDocInfo(void *p) {
      delete [] ((::TModuleDocInfo*)p);
   }
   static void destruct_TModuleDocInfo(void *p) {
      typedef ::TModuleDocInfo current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TModuleDocInfo

//______________________________________________________________________________
void TLibraryDocInfo::Streamer(TBuffer &R__b)
{
   // Stream an object of class TLibraryDocInfo.

   TNamed::Streamer(R__b);
}

//______________________________________________________________________________
void TLibraryDocInfo::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TLibraryDocInfo.
      TClass *R__cl = ::TLibraryDocInfo::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fDependencies", (void*)&fDependencies);
      ::ROOT::GenericShowMembers("set<std::string>", (void*)&fDependencies, R__insp, strcat(R__parent,"fDependencies."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fModules", (void*)&fModules);
      ::ROOT::GenericShowMembers("set<std::string>", (void*)&fModules, R__insp, strcat(R__parent,"fModules."),false);
      R__parent[R__ncp] = 0;
      TNamed::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TLibraryDocInfo(void *p) {
      return  p ? new(p) ::TLibraryDocInfo : new ::TLibraryDocInfo;
   }
   static void *newArray_TLibraryDocInfo(Long_t nElements, void *p) {
      return p ? new(p) ::TLibraryDocInfo[nElements] : new ::TLibraryDocInfo[nElements];
   }
   // Wrapper around operator delete
   static void delete_TLibraryDocInfo(void *p) {
      delete ((::TLibraryDocInfo*)p);
   }
   static void deleteArray_TLibraryDocInfo(void *p) {
      delete [] ((::TLibraryDocInfo*)p);
   }
   static void destruct_TLibraryDocInfo(void *p) {
      typedef ::TLibraryDocInfo current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TLibraryDocInfo

//______________________________________________________________________________
void THtml::THelperBase::Streamer(TBuffer &R__b)
{
   // Stream an object of class THtml::THelperBase.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void THtml::THelperBase::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class THtml::THelperBase.
      TClass *R__cl = ::THtml::THelperBase::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fHtml", &fHtml);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_THtmlcLcLTHelperBase(void *p) {
      return  p ? new(p) ::THtml::THelperBase : new ::THtml::THelperBase;
   }
   static void *newArray_THtmlcLcLTHelperBase(Long_t nElements, void *p) {
      return p ? new(p) ::THtml::THelperBase[nElements] : new ::THtml::THelperBase[nElements];
   }
   // Wrapper around operator delete
   static void delete_THtmlcLcLTHelperBase(void *p) {
      delete ((::THtml::THelperBase*)p);
   }
   static void deleteArray_THtmlcLcLTHelperBase(void *p) {
      delete [] ((::THtml::THelperBase*)p);
   }
   static void destruct_THtmlcLcLTHelperBase(void *p) {
      typedef ::THtml::THelperBase current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::THtml::THelperBase

//______________________________________________________________________________
void THtml::TModuleDefinition::Streamer(TBuffer &R__b)
{
   // Stream an object of class THtml::TModuleDefinition.

   //This works around a msvc bug and should be harmless on other platforms
   typedef THtml::THelperBase baseClass0;
   baseClass0::Streamer(R__b);
}

//______________________________________________________________________________
void THtml::TModuleDefinition::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class THtml::TModuleDefinition.
      TClass *R__cl = ::THtml::TModuleDefinition::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      //This works around a msvc bug and should be harmless on other platforms
      typedef THtml::THelperBase baseClass1;
      baseClass1::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_THtmlcLcLTModuleDefinition(void *p) {
      return  p ? new(p) ::THtml::TModuleDefinition : new ::THtml::TModuleDefinition;
   }
   static void *newArray_THtmlcLcLTModuleDefinition(Long_t nElements, void *p) {
      return p ? new(p) ::THtml::TModuleDefinition[nElements] : new ::THtml::TModuleDefinition[nElements];
   }
   // Wrapper around operator delete
   static void delete_THtmlcLcLTModuleDefinition(void *p) {
      delete ((::THtml::TModuleDefinition*)p);
   }
   static void deleteArray_THtmlcLcLTModuleDefinition(void *p) {
      delete [] ((::THtml::TModuleDefinition*)p);
   }
   static void destruct_THtmlcLcLTModuleDefinition(void *p) {
      typedef ::THtml::TModuleDefinition current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::THtml::TModuleDefinition

//______________________________________________________________________________
void THtml::TFileDefinition::Streamer(TBuffer &R__b)
{
   // Stream an object of class THtml::TFileDefinition.

   //This works around a msvc bug and should be harmless on other platforms
   typedef THtml::THelperBase baseClass0;
   baseClass0::Streamer(R__b);
}

//______________________________________________________________________________
void THtml::TFileDefinition::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class THtml::TFileDefinition.
      TClass *R__cl = ::THtml::TFileDefinition::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      //This works around a msvc bug and should be harmless on other platforms
      typedef THtml::THelperBase baseClass1;
      baseClass1::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_THtmlcLcLTFileDefinition(void *p) {
      return  p ? new(p) ::THtml::TFileDefinition : new ::THtml::TFileDefinition;
   }
   static void *newArray_THtmlcLcLTFileDefinition(Long_t nElements, void *p) {
      return p ? new(p) ::THtml::TFileDefinition[nElements] : new ::THtml::TFileDefinition[nElements];
   }
   // Wrapper around operator delete
   static void delete_THtmlcLcLTFileDefinition(void *p) {
      delete ((::THtml::TFileDefinition*)p);
   }
   static void deleteArray_THtmlcLcLTFileDefinition(void *p) {
      delete [] ((::THtml::TFileDefinition*)p);
   }
   static void destruct_THtmlcLcLTFileDefinition(void *p) {
      typedef ::THtml::TFileDefinition current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::THtml::TFileDefinition

//______________________________________________________________________________
void THtml::TPathDefinition::Streamer(TBuffer &R__b)
{
   // Stream an object of class THtml::TPathDefinition.

   //This works around a msvc bug and should be harmless on other platforms
   typedef THtml::THelperBase baseClass0;
   baseClass0::Streamer(R__b);
}

//______________________________________________________________________________
void THtml::TPathDefinition::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class THtml::TPathDefinition.
      TClass *R__cl = ::THtml::TPathDefinition::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      //This works around a msvc bug and should be harmless on other platforms
      typedef THtml::THelperBase baseClass1;
      baseClass1::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_THtmlcLcLTPathDefinition(void *p) {
      return  p ? new(p) ::THtml::TPathDefinition : new ::THtml::TPathDefinition;
   }
   static void *newArray_THtmlcLcLTPathDefinition(Long_t nElements, void *p) {
      return p ? new(p) ::THtml::TPathDefinition[nElements] : new ::THtml::TPathDefinition[nElements];
   }
   // Wrapper around operator delete
   static void delete_THtmlcLcLTPathDefinition(void *p) {
      delete ((::THtml::TPathDefinition*)p);
   }
   static void deleteArray_THtmlcLcLTPathDefinition(void *p) {
      delete [] ((::THtml::TPathDefinition*)p);
   }
   static void destruct_THtmlcLcLTPathDefinition(void *p) {
      typedef ::THtml::TPathDefinition current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::THtml::TPathDefinition

//______________________________________________________________________________
void THtml::TFileSysEntry::Streamer(TBuffer &R__b)
{
   // Stream an object of class THtml::TFileSysEntry.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void THtml::TFileSysEntry::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class THtml::TFileSysEntry.
      TClass *R__cl = ::THtml::TFileSysEntry::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fName", &fName);
      fName.ShowMembers(R__insp, strcat(R__parent,"fName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fParent", &fParent);
      R__insp.Inspect(R__cl, R__parent, "fLevel", &fLevel);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_THtmlcLcLTFileSysEntry(void *p) {
      delete ((::THtml::TFileSysEntry*)p);
   }
   static void deleteArray_THtmlcLcLTFileSysEntry(void *p) {
      delete [] ((::THtml::TFileSysEntry*)p);
   }
   static void destruct_THtmlcLcLTFileSysEntry(void *p) {
      typedef ::THtml::TFileSysEntry current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::THtml::TFileSysEntry

//______________________________________________________________________________
void THtml::TFileSysDir::Streamer(TBuffer &R__b)
{
   // Stream an object of class THtml::TFileSysDir.

   //This works around a msvc bug and should be harmless on other platforms
   typedef THtml::TFileSysEntry baseClass0;
   baseClass0::Streamer(R__b);
}

//______________________________________________________________________________
void THtml::TFileSysDir::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class THtml::TFileSysDir.
      TClass *R__cl = ::THtml::TFileSysDir::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fFiles", &fFiles);
      fFiles.ShowMembers(R__insp, strcat(R__parent,"fFiles.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fDirs", &fDirs);
      fDirs.ShowMembers(R__insp, strcat(R__parent,"fDirs.")); R__parent[R__ncp] = 0;
      //This works around a msvc bug and should be harmless on other platforms
      typedef THtml::TFileSysEntry baseClass1;
      baseClass1::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_THtmlcLcLTFileSysDir(void *p) {
      delete ((::THtml::TFileSysDir*)p);
   }
   static void deleteArray_THtmlcLcLTFileSysDir(void *p) {
      delete [] ((::THtml::TFileSysDir*)p);
   }
   static void destruct_THtmlcLcLTFileSysDir(void *p) {
      typedef ::THtml::TFileSysDir current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::THtml::TFileSysDir

//______________________________________________________________________________
void THtml::TFileSysRoot::Streamer(TBuffer &R__b)
{
   // Stream an object of class THtml::TFileSysRoot.

   //This works around a msvc bug and should be harmless on other platforms
   typedef THtml::TFileSysDir baseClass0;
   baseClass0::Streamer(R__b);
}

//______________________________________________________________________________
void THtml::TFileSysRoot::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class THtml::TFileSysRoot.
      TClass *R__cl = ::THtml::TFileSysRoot::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      //This works around a msvc bug and should be harmless on other platforms
      typedef THtml::TFileSysDir baseClass1;
      baseClass1::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_THtmlcLcLTFileSysRoot(void *p) {
      delete ((::THtml::TFileSysRoot*)p);
   }
   static void deleteArray_THtmlcLcLTFileSysRoot(void *p) {
      delete [] ((::THtml::TFileSysRoot*)p);
   }
   static void destruct_THtmlcLcLTFileSysRoot(void *p) {
      typedef ::THtml::TFileSysRoot current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::THtml::TFileSysRoot

//______________________________________________________________________________
void THtml::TFileSysDB::Streamer(TBuffer &R__b)
{
   // Stream an object of class THtml::TFileSysDB.

   //This works around a msvc bug and should be harmless on other platforms
   typedef THtml::TFileSysDir baseClass0;
   baseClass0::Streamer(R__b);
}

//______________________________________________________________________________
void THtml::TFileSysDB::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class THtml::TFileSysDB.
      TClass *R__cl = ::THtml::TFileSysDB::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fMapIno", &fMapIno);
      fMapIno.ShowMembers(R__insp, strcat(R__parent,"fMapIno.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fEntries", &fEntries);
      fEntries.ShowMembers(R__insp, strcat(R__parent,"fEntries.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fIgnorePath", &fIgnorePath);
      fIgnorePath.ShowMembers(R__insp, strcat(R__parent,"fIgnorePath.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fMaxLevel", &fMaxLevel);
      //This works around a msvc bug and should be harmless on other platforms
      typedef THtml::TFileSysDir baseClass1;
      baseClass1::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_THtmlcLcLTFileSysDB(void *p) {
      delete ((::THtml::TFileSysDB*)p);
   }
   static void deleteArray_THtmlcLcLTFileSysDB(void *p) {
      delete [] ((::THtml::TFileSysDB*)p);
   }
   static void destruct_THtmlcLcLTFileSysDB(void *p) {
      typedef ::THtml::TFileSysDB current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::THtml::TFileSysDB

/********************************************************
* html/src/G__Html.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__Html();

extern "C" void G__set_cpp_environmentG__Html() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("TClassDocOutput.h");
  G__add_compiledheader("TDocDirective.h");
  G__add_compiledheader("TDocInfo.h");
  G__add_compiledheader("TDocOutput.h");
  G__add_compiledheader("TDocParser.h");
  G__add_compiledheader("THtml.h");
  G__cpp_reset_tagtableG__Html();
}
#include <new>
extern "C" int G__cpp_dllrevG__Html() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TClassDocOutput */
static int G__G__Html_119_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TClassDocOutput* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TClassDocOutput(
*(THtml*) libp->para[0].ref, (TClass*) G__int(libp->para[1])
, (TList*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) TClassDocOutput(
*(THtml*) libp->para[0].ref, (TClass*) G__int(libp->para[1])
, (TList*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__HtmlLN_TClassDocOutput));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_119_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TClassDocOutput*) G__getstructoffset())->Class2Html((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TClassDocOutput*) G__getstructoffset())->Class2Html();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_119_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TClassDocOutput*) G__getstructoffset())->ClassDotCharts(*(ostream*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_119_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TClassDocOutput*) G__getstructoffset())->CreateClassHierarchy(*(ostream*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_119_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TClassDocOutput*) G__getstructoffset())->MakeTree((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TClassDocOutput*) G__getstructoffset())->MakeTree();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_119_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TClassDocOutput::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_119_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TClassDocOutput::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_119_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TClassDocOutput::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_119_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TClassDocOutput::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_119_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TClassDocOutput*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_119_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TClassDocOutput::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_119_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TClassDocOutput::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_119_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TClassDocOutput::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_119_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TClassDocOutput::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Html_119_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TClassDocOutput* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TClassDocOutput(*(TClassDocOutput*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__HtmlLN_TClassDocOutput));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TClassDocOutput G__TTClassDocOutput;
static int G__G__Html_119_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TClassDocOutput*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TClassDocOutput*) (soff+(sizeof(TClassDocOutput)*i)))->~G__TTClassDocOutput();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TClassDocOutput*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TClassDocOutput*) (soff))->~G__TTClassDocOutput();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Html_119_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TClassDocOutput* dest = (TClassDocOutput*) G__getstructoffset();
   *dest = *(TClassDocOutput*) libp->para[0].ref;
   const TClassDocOutput& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDocOutput */
static int G__G__Html_120_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TDocOutput* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TDocOutput(*(THtml*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TDocOutput(*(THtml*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__HtmlLN_TDocOutput));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_120_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TDocOutput*) G__getstructoffset())->AdjustSourcePath(*(TString*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TDocOutput*) G__getstructoffset())->AdjustSourcePath(*(TString*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_120_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 8:
      ((TDocOutput*) G__getstructoffset())->Convert(
*(istream*) libp->para[0].ref, (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (const char*) G__int(libp->para[6]), (TGClient*) G__int(libp->para[7]));
      G__setnull(result7);
      break;
   case 7:
      ((TDocOutput*) G__getstructoffset())->Convert(
*(istream*) libp->para[0].ref, (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (const char*) G__int(libp->para[6]));
      G__setnull(result7);
      break;
   case 6:
      ((TDocOutput*) G__getstructoffset())->Convert(*(istream*) libp->para[0].ref, (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (Int_t) G__int(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((TDocOutput*) G__getstructoffset())->Convert(*(istream*) libp->para[0].ref, (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((TDocOutput*) G__getstructoffset())->Convert(*(istream*) libp->para[0].ref, (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_120_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((TDocOutput*) G__getstructoffset())->CopyHtmlFile((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((TDocOutput*) G__getstructoffset())->CopyHtmlFile((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_120_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDocOutput*) G__getstructoffset())->CreateClassIndex();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_120_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDocOutput*) G__getstructoffset())->CreateModuleIndex();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_120_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDocOutput*) G__getstructoffset())->CreateProductIndex();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_120_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDocOutput*) G__getstructoffset())->CreateTypeIndex();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_120_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDocOutput*) G__getstructoffset())->CreateClassTypeDefs();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_120_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDocOutput*) G__getstructoffset())->CreateHierarchy();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_120_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDocOutput*) G__getstructoffset())->DecorateEntityBegin(*(TString*) libp->para[0].ref, *(Ssiz_t*) G__Intref(&libp->para[1])
, (TDocParser::EParseContext) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_120_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDocOutput*) G__getstructoffset())->DecorateEntityEnd(*(TString*) libp->para[0].ref, *(Ssiz_t*) G__Intref(&libp->para[1])
, (TDocParser::EParseContext) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_120_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDocOutput*) G__getstructoffset())->FixupAuthorSourceInfo(*(TString*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_120_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TDocOutput*) G__getstructoffset())->GetExtension());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_120_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TDocOutput*) G__getstructoffset())->GetHtml());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_120_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TDocOutput*) G__getstructoffset())->IsModified((TClass*) G__int(libp->para[0]), (TDocOutput::EFileType) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_120_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDocOutput*) G__getstructoffset())->NameSpace2FileName(*(TString*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_120_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((TDocOutput*) G__getstructoffset())->ReferenceEntity(*(TSubString*) libp->para[0].ref, (TClass*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((TDocOutput*) G__getstructoffset())->ReferenceEntity(*(TSubString*) libp->para[0].ref, (TClass*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_120_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((TDocOutput*) G__getstructoffset())->ReferenceEntity(*(TSubString*) libp->para[0].ref, (TDataMember*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((TDocOutput*) G__getstructoffset())->ReferenceEntity(*(TSubString*) libp->para[0].ref, (TDataMember*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_120_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((TDocOutput*) G__getstructoffset())->ReferenceEntity(*(TSubString*) libp->para[0].ref, (TDataType*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((TDocOutput*) G__getstructoffset())->ReferenceEntity(*(TSubString*) libp->para[0].ref, (TDataType*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_120_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((TDocOutput*) G__getstructoffset())->ReferenceEntity(*(TSubString*) libp->para[0].ref, (TMethod*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((TDocOutput*) G__getstructoffset())->ReferenceEntity(*(TSubString*) libp->para[0].ref, (TMethod*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_120_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TDocOutput*) G__getstructoffset())->ReferenceIsRelative((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_120_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TDocOutput*) G__getstructoffset())->ReplaceSpecialChars((char) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_120_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDocOutput*) G__getstructoffset())->ReplaceSpecialChars(*(ostream*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_120_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDocOutput*) G__getstructoffset())->ReplaceSpecialChars(*(TString*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_120_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDocOutput*) G__getstructoffset())->ReplaceSpecialChars(*(TString*) libp->para[0].ref, *(Ssiz_t*) G__Intref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_120_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((TDocOutput*) G__getstructoffset())->WriteHtmlHeader(*(ostream*) libp->para[0].ref, (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (TClass*) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((TDocOutput*) G__getstructoffset())->WriteHtmlHeader(*(ostream*) libp->para[0].ref, (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((TDocOutput*) G__getstructoffset())->WriteHtmlHeader(*(ostream*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_120_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      ((TDocOutput*) G__getstructoffset())->WriteHtmlFooter(*(ostream*) libp->para[0].ref, (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((TDocOutput*) G__getstructoffset())->WriteHtmlFooter(*(ostream*) libp->para[0].ref, (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((TDocOutput*) G__getstructoffset())->WriteHtmlFooter(*(ostream*) libp->para[0].ref, (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((TDocOutput*) G__getstructoffset())->WriteHtmlFooter(*(ostream*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TDocOutput*) G__getstructoffset())->WriteHtmlFooter(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_120_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TDocOutput*) G__getstructoffset())->WriteLineNumbers(*(ostream*) libp->para[0].ref, (Long_t) G__int(libp->para[1])
, *(TString*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_120_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TDocOutput::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_120_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDocOutput::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_120_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TDocOutput::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_120_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TDocOutput::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_120_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDocOutput*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_120_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDocOutput::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_120_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TDocOutput::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_120_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDocOutput::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_120_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TDocOutput::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Html_120_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TDocOutput* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TDocOutput(*(TDocOutput*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__HtmlLN_TDocOutput));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDocOutput G__TTDocOutput;
static int G__G__Html_120_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TDocOutput*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TDocOutput*) (soff+(sizeof(TDocOutput)*i)))->~G__TTDocOutput();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TDocOutput*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TDocOutput*) (soff))->~G__TTDocOutput();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Html_120_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TDocOutput* dest = (TDocOutput*) G__getstructoffset();
   *dest = *(TDocOutput*) libp->para[0].ref;
   const TDocOutput& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THtml */
static int G__G__Html_121_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THtml* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THtml[n];
     } else {
       p = new((void*) gvp) THtml[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THtml;
     } else {
       p = new((void*) gvp) THtml;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__HtmlLN_THtml));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      THtml::LoadAllLibs();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      ((THtml*) G__getstructoffset())->Convert((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (const char*) G__int(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((THtml*) G__getstructoffset())->Convert((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((THtml*) G__getstructoffset())->Convert((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((THtml*) G__getstructoffset())->Convert((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((THtml*) G__getstructoffset())->Convert((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THtml*) G__getstructoffset())->CreateHierarchy();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((THtml*) G__getstructoffset())->MakeAll((Bool_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((THtml*) G__getstructoffset())->MakeAll((Bool_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((THtml*) G__getstructoffset())->MakeAll((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((THtml*) G__getstructoffset())->MakeAll();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((THtml*) G__getstructoffset())->MakeClass((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((THtml*) G__getstructoffset())->MakeClass((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((THtml*) G__getstructoffset())->MakeIndex((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((THtml*) G__getstructoffset())->MakeIndex();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((THtml*) G__getstructoffset())->MakeTree((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((THtml*) G__getstructoffset())->MakeTree((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THtml*) G__getstructoffset())->SetModuleDefinition(*(THtml::TModuleDefinition*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THtml*) G__getstructoffset())->SetFileDefinition(*(THtml::TFileDefinition*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THtml*) G__getstructoffset())->SetPathDefinition(*(THtml::TPathDefinition*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THtml*) G__getstructoffset())->SetProductName((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THtml*) G__getstructoffset())->SetOutputDir((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THtml*) G__getstructoffset())->SetInputDir((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THtml*) G__getstructoffset())->SetSourceDir((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THtml*) G__getstructoffset())->SetIncludePath((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THtml*) G__getstructoffset())->SetEtcDir((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THtml*) G__getstructoffset())->SetDocPath((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THtml*) G__getstructoffset())->SetDotDir((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THtml*) G__getstructoffset())->SetRootURL((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THtml*) G__getstructoffset())->SetLibURL((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THtml*) G__getstructoffset())->SetXwho((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THtml*) G__getstructoffset())->SetMacroPath((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THtml*) G__getstructoffset())->AddMacroPath((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THtml*) G__getstructoffset())->SetCounterFormat((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THtml*) G__getstructoffset())->SetClassDocTag((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THtml*) G__getstructoffset())->SetAuthorTag((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THtml*) G__getstructoffset())->SetLastUpdateTag((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THtml*) G__getstructoffset())->SetCopyrightTag((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THtml*) G__getstructoffset())->SetHeader((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THtml*) G__getstructoffset())->SetFooter((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THtml*) G__getstructoffset())->SetHomepage((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THtml*) G__getstructoffset())->SetSearchStemURL((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THtml*) G__getstructoffset())->SetSearchEngine((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THtml*) G__getstructoffset())->SetViewCVS((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THtml*) G__getstructoffset())->SetWikiURL((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THtml*) G__getstructoffset())->SetCharset((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THtml*) G__getstructoffset())->SetDocStyle((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const THtml::TModuleDefinition& obj = ((const THtml*) G__getstructoffset())->GetModuleDefinition();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const THtml::TFileDefinition& obj = ((const THtml*) G__getstructoffset())->GetFileDefinition();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const THtml::TPathDefinition& obj = ((const THtml*) G__getstructoffset())->GetPathDefinition();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString& obj = ((const THtml*) G__getstructoffset())->GetProductName();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString& obj = ((const THtml*) G__getstructoffset())->GetInputPath();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         const TString& obj = ((const THtml*) G__getstructoffset())->GetOutputDir((Bool_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 0:
      {
         const TString& obj = ((const THtml*) G__getstructoffset())->GetOutputDir();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const THtml*) G__getstructoffset())->GetEtcDir());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString& obj = ((const THtml*) G__getstructoffset())->GetModuleDocPath();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString& obj = ((const THtml*) G__getstructoffset())->GetDotDir();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 67, (long) ((const THtml*) G__getstructoffset())->GetURL((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 67, (long) ((const THtml*) G__getstructoffset())->GetURL());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString& obj = ((const THtml*) G__getstructoffset())->GetXwho();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString& obj = ((const THtml*) G__getstructoffset())->GetMacroPath();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const THtml*) G__getstructoffset())->GetCounterFormat());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString& obj = ((const THtml*) G__getstructoffset())->GetClassDocTag();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString& obj = ((const THtml*) G__getstructoffset())->GetAuthorTag();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString& obj = ((const THtml*) G__getstructoffset())->GetLastUpdateTag();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString& obj = ((const THtml*) G__getstructoffset())->GetCopyrightTag();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString& obj = ((const THtml*) G__getstructoffset())->GetHeader();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString& obj = ((const THtml*) G__getstructoffset())->GetFooter();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString& obj = ((const THtml*) G__getstructoffset())->GetHomepage();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString& obj = ((const THtml*) G__getstructoffset())->GetSearchStemURL();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString& obj = ((const THtml*) G__getstructoffset())->GetSearchEngine();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString& obj = ((const THtml*) G__getstructoffset())->GetViewCVS();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString& obj = ((const THtml*) G__getstructoffset())->GetWikiURL();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString& obj = ((const THtml*) G__getstructoffset())->GetCharset();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString& obj = ((const THtml*) G__getstructoffset())->GetDocStyle();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const THtml*) G__getstructoffset())->CopyFileFromEtcDir((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const THtml*) G__getstructoffset())->CreateAuxiliaryFiles();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THtml*) G__getstructoffset())->GetClass((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const THtml*) G__getstructoffset())->ShortType((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const THtml*) G__getstructoffset())->GetCounter());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const THtml*) G__getstructoffset())->GetModuleMacroPath(*(TString*) libp->para[0].ref, *(TString*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const THtml*) G__getstructoffset())->GetDeclFileName((TClass*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])
, *(TString*) libp->para[2].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const THtml*) G__getstructoffset())->GetDerivedClasses((TClass*) G__int(libp->para[0]), *(map<TClass*,Int_t>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THtml::GetDirDelimiter());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const THtml*) G__getstructoffset())->GetImplFileName((TClass*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])
, *(TString*) libp->para[2].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const THtml*) G__getstructoffset())->GetHtmlFileName((TClass*) G__int(libp->para[0]), *(TString*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const THtml*) G__getstructoffset())->GetHtmlFileName((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((THtml*) G__getstructoffset())->GetLibraryDependencies());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THtml*) G__getstructoffset())->SortListOfModules();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THtml*) G__getstructoffset())->GetListOfModules());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THtml*) G__getstructoffset())->GetListOfClasses());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THtml*) G__getstructoffset())->GetLocalFiles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THtml*) G__getstructoffset())->GetMakeClassMutex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const THtml*) G__getstructoffset())->GetModuleNameForClass(*(TString*) libp->para[0].ref, (TClass*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const THtml::PathInfo_t& obj = ((const THtml*) G__getstructoffset())->GetPathInfo();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((THtml*) G__getstructoffset())->HaveDot());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THtml*) G__getstructoffset())->HelperDeleted((THtml::THelperBase*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) THtml::IsNamespace((const TClass*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THtml*) G__getstructoffset())->SetDeclFileName((TClass*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((THtml*) G__getstructoffset())->SetFoundDot((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((THtml*) G__getstructoffset())->SetFoundDot();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THtml*) G__getstructoffset())->SetImplFileName((TClass*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((THtml*) G__getstructoffset())->SetBatch((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((THtml*) G__getstructoffset())->SetBatch();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const THtml*) G__getstructoffset())->IsBatch());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THtml*) G__getstructoffset())->ReplaceSpecialChars(*(ostream*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((THtml*) G__getstructoffset())->SetEscape((char) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((THtml*) G__getstructoffset())->SetEscape();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_104(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) THtml::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_105(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THtml::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_106(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) THtml::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_107(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      THtml::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_111(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THtml*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_112(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THtml::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_113(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THtml::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_114(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THtml::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_121_0_115(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THtml::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THtml G__TTHtml;
static int G__G__Html_121_0_116(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (THtml*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((THtml*) (soff+(sizeof(THtml)*i)))->~G__TTHtml();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (THtml*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((THtml*) (soff))->~G__TTHtml();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDocParser */
static int G__G__Html_123_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TDocParser* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TDocParser(*(TClassDocOutput*) libp->para[0].ref, (TClass*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TDocParser(*(TClassDocOutput*) libp->para[0].ref, (TClass*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__HtmlLN_TDocParser));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_123_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TDocParser* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TDocParser(*(TDocOutput*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TDocParser(*(TDocOutput*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__HtmlLN_TDocParser));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_123_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TDocParser::AnchorFromLine(*(TString*) libp->para[0].ref, *(TString*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_123_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDocParser*) G__getstructoffset())->Convert(*(ostream*) libp->para[0].ref, *(istream*) libp->para[1].ref
, (const char*) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_123_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDocParser*) G__getstructoffset())->DecrementMethodCount((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_123_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDocParser*) G__getstructoffset())->DecorateKeywords(*(ostream*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_123_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDocParser*) G__getstructoffset())->DecorateKeywords(*(TString*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_123_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TDocParser*) G__getstructoffset())->DeleteDirectiveOutput();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_123_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TDocParser*) G__getstructoffset())->GetMethods((TDocParser::EAccess) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_123_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TDocParser*) G__getstructoffset())->GetCurrentClass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_123_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TDocParser*) G__getstructoffset())->GetCurrentModule(*(TString*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_123_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TDocParser*) G__getstructoffset())->GetDocOutput());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_123_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) ((const TDocParser*) G__getstructoffset())->GetLineNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_123_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TDocParser*) G__getstructoffset())->GetDataMembers((TDocParser::EAccess) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_123_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TDocParser*) G__getstructoffset())->GetEnums((TDocParser::EAccess) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_123_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TDocParser*) G__getstructoffset())->GetSourceInfo((TDocParser::ESourceInfo) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_123_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDocParser*) G__getstructoffset())->SetCurrentModule((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_123_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TDocParser*) G__getstructoffset())->InContext((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_123_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) TDocParser::IsName((UChar_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_123_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) TDocParser::IsWord((UChar_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_123_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDocParser*) G__getstructoffset())->Parse(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_123_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) TDocParser::Strip(*(TString*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_123_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TDocParser::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_123_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDocParser::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_123_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TDocParser::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_123_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TDocParser::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_123_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDocParser*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_123_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDocParser::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_123_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TDocParser::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_123_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDocParser::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_123_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TDocParser::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDocParser G__TTDocParser;
static int G__G__Html_123_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TDocParser*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TDocParser*) (soff+(sizeof(TDocParser)*i)))->~G__TTDocParser();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TDocParser*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TDocParser*) (soff))->~G__TTDocParser();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TModuleDocInfo */
static int G__G__Html_157_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TModuleDocInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TModuleDocInfo(
(const char*) G__int(libp->para[0]), (TModuleDocInfo*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TModuleDocInfo(
(const char*) G__int(libp->para[0]), (TModuleDocInfo*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TModuleDocInfo((const char*) G__int(libp->para[0]), (TModuleDocInfo*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TModuleDocInfo((const char*) G__int(libp->para[0]), (TModuleDocInfo*) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__HtmlLN_TModuleDocInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_157_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TModuleDocInfo*) G__getstructoffset())->SetDoc((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_157_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TModuleDocInfo*) G__getstructoffset())->GetDoc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_157_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TModuleDocInfo*) G__getstructoffset())->SetSelected((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TModuleDocInfo*) G__getstructoffset())->SetSelected();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_157_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TModuleDocInfo*) G__getstructoffset())->IsSelected());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_157_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TModuleDocInfo*) G__getstructoffset())->AddClass((TClassDocInfo*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_157_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TModuleDocInfo*) G__getstructoffset())->GetClasses());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_157_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TModuleDocInfo*) G__getstructoffset())->GetSuper());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_157_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const THashList& obj = ((TModuleDocInfo*) G__getstructoffset())->GetSub();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_157_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TModuleDocInfo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_157_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TModuleDocInfo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_157_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TModuleDocInfo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_157_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TModuleDocInfo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_157_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TModuleDocInfo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_157_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TModuleDocInfo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_157_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TModuleDocInfo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_157_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TModuleDocInfo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_157_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TModuleDocInfo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TModuleDocInfo G__TTModuleDocInfo;
static int G__G__Html_157_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TModuleDocInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TModuleDocInfo*) (soff+(sizeof(TModuleDocInfo)*i)))->~G__TTModuleDocInfo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TModuleDocInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TModuleDocInfo*) (soff))->~G__TTModuleDocInfo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDocDirective */
static int G__G__Html_164_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TDocDirective*) G__getstructoffset())->GetEndTag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_164_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDocDirective*) G__getstructoffset())->AddLine(*(TSubString*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_164_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TDocDirective*) G__getstructoffset())->GetResult(*(TString*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_164_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TDocDirective*) G__getstructoffset())->DeleteOutput();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_164_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TDocDirective::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_164_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDocDirective::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_164_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TDocDirective::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_164_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TDocDirective::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_164_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDocDirective*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_164_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDocDirective::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_164_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TDocDirective::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_164_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDocDirective::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_164_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TDocDirective::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Html_164_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TDocDirective* dest = (TDocDirective*) G__getstructoffset();
   *dest = *(TDocDirective*) libp->para[0].ref;
   const TDocDirective& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDocHtmlDirective */
static int G__G__Html_165_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TDocHtmlDirective* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TDocHtmlDirective[n];
     } else {
       p = new((void*) gvp) TDocHtmlDirective[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TDocHtmlDirective;
     } else {
       p = new((void*) gvp) TDocHtmlDirective;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__HtmlLN_TDocHtmlDirective));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_165_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TDocHtmlDirective::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_165_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDocHtmlDirective::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_165_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TDocHtmlDirective::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_165_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TDocHtmlDirective::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_165_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDocHtmlDirective*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_165_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDocHtmlDirective::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_165_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TDocHtmlDirective::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_165_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDocHtmlDirective::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_165_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TDocHtmlDirective::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Html_165_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TDocHtmlDirective* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TDocHtmlDirective(*(TDocHtmlDirective*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__HtmlLN_TDocHtmlDirective));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDocHtmlDirective G__TTDocHtmlDirective;
static int G__G__Html_165_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TDocHtmlDirective*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TDocHtmlDirective*) (soff+(sizeof(TDocHtmlDirective)*i)))->~G__TTDocHtmlDirective();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TDocHtmlDirective*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TDocHtmlDirective*) (soff))->~G__TTDocHtmlDirective();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Html_165_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TDocHtmlDirective* dest = (TDocHtmlDirective*) G__getstructoffset();
   *dest = *(TDocHtmlDirective*) libp->para[0].ref;
   const TDocHtmlDirective& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDocMacroDirective */
static int G__G__Html_166_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TDocMacroDirective* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TDocMacroDirective[n];
     } else {
       p = new((void*) gvp) TDocMacroDirective[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TDocMacroDirective;
     } else {
       p = new((void*) gvp) TDocMacroDirective;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__HtmlLN_TDocMacroDirective));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_166_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TDocMacroDirective::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_166_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDocMacroDirective::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_166_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TDocMacroDirective::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_166_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TDocMacroDirective::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_166_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDocMacroDirective*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_166_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDocMacroDirective::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_166_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TDocMacroDirective::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_166_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDocMacroDirective::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_166_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TDocMacroDirective::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Html_166_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TDocMacroDirective* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TDocMacroDirective(*(TDocMacroDirective*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__HtmlLN_TDocMacroDirective));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDocMacroDirective G__TTDocMacroDirective;
static int G__G__Html_166_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TDocMacroDirective*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TDocMacroDirective*) (soff+(sizeof(TDocMacroDirective)*i)))->~G__TTDocMacroDirective();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TDocMacroDirective*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TDocMacroDirective*) (soff))->~G__TTDocMacroDirective();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Html_166_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TDocMacroDirective* dest = (TDocMacroDirective*) G__getstructoffset();
   *dest = *(TDocMacroDirective*) libp->para[0].ref;
   const TDocMacroDirective& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDocLatexDirective */
static int G__G__Html_167_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TDocLatexDirective* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TDocLatexDirective[n];
     } else {
       p = new((void*) gvp) TDocLatexDirective[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TDocLatexDirective;
     } else {
       p = new((void*) gvp) TDocLatexDirective;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__HtmlLN_TDocLatexDirective));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_167_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TDocLatexDirective*) G__getstructoffset())->GetAlignment());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_167_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TDocLatexDirective*) G__getstructoffset())->GetSeparator());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_167_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TDocLatexDirective*) G__getstructoffset())->SeparatorIsRegexp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_167_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TDocLatexDirective*) G__getstructoffset())->GetFontSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_167_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TDocLatexDirective*) G__getstructoffset())->GetListOfLines());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_167_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TDocLatexDirective::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_167_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDocLatexDirective::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_167_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TDocLatexDirective::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_167_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TDocLatexDirective::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_167_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDocLatexDirective*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_167_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDocLatexDirective::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_167_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TDocLatexDirective::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_167_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDocLatexDirective::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_167_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TDocLatexDirective::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Html_167_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TDocLatexDirective* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TDocLatexDirective(*(TDocLatexDirective*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__HtmlLN_TDocLatexDirective));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDocLatexDirective G__TTDocLatexDirective;
static int G__G__Html_167_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TDocLatexDirective*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TDocLatexDirective*) (soff+(sizeof(TDocLatexDirective)*i)))->~G__TTDocLatexDirective();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TDocLatexDirective*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TDocLatexDirective*) (soff))->~G__TTDocLatexDirective();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Html_167_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TDocLatexDirective* dest = (TDocLatexDirective*) G__getstructoffset();
   *dest = *(TDocLatexDirective*) libp->para[0].ref;
   const TDocLatexDirective& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TClassDocInfo */
static int G__G__Html_190_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TClassDocInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TClassDocInfo(
(TClass*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (const char*) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) TClassDocInfo(
(TClass*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (const char*) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TClassDocInfo(
(TClass*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) TClassDocInfo(
(TClass*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TClassDocInfo(
(TClass*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TClassDocInfo(
(TClass*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TClassDocInfo(
(TClass*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TClassDocInfo(
(TClass*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TClassDocInfo((TClass*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TClassDocInfo((TClass*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TClassDocInfo((TClass*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TClassDocInfo((TClass*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__HtmlLN_TClassDocInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_190_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TClassDocInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TClassDocInfo(
(TDictionary*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (const char*) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) TClassDocInfo(
(TDictionary*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (const char*) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TClassDocInfo(
(TDictionary*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) TClassDocInfo(
(TDictionary*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TClassDocInfo(
(TDictionary*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TClassDocInfo(
(TDictionary*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TClassDocInfo(
(TDictionary*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TClassDocInfo(
(TDictionary*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TClassDocInfo((TDictionary*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TClassDocInfo((TDictionary*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TClassDocInfo((TDictionary*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TClassDocInfo((TDictionary*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__HtmlLN_TClassDocInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_190_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TClassDocInfo*) G__getstructoffset())->GetClass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_190_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TClassDocInfo*) G__getstructoffset())->GetHtmlFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_190_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TClassDocInfo*) G__getstructoffset())->GetDeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_190_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TClassDocInfo*) G__getstructoffset())->GetImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_190_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TClassDocInfo*) G__getstructoffset())->GetDeclFileSysName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_190_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TClassDocInfo*) G__getstructoffset())->GetImplFileSysName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_190_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TClassDocInfo*) G__getstructoffset())->SetModule((TModuleDocInfo*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_190_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TClassDocInfo*) G__getstructoffset())->GetModule());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_190_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TClassDocInfo*) G__getstructoffset())->SetSelected((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TClassDocInfo*) G__getstructoffset())->SetSelected();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_190_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TClassDocInfo*) G__getstructoffset())->IsSelected());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_190_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TClassDocInfo*) G__getstructoffset())->HaveSource());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_190_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TClassDocInfo*) G__getstructoffset())->SetHtmlFileName((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_190_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TClassDocInfo*) G__getstructoffset())->SetDeclFileName((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_190_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TClassDocInfo*) G__getstructoffset())->SetImplFileName((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_190_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TClassDocInfo*) G__getstructoffset())->SetDeclFileSysName((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_190_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TClassDocInfo*) G__getstructoffset())->SetImplFileSysName((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_190_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TList& obj = ((TClassDocInfo*) G__getstructoffset())->GetListOfTypedefs();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_190_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TClassDocInfo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_190_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TClassDocInfo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_190_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TClassDocInfo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_190_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TClassDocInfo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_190_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TClassDocInfo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_190_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TClassDocInfo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_190_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TClassDocInfo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_190_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TClassDocInfo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_190_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TClassDocInfo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TClassDocInfo G__TTClassDocInfo;
static int G__G__Html_190_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TClassDocInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TClassDocInfo*) (soff+(sizeof(TClassDocInfo)*i)))->~G__TTClassDocInfo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TClassDocInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TClassDocInfo*) (soff))->~G__TTClassDocInfo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TLibraryDocInfo */
static int G__G__Html_191_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLibraryDocInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLibraryDocInfo[n];
     } else {
       p = new((void*) gvp) TLibraryDocInfo[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLibraryDocInfo;
     } else {
       p = new((void*) gvp) TLibraryDocInfo;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__HtmlLN_TLibraryDocInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_191_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLibraryDocInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TLibraryDocInfo((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TLibraryDocInfo((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__HtmlLN_TLibraryDocInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_191_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const set<std::string>& obj = ((TLibraryDocInfo*) G__getstructoffset())->GetDependencies();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_191_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const set<std::string>& obj = ((TLibraryDocInfo*) G__getstructoffset())->GetModules();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_191_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLibraryDocInfo*) G__getstructoffset())->AddDependency(*(string*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_191_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLibraryDocInfo*) G__getstructoffset())->AddModule(*(string*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_191_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TLibraryDocInfo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_191_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLibraryDocInfo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_191_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TLibraryDocInfo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_191_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TLibraryDocInfo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_191_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLibraryDocInfo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_191_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLibraryDocInfo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_191_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLibraryDocInfo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_191_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLibraryDocInfo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_191_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLibraryDocInfo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Html_191_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TLibraryDocInfo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TLibraryDocInfo(*(TLibraryDocInfo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__HtmlLN_TLibraryDocInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TLibraryDocInfo G__TTLibraryDocInfo;
static int G__G__Html_191_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TLibraryDocInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TLibraryDocInfo*) (soff+(sizeof(TLibraryDocInfo)*i)))->~G__TTLibraryDocInfo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TLibraryDocInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TLibraryDocInfo*) (soff))->~G__TTLibraryDocInfo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Html_191_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLibraryDocInfo* dest = (TLibraryDocInfo*) G__getstructoffset();
   *dest = *(TLibraryDocInfo*) libp->para[0].ref;
   const TLibraryDocInfo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THtml::THelperBase */
static int G__G__Html_196_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THtml::THelperBase* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THtml::THelperBase[n];
     } else {
       p = new((void*) gvp) THtml::THelperBase[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THtml::THelperBase;
     } else {
       p = new((void*) gvp) THtml::THelperBase;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTHelperBase));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_196_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THtml::THelperBase*) G__getstructoffset())->SetOwner((THtml*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_196_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THtml::THelperBase*) G__getstructoffset())->GetOwner());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_196_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) THtml::THelperBase::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_196_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THtml::THelperBase::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_196_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) THtml::THelperBase::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_196_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      THtml::THelperBase::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_196_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THtml::THelperBase*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_196_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THtml::THelperBase::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_196_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THtml::THelperBase::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_196_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THtml::THelperBase::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_196_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THtml::THelperBase::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Html_196_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   THtml::THelperBase* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new THtml::THelperBase(*(THtml::THelperBase*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTHelperBase));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THtml::THelperBase G__TTHtmlcLcLTHelperBase;
static int G__G__Html_196_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (THtml::THelperBase*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((THtml::THelperBase*) (soff+(sizeof(THtml::THelperBase)*i)))->~G__TTHtmlcLcLTHelperBase();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (THtml::THelperBase*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((THtml::THelperBase*) (soff))->~G__TTHtmlcLcLTHelperBase();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Html_196_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THtml::THelperBase* dest = (THtml::THelperBase*) G__getstructoffset();
   *dest = *(THtml::THelperBase*) libp->para[0].ref;
   const THtml::THelperBase& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THtml::TFileSysEntry */
static int G__G__Html_197_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THtml::TFileSysEntry* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new THtml::TFileSysEntry((const char*) G__int(libp->para[0]), (THtml::TFileSysDir*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) THtml::TFileSysEntry((const char*) G__int(libp->para[0]), (THtml::TFileSysDir*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTFileSysEntry));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_197_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const THtml::TFileSysEntry*) G__getstructoffset())->GetFullName(*(TString*) libp->para[0].ref, (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_197_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THtml::TFileSysEntry*) G__getstructoffset())->GetParent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_197_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THtml::TFileSysEntry*) G__getstructoffset())->GetLevel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_197_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) THtml::TFileSysEntry::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_197_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THtml::TFileSysEntry::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_197_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) THtml::TFileSysEntry::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_197_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      THtml::TFileSysEntry::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_197_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THtml::TFileSysEntry*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_197_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THtml::TFileSysEntry::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_197_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THtml::TFileSysEntry::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_197_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THtml::TFileSysEntry::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_197_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THtml::TFileSysEntry::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Html_197_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   THtml::TFileSysEntry* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new THtml::TFileSysEntry(*(THtml::TFileSysEntry*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTFileSysEntry));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THtml::TFileSysEntry G__TTHtmlcLcLTFileSysEntry;
static int G__G__Html_197_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (THtml::TFileSysEntry*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((THtml::TFileSysEntry*) (soff+(sizeof(THtml::TFileSysEntry)*i)))->~G__TTHtmlcLcLTFileSysEntry();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (THtml::TFileSysEntry*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((THtml::TFileSysEntry*) (soff))->~G__TTHtmlcLcLTFileSysEntry();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Html_197_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THtml::TFileSysEntry* dest = (THtml::TFileSysEntry*) G__getstructoffset();
   *dest = *(THtml::TFileSysEntry*) libp->para[0].ref;
   const THtml::TFileSysEntry& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THtml::TModuleDefinition */
static int G__G__Html_198_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const THtml::TModuleDefinition*) G__getstructoffset())->GetModule((TClass*) G__int(libp->para[0]), (THtml::TFileSysEntry*) G__int(libp->para[1])
, *(TString*) libp->para[2].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_198_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) THtml::TModuleDefinition::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_198_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THtml::TModuleDefinition::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_198_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) THtml::TModuleDefinition::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_198_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      THtml::TModuleDefinition::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_198_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THtml::TModuleDefinition*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_198_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THtml::TModuleDefinition::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_198_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THtml::TModuleDefinition::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_198_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THtml::TModuleDefinition::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_198_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THtml::TModuleDefinition::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__G__Html_198_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THtml::TModuleDefinition *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THtml::TModuleDefinition[n];
     } else {
       p = new((void*) gvp) THtml::TModuleDefinition[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THtml::TModuleDefinition;
     } else {
       p = new((void*) gvp) THtml::TModuleDefinition;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTModuleDefinition));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Html_198_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   THtml::TModuleDefinition* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new THtml::TModuleDefinition(*(THtml::TModuleDefinition*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTModuleDefinition));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THtml::TModuleDefinition G__TTHtmlcLcLTModuleDefinition;
static int G__G__Html_198_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (THtml::TModuleDefinition*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((THtml::TModuleDefinition*) (soff+(sizeof(THtml::TModuleDefinition)*i)))->~G__TTHtmlcLcLTModuleDefinition();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (THtml::TModuleDefinition*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((THtml::TModuleDefinition*) (soff))->~G__TTHtmlcLcLTModuleDefinition();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Html_198_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THtml::TModuleDefinition* dest = (THtml::TModuleDefinition*) G__getstructoffset();
   *dest = *(THtml::TModuleDefinition*) libp->para[0].ref;
   const THtml::TModuleDefinition& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THtml::TFileDefinition */
static int G__G__Html_199_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 103, (long) ((const THtml::TFileDefinition*) G__getstructoffset())->GetDeclFileName((const TClass*) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, *(TString*) libp->para[2].ref, (THtml::TFileSysEntry**) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 103, (long) ((const THtml::TFileDefinition*) G__getstructoffset())->GetDeclFileName((const TClass*) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, *(TString*) libp->para[2].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_199_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 103, (long) ((const THtml::TFileDefinition*) G__getstructoffset())->GetImplFileName((const TClass*) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, *(TString*) libp->para[2].ref, (THtml::TFileSysEntry**) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 103, (long) ((const THtml::TFileDefinition*) G__getstructoffset())->GetImplFileName((const TClass*) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, *(TString*) libp->para[2].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_199_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) THtml::TFileDefinition::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_199_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THtml::TFileDefinition::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_199_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) THtml::TFileDefinition::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_199_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      THtml::TFileDefinition::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_199_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THtml::TFileDefinition*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_199_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THtml::TFileDefinition::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_199_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THtml::TFileDefinition::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_199_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THtml::TFileDefinition::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_199_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THtml::TFileDefinition::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__G__Html_199_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THtml::TFileDefinition *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THtml::TFileDefinition[n];
     } else {
       p = new((void*) gvp) THtml::TFileDefinition[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THtml::TFileDefinition;
     } else {
       p = new((void*) gvp) THtml::TFileDefinition;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTFileDefinition));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Html_199_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   THtml::TFileDefinition* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new THtml::TFileDefinition(*(THtml::TFileDefinition*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTFileDefinition));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THtml::TFileDefinition G__TTHtmlcLcLTFileDefinition;
static int G__G__Html_199_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (THtml::TFileDefinition*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((THtml::TFileDefinition*) (soff+(sizeof(THtml::TFileDefinition)*i)))->~G__TTHtmlcLcLTFileDefinition();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (THtml::TFileDefinition*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((THtml::TFileDefinition*) (soff))->~G__TTHtmlcLcLTFileDefinition();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Html_199_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THtml::TFileDefinition* dest = (THtml::TFileDefinition*) G__getstructoffset();
   *dest = *(THtml::TFileDefinition*) libp->para[0].ref;
   const THtml::TFileDefinition& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THtml::TPathDefinition */
static int G__G__Html_200_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const THtml::TPathDefinition*) G__getstructoffset())->GetMacroPath(*(TString*) libp->para[0].ref, *(TString*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_200_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const THtml::TPathDefinition*) G__getstructoffset())->GetIncludeAs((TClass*) G__int(libp->para[0]), *(TString*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_200_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const THtml::TPathDefinition*) G__getstructoffset())->GetFileNameFromInclude((const char*) G__int(libp->para[0]), *(TString*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_200_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const THtml::TPathDefinition*) G__getstructoffset())->GetDocDir(*(TString*) libp->para[0].ref, *(TString*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_200_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) THtml::TPathDefinition::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_200_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THtml::TPathDefinition::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_200_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) THtml::TPathDefinition::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_200_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      THtml::TPathDefinition::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_200_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THtml::TPathDefinition*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_200_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THtml::TPathDefinition::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_200_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THtml::TPathDefinition::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_200_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THtml::TPathDefinition::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_200_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THtml::TPathDefinition::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__G__Html_200_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THtml::TPathDefinition *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THtml::TPathDefinition[n];
     } else {
       p = new((void*) gvp) THtml::TPathDefinition[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THtml::TPathDefinition;
     } else {
       p = new((void*) gvp) THtml::TPathDefinition;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTPathDefinition));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Html_200_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   THtml::TPathDefinition* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new THtml::TPathDefinition(*(THtml::TPathDefinition*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTPathDefinition));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THtml::TPathDefinition G__TTHtmlcLcLTPathDefinition;
static int G__G__Html_200_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (THtml::TPathDefinition*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((THtml::TPathDefinition*) (soff+(sizeof(THtml::TPathDefinition)*i)))->~G__TTHtmlcLcLTPathDefinition();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (THtml::TPathDefinition*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((THtml::TPathDefinition*) (soff))->~G__TTHtmlcLcLTPathDefinition();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Html_200_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THtml::TPathDefinition* dest = (THtml::TPathDefinition*) G__getstructoffset();
   *dest = *(THtml::TPathDefinition*) libp->para[0].ref;
   const THtml::TPathDefinition& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THtml::TFileSysDir */
static int G__G__Html_201_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THtml::TFileSysDir* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new THtml::TFileSysDir((const char*) G__int(libp->para[0]), (THtml::TFileSysDir*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) THtml::TFileSysDir((const char*) G__int(libp->para[0]), (THtml::TFileSysDir*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTFileSysDir));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_201_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THtml::TFileSysDir*) G__getstructoffset())->GetFiles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_201_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THtml::TFileSysDir*) G__getstructoffset())->GetSubDirs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_201_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THtml::TFileSysDir*) G__getstructoffset())->Recurse((THtml::TFileSysDB*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_201_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) THtml::TFileSysDir::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_201_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THtml::TFileSysDir::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_201_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) THtml::TFileSysDir::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_201_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      THtml::TFileSysDir::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_201_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THtml::TFileSysDir*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_201_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THtml::TFileSysDir::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_201_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THtml::TFileSysDir::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_201_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THtml::TFileSysDir::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_201_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THtml::TFileSysDir::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THtml::TFileSysDir G__TTHtmlcLcLTFileSysDir;
static int G__G__Html_201_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (THtml::TFileSysDir*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((THtml::TFileSysDir*) (soff+(sizeof(THtml::TFileSysDir)*i)))->~G__TTHtmlcLcLTFileSysDir();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (THtml::TFileSysDir*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((THtml::TFileSysDir*) (soff))->~G__TTHtmlcLcLTFileSysDir();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THtml::TFileSysDB */
static int G__G__Html_202_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THtml::TFileSysDB* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new THtml::TFileSysDB(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) THtml::TFileSysDB(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTFileSysDB));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_202_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TExMap& obj = ((THtml::TFileSysDB*) G__getstructoffset())->GetMapIno();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_202_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const THashTable& obj = ((THtml::TFileSysDB*) G__getstructoffset())->GetEntries();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_202_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString& obj = ((const THtml::TFileSysDB*) G__getstructoffset())->GetIgnore();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_202_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THtml::TFileSysDB*) G__getstructoffset())->GetMaxLevel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_202_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) THtml::TFileSysDB::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_202_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THtml::TFileSysDB::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_202_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) THtml::TFileSysDB::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_202_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      THtml::TFileSysDB::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_202_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THtml::TFileSysDB*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_202_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THtml::TFileSysDB::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_202_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THtml::TFileSysDB::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_202_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THtml::TFileSysDB::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_202_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THtml::TFileSysDB::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THtml::TFileSysDB G__TTHtmlcLcLTFileSysDB;
static int G__G__Html_202_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (THtml::TFileSysDB*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((THtml::TFileSysDB*) (soff+(sizeof(THtml::TFileSysDB)*i)))->~G__TTHtmlcLcLTFileSysDB();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (THtml::TFileSysDB*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((THtml::TFileSysDB*) (soff))->~G__TTHtmlcLcLTFileSysDB();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THtml::TFileSysRoot */
static int G__G__Html_203_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THtml::TFileSysRoot* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new THtml::TFileSysRoot((const char*) G__int(libp->para[0]), (THtml::TFileSysDB*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) THtml::TFileSysRoot((const char*) G__int(libp->para[0]), (THtml::TFileSysDB*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTFileSysRoot));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_203_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) THtml::TFileSysRoot::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_203_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THtml::TFileSysRoot::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_203_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) THtml::TFileSysRoot::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_203_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      THtml::TFileSysRoot::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_203_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THtml::TFileSysRoot*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_203_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THtml::TFileSysRoot::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_203_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THtml::TFileSysRoot::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_203_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THtml::TFileSysRoot::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Html_203_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THtml::TFileSysRoot::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THtml::TFileSysRoot G__TTHtmlcLcLTFileSysRoot;
static int G__G__Html_203_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (THtml::TFileSysRoot*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((THtml::TFileSysRoot*) (soff+(sizeof(THtml::TFileSysRoot)*i)))->~G__TTHtmlcLcLTFileSysRoot();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (THtml::TFileSysRoot*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((THtml::TFileSysRoot*) (soff))->~G__TTHtmlcLcLTFileSysRoot();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TClassDocOutput */

/* TDocOutput */

/* THtml */

/* TDocParser */

/* TModuleDocInfo */

/* TDocDirective */

/* TDocHtmlDirective */

/* TDocMacroDirective */

/* TDocLatexDirective */

/* TClassDocInfo */

/* TLibraryDocInfo */

/* THtml::THelperBase */

/* THtml::TFileSysEntry */

/* THtml::TModuleDefinition */

/* THtml::TFileDefinition */

/* THtml::TPathDefinition */

/* THtml::TFileSysDir */

/* THtml::TFileSysDB */

/* THtml::TFileSysRoot */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__Html {
 public:
  G__Sizep2memfuncG__Html(): p(&G__Sizep2memfuncG__Html::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__Html::*p)();
};

size_t G__get_sizep2memfuncG__Html()
{
  G__Sizep2memfuncG__Html a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__Html() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__HtmlLN_TClassDocOutput))) {
     TClassDocOutput *G__Lderived;
     G__Lderived=(TClassDocOutput*)0x1000;
     {
       TDocOutput *G__Lpbase=(TDocOutput*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HtmlLN_TClassDocOutput),G__get_linked_tagnum(&G__G__HtmlLN_TDocOutput),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HtmlLN_TClassDocOutput),G__get_linked_tagnum(&G__G__HtmlLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__HtmlLN_TDocOutput))) {
     TDocOutput *G__Lderived;
     G__Lderived=(TDocOutput*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HtmlLN_TDocOutput),G__get_linked_tagnum(&G__G__HtmlLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__HtmlLN_THtml))) {
     THtml *G__Lderived;
     G__Lderived=(THtml*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HtmlLN_THtml),G__get_linked_tagnum(&G__G__HtmlLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__HtmlLN_TDocParser))) {
     TDocParser *G__Lderived;
     G__Lderived=(TDocParser*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HtmlLN_TDocParser),G__get_linked_tagnum(&G__G__HtmlLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__HtmlLN_TModuleDocInfo))) {
     TModuleDocInfo *G__Lderived;
     G__Lderived=(TModuleDocInfo*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HtmlLN_TModuleDocInfo),G__get_linked_tagnum(&G__G__HtmlLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HtmlLN_TModuleDocInfo),G__get_linked_tagnum(&G__G__HtmlLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__HtmlLN_TDocDirective))) {
     TDocDirective *G__Lderived;
     G__Lderived=(TDocDirective*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HtmlLN_TDocDirective),G__get_linked_tagnum(&G__G__HtmlLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HtmlLN_TDocDirective),G__get_linked_tagnum(&G__G__HtmlLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__HtmlLN_TDocHtmlDirective))) {
     TDocHtmlDirective *G__Lderived;
     G__Lderived=(TDocHtmlDirective*)0x1000;
     {
       TDocDirective *G__Lpbase=(TDocDirective*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HtmlLN_TDocHtmlDirective),G__get_linked_tagnum(&G__G__HtmlLN_TDocDirective),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HtmlLN_TDocHtmlDirective),G__get_linked_tagnum(&G__G__HtmlLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HtmlLN_TDocHtmlDirective),G__get_linked_tagnum(&G__G__HtmlLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__HtmlLN_TDocMacroDirective))) {
     TDocMacroDirective *G__Lderived;
     G__Lderived=(TDocMacroDirective*)0x1000;
     {
       TDocDirective *G__Lpbase=(TDocDirective*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HtmlLN_TDocMacroDirective),G__get_linked_tagnum(&G__G__HtmlLN_TDocDirective),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HtmlLN_TDocMacroDirective),G__get_linked_tagnum(&G__G__HtmlLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HtmlLN_TDocMacroDirective),G__get_linked_tagnum(&G__G__HtmlLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__HtmlLN_TDocLatexDirective))) {
     TDocLatexDirective *G__Lderived;
     G__Lderived=(TDocLatexDirective*)0x1000;
     {
       TDocDirective *G__Lpbase=(TDocDirective*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HtmlLN_TDocLatexDirective),G__get_linked_tagnum(&G__G__HtmlLN_TDocDirective),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HtmlLN_TDocLatexDirective),G__get_linked_tagnum(&G__G__HtmlLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HtmlLN_TDocLatexDirective),G__get_linked_tagnum(&G__G__HtmlLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__HtmlLN_TClassDocInfo))) {
     TClassDocInfo *G__Lderived;
     G__Lderived=(TClassDocInfo*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HtmlLN_TClassDocInfo),G__get_linked_tagnum(&G__G__HtmlLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__HtmlLN_TLibraryDocInfo))) {
     TLibraryDocInfo *G__Lderived;
     G__Lderived=(TLibraryDocInfo*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HtmlLN_TLibraryDocInfo),G__get_linked_tagnum(&G__G__HtmlLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HtmlLN_TLibraryDocInfo),G__get_linked_tagnum(&G__G__HtmlLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTHelperBase))) {
     THtml::THelperBase *G__Lderived;
     G__Lderived=(THtml::THelperBase*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTHelperBase),G__get_linked_tagnum(&G__G__HtmlLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTFileSysEntry))) {
     THtml::TFileSysEntry *G__Lderived;
     G__Lderived=(THtml::TFileSysEntry*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTFileSysEntry),G__get_linked_tagnum(&G__G__HtmlLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTModuleDefinition))) {
     THtml::TModuleDefinition *G__Lderived;
     G__Lderived=(THtml::TModuleDefinition*)0x1000;
     {
       THtml::THelperBase *G__Lpbase=(THtml::THelperBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTModuleDefinition),G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTHelperBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTModuleDefinition),G__get_linked_tagnum(&G__G__HtmlLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTFileDefinition))) {
     THtml::TFileDefinition *G__Lderived;
     G__Lderived=(THtml::TFileDefinition*)0x1000;
     {
       THtml::THelperBase *G__Lpbase=(THtml::THelperBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTFileDefinition),G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTHelperBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTFileDefinition),G__get_linked_tagnum(&G__G__HtmlLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTPathDefinition))) {
     THtml::TPathDefinition *G__Lderived;
     G__Lderived=(THtml::TPathDefinition*)0x1000;
     {
       THtml::THelperBase *G__Lpbase=(THtml::THelperBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTPathDefinition),G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTHelperBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTPathDefinition),G__get_linked_tagnum(&G__G__HtmlLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTFileSysDir))) {
     THtml::TFileSysDir *G__Lderived;
     G__Lderived=(THtml::TFileSysDir*)0x1000;
     {
       THtml::TFileSysEntry *G__Lpbase=(THtml::TFileSysEntry*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTFileSysDir),G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTFileSysEntry),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTFileSysDir),G__get_linked_tagnum(&G__G__HtmlLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTFileSysDB))) {
     THtml::TFileSysDB *G__Lderived;
     G__Lderived=(THtml::TFileSysDB*)0x1000;
     {
       THtml::TFileSysDir *G__Lpbase=(THtml::TFileSysDir*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTFileSysDB),G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTFileSysDir),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       THtml::TFileSysEntry *G__Lpbase=(THtml::TFileSysEntry*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTFileSysDB),G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTFileSysEntry),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTFileSysDB),G__get_linked_tagnum(&G__G__HtmlLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTFileSysRoot))) {
     THtml::TFileSysRoot *G__Lderived;
     G__Lderived=(THtml::TFileSysRoot*)0x1000;
     {
       THtml::TFileSysDir *G__Lpbase=(THtml::TFileSysDir*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTFileSysRoot),G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTFileSysDir),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       THtml::TFileSysEntry *G__Lpbase=(THtml::TFileSysEntry*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTFileSysRoot),G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTFileSysEntry),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTFileSysRoot),G__get_linked_tagnum(&G__G__HtmlLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__Html() {

   /* Setting up typedef entry */
   G__search_typename2("UChar_t",98,-1,0,-1);
   G__setnewtype(-1,"Unsigned Character 1 byte (unsigned char)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Long_t",108,-1,0,-1);
   G__setnewtype(-1,"Signed long integer 4 bytes (long)",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Ssiz_t",105,-1,0,-1);
   G__setnewtype(-1,"String size (int)",0);
   G__search_typename2("vector<TSchemaHelper>",117,G__get_linked_tagnum(&G__G__HtmlLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__HtmlLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__HtmlLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__HtmlLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__HtmlLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__HtmlLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__HtmlLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__G__HtmlLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__G__HtmlLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__G__HtmlLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,Int_t>",117,G__get_linked_tagnum(&G__G__HtmlLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,int>",117,G__get_linked_tagnum(&G__G__HtmlLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,int,less<string> >",117,G__get_linked_tagnum(&G__G__HtmlLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<UInt_t>",117,G__get_linked_tagnum(&G__G__HtmlLN_listlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<unsigned int>",117,G__get_linked_tagnum(&G__G__HtmlLN_listlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<UInt_t>",117,G__get_linked_tagnum(&G__G__HtmlLN_setlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<unsigned int>",117,G__get_linked_tagnum(&G__G__HtmlLN_setlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<unsigned int,less<unsigned int> >",117,G__get_linked_tagnum(&G__G__HtmlLN_setlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<std::string>",117,G__get_linked_tagnum(&G__G__HtmlLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<string>",117,G__get_linked_tagnum(&G__G__HtmlLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<string,less<string> >",117,G__get_linked_tagnum(&G__G__HtmlLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__G__HtmlLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__G__HtmlLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__G__HtmlLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TClass*,Int_t>",117,G__get_linked_tagnum(&G__G__HtmlLN_maplETClassmUcOintcOlesslETClassmUgRcOallocatorlEpairlETClassmUsPconstcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TClass*,int>",117,G__get_linked_tagnum(&G__G__HtmlLN_maplETClassmUcOintcOlesslETClassmUgRcOallocatorlEpairlETClassmUsPconstcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TClass*,int,less<TClass*> >",117,G__get_linked_tagnum(&G__G__HtmlLN_maplETClassmUcOintcOlesslETClassmUgRcOallocatorlEpairlETClassmUsPconstcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TString>",117,G__get_linked_tagnum(&G__G__HtmlLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TString>",117,G__get_linked_tagnum(&G__G__HtmlLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TString,less<string> >",117,G__get_linked_tagnum(&G__G__HtmlLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TClassDocOutput */
static void G__setup_memvarTClassDocOutput(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__HtmlLN_TClassDocOutput));
   { TClassDocOutput *p; p=(TClassDocOutput*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__HtmlLN_TClassDocOutputcLcLETraverse),-1,-2,1,"kUp=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__HtmlLN_TClassDocOutputcLcLETraverse),-1,-2,1,"kDown=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__HtmlLN_TClassDocOutputcLcLETraverse),-1,-2,1,"kBoth=2",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fHierarchyLines=",0,"counter for no. lines in hierarchy");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TClass),-1,-1,2,"fCurrentClass=",0,"class to generate output for");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TList),-1,-1,2,"fCurrentClassesTypedefs=",0,"typedefs to the current class");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TDocParser),-1,-1,2,"fParser=",0,"parser we use");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDocOutput */
static void G__setup_memvarTDocOutput(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__HtmlLN_TDocOutput));
   { TDocOutput *p; p=(TDocOutput*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__HtmlLN_TDocOutputcLcLEGraphvizTool),-1,-2,1,"kDot=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__HtmlLN_TDocOutputcLcLEGraphvizTool),-1,-2,1,"kNeato=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__HtmlLN_TDocOutputcLcLEGraphvizTool),-1,-2,1,"kFdp=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__HtmlLN_TDocOutputcLcLEGraphvizTool),-1,-2,1,"kCirco=3",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HtmlLN_THtml),-1,-1,2,"fHtml=",0,"THtml object we belong to");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__HtmlLN_TDocOutputcLcLEFileType),-1,-2,1,"kSource=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__HtmlLN_TDocOutputcLcLEFileType),-1,-2,1,"kInclude=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__HtmlLN_TDocOutputcLcLEFileType),-1,-2,1,"kTree=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__HtmlLN_TDocOutputcLcLEFileType),-1,-2,1,"kDoc=3",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* THtml */
static void G__setup_memvarTHtml(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__HtmlLN_THtml));
   { THtml *p; p=(THtml*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLEConvertOutput),-1,-2,1,"kNoOutput=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLEConvertOutput),-1,-2,1,"kInterpretedOutput=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLEConvertOutput),-1,-2,1,"kCompiledOutput=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLEConvertOutput),-1,-2,1,"kForceOutput=16",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLEConvertOutput),-1,-2,1,"kSeparateProcessOutput=32",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TString),-1,-1,2,"fCounter=",0,"counter string");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TString),-1,-1,2,"fCounterFormat=",0,"counter printf-like format");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TString),-1,-1,2,"fProductName=",0,"name of the product to document");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TIter),-1,-1,2,"fThreadedClassIter=",0,"fClasses iterator for MakeClassThreaded");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fThreadedClassCount=",0,"counter of processed classes for MakeClassThreaded");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TVirtualMutex),-1,-1,2,"fMakeClassMutex=",0,"Mutex for MakeClassThreaded");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TGClient),-1,-1,2,"fGClient=",0,"gClient, cached and queried through CINT");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLDocSyntax_t),-1,-1,2,"fDocSyntax=",0,"doc syntax configuration");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLLinkInfo_t),-1,-1,2,"fLinkInfo=",0,"link (URL) configuration");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLOutputStyle_t),-1,-1,2,"fOutputStyle=",0,"output style configuration");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLPathInfo_t),-1,-1,2,"fPathInfo=",0,"path configuration");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLDocEntityInfo_t),-1,-1,2,"fDocEntityInfo=",0,"data for documented entities");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTPathDefinition),-1,-1,2,"fPathDef=",0,"object translating classes to module names");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTModuleDefinition),-1,-1,2,"fModuleDef=",0,"object translating classes to module names");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTFileDefinition),-1,-1,2,"fFileDef=",0,"object translating classes to file names");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTFileSysDB),-1,-1,2,"fLocalFiles=",0,"files found locally for a given source path");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fBatch=",0,"Whether to enable GUI output");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDocParser */
static void G__setup_memvarTDocParser(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__HtmlLN_TDocParser));
   { TDocParser *p; p=(TDocParser*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__HtmlLN_TDocParsercLcLEDocContext),-1,-2,1,"kIgnore=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__HtmlLN_TDocParsercLcLEDocContext),-1,-2,1,"kDocFunc=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__HtmlLN_TDocParsercLcLEDocContext),-1,-2,1,"kDocClass=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__HtmlLN_TDocParsercLcLEDocContext),-1,-2,1,"kNumDocContexts=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__HtmlLN_TDocParsercLcLESourceInfo),-1,-2,1,"kInfoLastUpdate=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__HtmlLN_TDocParsercLcLESourceInfo),-1,-2,1,"kInfoAuthor=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__HtmlLN_TDocParsercLcLESourceInfo),-1,-2,1,"kInfoCopyright=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__HtmlLN_TDocParsercLcLESourceInfo),-1,-2,1,"kInfoLastChanged=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__HtmlLN_TDocParsercLcLESourceInfo),-1,-2,1,"kInfoLastGenerated=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__HtmlLN_TDocParsercLcLESourceInfo),-1,-2,1,"kNumSourceInfos=5",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__HtmlLN_TDocParsercLcLEAccess),-1,-2,1,"kPrivate=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__HtmlLN_TDocParsercLcLEAccess),-1,-2,1,"kProtected=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__HtmlLN_TDocParsercLcLEAccess),-1,-2,1,"kPublic=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__HtmlLN_TDocParsercLcLEParseContext),-1,-2,1,"kNoContext=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__HtmlLN_TDocParsercLcLEParseContext),-1,-2,1,"kCode=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__HtmlLN_TDocParsercLcLEParseContext),-1,-2,1,"kComment=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__HtmlLN_TDocParsercLcLEParseContext),-1,-2,1,"kDirective=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__HtmlLN_TDocParsercLcLEParseContext),-1,-2,1,"kString=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__HtmlLN_TDocParsercLcLEParseContext),-1,-2,1,"kKeyword=5",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__HtmlLN_TDocParsercLcLEParseContext),-1,-2,1,"kCPP=6",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__HtmlLN_TDocParsercLcLEParseContext),-1,-2,1,"kVerbatim=7",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__HtmlLN_TDocParsercLcLEParseContext),-1,-2,1,"kNumParseContexts=8",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__HtmlLN_TDocParsercLcLEParseContext),-1,-2,1,"kParseContextMask=15",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__HtmlLN_TDocParsercLcLEParseContextFlag),-1,-2,1,"kCXXComment=16",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__HtmlLN_TDocParsercLcLEParseContextFlag),-1,-2,1,"kParseContextFlagMask=-16",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HtmlLN_THtml),-1,-1,2,"fHtml=",0,"THtml object using us");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TDocOutput),-1,-1,2,"fDocOutput=",0,"TDocOutput invoking us");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fLineNo=",0,"current line number");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TString),-1,-1,2,"fLineRaw=",0,"current line");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TString),-1,-1,2,"fLineStripped=",0,"current line without surrounding spaces");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TString),-1,-1,2,"fLineComment=",0,"current line with links and directives for doc");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TString),-1,-1,2,"fLineSource=",0,"current line with links");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TString),-1,-1,2,"fComment=",0,"current comment");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TString),-1,-1,2,"fFirstClassDoc=",0,"first class-doc found - per file, taken if fLastClassDoc is empty");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TString),-1,-1,2,"fLastClassDoc=",0,"last class-doc found - becomes class doc at ClassImp or first method");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TClass),-1,-1,2,"fCurrentClass=",0,"current class context of sources being parsed");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TClass),-1,-1,2,"fRecentClass=",0,"recently seen class context of sources being parsed, e.g. for Convert()");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TString),-1,-1,2,"fCurrentModule=",0,"current module context of sources being parsed");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TString),-1,-1,2,"fCurrentMethodTag=",0,"name_idx of the currently parsed method");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fDirectiveCount=",0,"index of directive for current method");
   G__memvar_setup((void*)0,108,0,0,-1,G__defined_typename("Long_t"),-1,2,"fLineNumber=",0,"source line number");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TString),-1,-1,2,"fCurrentFile=",0,"current source / header file name");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__HtmlLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR),G__defined_typename("map<std::string,Int_t>"),-1,2,"fMethodCounts=",0,"number of undocumented overloads");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TDocParsercLcLEDocContext),-1,-1,2,"fDocContext=",0,"current context of parsed sources for documenting");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__HtmlLN_listlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("list<UInt_t>"),-1,2,"fParseContext=",0,"current context of parsed sources");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fCheckForMethod=",0,"whether to check the current line for a method");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__HtmlLN_TDocParsercLcLdA),-1,-2,1,"kClassDoc_Uninitialized=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__HtmlLN_TDocParsercLcLdA),-1,-2,1,"kClassDoc_LookingNothingFound=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__HtmlLN_TDocParsercLcLdA),-1,-2,1,"kClassDoc_LookingHaveSomething=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__HtmlLN_TDocParsercLcLdA),-1,-2,1,"kClassDoc_Written=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__HtmlLN_TDocParsercLcLdA),-1,-2,1,"kClassDoc_Ignore=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__HtmlLN_TDocParsercLcLdA),-1,-2,1,"kClassDoc_NumStates=5",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TDocParsercLcLdA),-1,-1,2,"fClassDocState=",0,"whether we found the class description");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fCommentAtBOL=",0,"at the beginning of the current line, fParseContext contained kComment");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TString),-1,-1,2,"fClassDescrTag=",0,"tag for finding the class description");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TString),-1,-1,2,"fSourceInfoTags[5]=",0,"tags for source info elements (copyright, last changed, author)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TList),-1,-1,2,"fDirectiveHandlers=",0,"handler for doc directives (TDocDirective objects)");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fAllowDirectives=",0,"whether directives are to be interpreted");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__HtmlLN_setlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("set<UInt_t>"),-1,2,"fExtraLinesWithAnchor=",0,"lines that need an additional anchor");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TString),-1,-1,2,"fSourceInfo[5]=",0,"author, last changed, ...");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__HtmlLN_THashList),-1,-1,2,"fMethods[3]=",0,"methods as TMethodWrapper objects (by access)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TList),-1,-1,2,"fDataMembers[6]=",0,"data members (by access, plus enums)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__HtmlLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR),G__defined_typename("set<std::string>"),-2,2,"fgKeywords=",0,"C++ keywords");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TModuleDocInfo */
static void G__setup_memvarTModuleDocInfo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__HtmlLN_TModuleDocInfo));
   { TModuleDocInfo *p; p=(TModuleDocInfo*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TModuleDocInfo),-1,-1,4,"fSuper=",0,"module containing this module");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__HtmlLN_THashList),-1,-1,4,"fSub=",0,"modules contained in this module");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TList),-1,-1,4,"fClasses=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fSelected=",0,"selected for doc output");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDocDirective */
static void G__setup_memvarTDocDirective(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__HtmlLN_TDocDirective));
   { TDocDirective *p; p=(TDocDirective*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TDocParser),-1,-1,2,"fDocParser=",0,"parser invoking this handler");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HtmlLN_THtml),-1,-1,2,"fHtml=",0,"parser's THtml object");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TDocOutput),-1,-1,2,"fDocOutput=",0,"parser invoking this handler");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TString),-1,-1,2,"fParameters=",0,"parameters to the directive");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fCounter=",0,"counter to generate unique names, -1 to ignore");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDocHtmlDirective */
static void G__setup_memvarTDocHtmlDirective(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__HtmlLN_TDocHtmlDirective));
   { TDocHtmlDirective *p; p=(TDocHtmlDirective*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TString),-1,-1,4,"fText=",0,"HTML text to be kept");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fVerbatim=",0,"whether we are in a <pre></pre> block");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDocMacroDirective */
static void G__setup_memvarTDocMacroDirective(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__HtmlLN_TDocMacroDirective));
   { TDocMacroDirective *p; p=(TDocMacroDirective*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TMacro),-1,-1,4,"fMacro=",0,"macro to be executed");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fNeedGraphics=",0,"if set, we cannot switch to batch mode");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fShowSource=",0,"whether a source tab should be created");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsFilename=",0,"whether the directive is a failename to be executed");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDocLatexDirective */
static void G__setup_memvarTDocLatexDirective(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__HtmlLN_TDocLatexDirective));
   { TDocLatexDirective *p; p=(TDocLatexDirective*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TMacro),-1,-1,2,"fLatex=",0,"collection of lines");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fFontSize=",0,"fontsize for current latex block, in pixels");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TString),-1,-1,2,"fSeparator=",0,"column separator, often \"=\"");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fSepIsRegexp=",0,"whether fSeparator is a regexp expression");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TString),-1,-1,2,"fAlignment=",0,"column alignment: 'l' for justify left, 'c' for center, 'r' for right");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TVirtualPad),-1,-1,2,"fBBCanvas=",0,"canvas for bounding box determination");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TClassDocInfo */
static void G__setup_memvarTClassDocInfo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__HtmlLN_TClassDocInfo));
   { TClassDocInfo *p; p=(TClassDocInfo*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TDictionary),-1,-1,4,"fClass=",0,"class (or typedef) represented by this info object");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TModuleDocInfo),-1,-1,4,"fModule=",0,"module this class is in");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TString),-1,-1,4,"fHtmlFileName=",0,"name of the HTML doc file");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TString),-1,-1,4,"fDeclFileName=",0,"header");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TString),-1,-1,4,"fImplFileName=",0,"source");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TString),-1,-1,4,"fDeclFileSysName=",0,"file system's location of the header");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TString),-1,-1,4,"fImplFileSysName=",0,"file system's location of the source");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TList),-1,-1,4,"fTypedefs=",0,"typedefs to this class");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fSelected=",0,"selected for doc output");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TLibraryDocInfo */
static void G__setup_memvarTLibraryDocInfo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__HtmlLN_TLibraryDocInfo));
   { TLibraryDocInfo *p; p=(TLibraryDocInfo*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__HtmlLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR),G__defined_typename("set<std::string>"),-1,4,"fDependencies=",0,"dependencies on other libraries");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__HtmlLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR),G__defined_typename("set<std::string>"),-1,4,"fModules=",0,"modules in the library");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* THtml::THelperBase */
static void G__setup_memvarTHtmlcLcLTHelperBase(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTHelperBase));
   { THtml::THelperBase *p; p=(THtml::THelperBase*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HtmlLN_THtml),-1,-1,4,"fHtml=",0,"object owning the helper");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* THtml::TFileSysEntry */
static void G__setup_memvarTHtmlcLcLTFileSysEntry(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTFileSysEntry));
   { THtml::TFileSysEntry *p; p=(THtml::TFileSysEntry*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TString),-1,-1,2,"fName=",0,"name of the element");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTFileSysDir),-1,-1,2,"fParent=",0,"parent directory");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fLevel=",0,"level of directory");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* THtml::TModuleDefinition */
static void G__setup_memvarTHtmlcLcLTModuleDefinition(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTModuleDefinition));
   { THtml::TModuleDefinition *p; p=(THtml::TModuleDefinition*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* THtml::TFileDefinition */
static void G__setup_memvarTHtmlcLcLTFileDefinition(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTFileDefinition));
   { THtml::TFileDefinition *p; p=(THtml::TFileDefinition*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* THtml::TPathDefinition */
static void G__setup_memvarTHtmlcLcLTPathDefinition(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTPathDefinition));
   { THtml::TPathDefinition *p; p=(THtml::TPathDefinition*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* THtml::TFileSysDir */
static void G__setup_memvarTHtmlcLcLTFileSysDir(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTFileSysDir));
   { THtml::TFileSysDir *p; p=(THtml::TFileSysDir*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TList),-1,-1,2,"fFiles=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TList),-1,-1,2,"fDirs=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* THtml::TFileSysDB */
static void G__setup_memvarTHtmlcLcLTFileSysDB(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTFileSysDB));
   { THtml::TFileSysDB *p; p=(THtml::TFileSysDB*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TExMap),-1,-1,4,"fMapIno=",0,"inode to TFileSysDir map, to detect softlinks");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__HtmlLN_THashTable),-1,-1,4,"fEntries=",0,"hash map of all filenames without paths");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TString),-1,-1,4,"fIgnorePath=",0,"regexp of path to ignore while building entry tree");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMaxLevel=",0,"maximum level of directory nesting");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* THtml::TFileSysRoot */
static void G__setup_memvarTHtmlcLcLTFileSysRoot(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTFileSysRoot));
   { THtml::TFileSysRoot *p; p=(THtml::TFileSysRoot*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HtmlLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__Html() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTClassDocOutput(void) {
   /* TClassDocOutput */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__HtmlLN_TClassDocOutput));
   G__memfunc_setup("ClassHtmlTree",1307,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 2, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out U 'TClass' - 0 - classPtr "
"i 'TClassDocOutput::ETraverse' - 0 'kBoth' dir i - - 0 '1' depth", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClassTree",902,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"U 'TVirtualPad' - 0 - canvas g - 'Bool_t' 0 'kFALSE' force", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateDotClassChartIncl",2281,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 2, 0, "C - - 10 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateDotClassChartInh",2178,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 2, 0, "C - - 10 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateDotClassChartInhMem",2465,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 2, 0, "C - - 10 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateDotClassChartLib",2170,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 2, 0, "C - - 10 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateHierarchyDot",1818,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateSourceOutputStream",2498,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 2, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out C - - 10 - extension "
"u 'TString' - 1 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DescendHierarchy",1621,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 2, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out U 'TClass' - 0 - basePtr "
"i - 'Int_t' 0 '0' maxLines i - 'Int_t' 0 '1' depth", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ListFunctions",1365,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - classFile", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ListDataMembers",1505,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - classFile", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("WriteClassDocHeader",1888,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - classFile", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("WriteMethod",1132,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 9, 1, 2, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out u 'TString' - 1 - ret "
"u 'TString' - 1 - name u 'TString' - 1 - params "
"C - - 10 - file u 'TString' - 1 - anchor "
"u 'TString' - 1 - comment u 'TString' - 1 - codeOneLiner "
"U 'TDocMethodWrapper' - 0 - guessedMethod", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("WriteClassDescription",2181,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out u 'TString' - 11 - description", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TClassDocOutput",1521,G__G__Html_119_0_15, 105, G__get_linked_tagnum(&G__G__HtmlLN_TClassDocOutput), -1, 0, 3, 1, 1, 0, 
"u 'THtml' - 1 - html U 'TClass' - 0 - cl "
"U 'TList' - 0 - typedefs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class2Html",957,G__G__Html_119_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kFALSE' force", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClassDotCharts",1410,G__G__Html_119_0_17, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateClassHierarchy",2025,G__G__Html_119_0_18, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out C - - 10 - docFileName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakeTree",782,G__G__Html_119_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kFALSE' force", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Html_119_0_20, 85, G__get_linked_tagnum(&G__G__HtmlLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TClassDocOutput::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Html_119_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TClassDocOutput::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Html_119_0_22, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TClassDocOutput::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Html_119_0_23, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TClassDocOutput::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__HtmlLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Html_119_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Html_119_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TClassDocOutput::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Html_119_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TClassDocOutput::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Html_119_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TClassDocOutput::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Html_119_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TClassDocOutput::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TClassDocOutput", 1521, G__G__Html_119_0_32, (int) ('i'), G__get_linked_tagnum(&G__G__HtmlLN_TClassDocOutput), -1, 0, 1, 1, 1, 0, "u 'TClassDocOutput' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TClassDocOutput", 1647, G__G__Html_119_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Html_119_0_34, (int) ('u'), G__get_linked_tagnum(&G__G__HtmlLN_TClassDocOutput), -1, 1, 1, 1, 1, 0, "u 'TClassDocOutput' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDocOutput(void) {
   /* TDocOutput */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__HtmlLN_TDocOutput));
   G__memfunc_setup("CaseInsensitiveSort",1973,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 2, 1, 2, 0, 
"Y - - 10 - name1 Y - - 10 - name2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddLink",663,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 2, 0, 
"u 'TSubString' - 1 - str u 'TString' - 1 - link "
"C - - 10 - comment", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ProcessDocInDir",1483,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 2, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out C - - 10 - indir "
"C - - 10 - outdir C - - 10 - linkdir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RunDot",604,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 2, 0, 
"C - - 10 - filename U 'basic_ostream<char,char_traits<char> >' 'ostream' 0 '0' outMap "
"i 'TDocOutput::EGraphvizTool' - 0 'kDot' gvwhat", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteHtmlHeader",1513,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 5, 1, 2, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out C - - 10 - titleNoSpecial "
"C - - 10 - dir U 'TClass' - 0 - cls "
"C - - 10 - header", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteHtmlFooter",1551,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 6, 1, 2, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out C - - 10 - dir "
"C - - 10 - lastUpdate C - - 10 - author "
"C - - 10 - copyright C - - 10 - footer", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteSearch",1121,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("WriteLocation",1348,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 2, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out U 'TModuleDocInfo' - 0 - module "
"C - - 10 '0' classname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteModuleLinks",1650,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteModuleLinks",1650,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out U 'TModuleDocInfo' - 0 - super", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteTopLinks",1343,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 2, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out U 'TModuleDocInfo' - 0 - module "
"C - - 10 '0' classname g - 'Bool_t' 0 'kTRUE' withLocation", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TDocOutput",1019,G__G__Html_120_0_12, 105, G__get_linked_tagnum(&G__G__HtmlLN_TDocOutput), -1, 0, 1, 1, 1, 0, "u 'THtml' - 1 - html", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AdjustSourcePath",1641,G__G__Html_120_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TString' - 1 - line C - - 10 '\"../\"' relpath", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Convert",737,G__G__Html_120_0_14, 121, -1, -1, 0, 8, 1, 1, 0, 
"u 'basic_istream<char,char_traits<char> >' 'istream' 1 - in C - - 10 - infilename "
"C - - 10 - outfilename C - - 10 - title "
"C - - 10 '\"../\"' relpath i - 'Int_t' 0 '0' includeOutput "
"C - - 10 '\"\"' context U 'TGClient' - 0 '0' gclient", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CopyHtmlFile",1200,G__G__Html_120_0_15, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"C - - 10 - sourceName C - - 10 '\"\"' destName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateClassIndex",1602,G__G__Html_120_0_16, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CreateModuleIndex",1714,G__G__Html_120_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CreateProductIndex",1837,G__G__Html_120_0_18, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CreateTypeIndex",1518,G__G__Html_120_0_19, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CreateClassTypeDefs",1902,G__G__Html_120_0_20, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CreateHierarchy",1523,G__G__Html_120_0_21, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DecorateEntityBegin",1929,G__G__Html_120_0_22, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'TString' - 1 - str i - 'Ssiz_t' 1 - pos "
"i 'TDocParser::EParseContext' - 0 - type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DecorateEntityEnd",1723,G__G__Html_120_0_23, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'TString' - 1 - str i - 'Ssiz_t' 1 - pos "
"i 'TDocParser::EParseContext' - 0 - type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FixupAuthorSourceInfo",2172,G__G__Html_120_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 1 - authors", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetExtension",1245,G__G__Html_120_0_25, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHtml",693,G__G__Html_120_0_26, 85, G__get_linked_tagnum(&G__G__HtmlLN_THtml), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsModified",989,G__G__Html_120_0_27, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'TClass' - 0 - classPtr i 'TDocOutput::EFileType' - 0 - type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("NameSpace2FileName",1696,G__G__Html_120_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 1 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReferenceEntity",1548,G__G__Html_120_0_29, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'TSubString' - 1 - str U 'TClass' - 0 - entity "
"C - - 10 '0' comment", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReferenceEntity",1548,G__G__Html_120_0_30, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'TSubString' - 1 - str U 'TDataMember' - 0 - entity "
"C - - 10 '0' comment", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReferenceEntity",1548,G__G__Html_120_0_31, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'TSubString' - 1 - str U 'TDataType' - 0 - entity "
"C - - 10 '0' comment", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReferenceEntity",1548,G__G__Html_120_0_32, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'TSubString' - 1 - str U 'TMethod' - 0 - entity "
"C - - 10 '0' comment", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReferenceIsRelative",1927,G__G__Html_120_0_33, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "C - - 10 - reference", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReplaceSpecialChars",1902,G__G__Html_120_0_34, 67, -1, -1, 0, 1, 1, 1, 1, "c - - 0 - c", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReplaceSpecialChars",1902,G__G__Html_120_0_35, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out C - - 10 - string", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReplaceSpecialChars",1902,G__G__Html_120_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 1 - text", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReplaceSpecialChars",1902,G__G__Html_120_0_37, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TString' - 1 - text i - 'Ssiz_t' 1 - pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteHtmlHeader",1513,G__G__Html_120_0_38, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out C - - 10 - title "
"C - - 10 '\"\"' dir U 'TClass' - 0 '0' cls", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("WriteHtmlFooter",1551,G__G__Html_120_0_39, 121, -1, -1, 0, 5, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out C - - 10 '\"\"' dir "
"C - - 10 '\"\"' lastUpdate C - - 10 '\"\"' author "
"C - - 10 '\"\"' copyright", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("WriteLineNumbers",1647,G__G__Html_120_0_40, 121, -1, -1, 0, 3, 1, 1, 8, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out l - 'Long_t' 0 - nLines "
"u 'TString' - 11 - infileBase", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Html_120_0_41, 85, G__get_linked_tagnum(&G__G__HtmlLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TDocOutput::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Html_120_0_42, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDocOutput::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Html_120_0_43, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TDocOutput::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Html_120_0_44, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TDocOutput::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__HtmlLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Html_120_0_48, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Html_120_0_49, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDocOutput::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Html_120_0_50, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TDocOutput::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Html_120_0_51, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDocOutput::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Html_120_0_52, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TDocOutput::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TDocOutput", 1019, G__G__Html_120_0_53, (int) ('i'), G__get_linked_tagnum(&G__G__HtmlLN_TDocOutput), -1, 0, 1, 1, 1, 0, "u 'TDocOutput' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TDocOutput", 1145, G__G__Html_120_0_54, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Html_120_0_55, (int) ('u'), G__get_linked_tagnum(&G__G__HtmlLN_TDocOutput), -1, 1, 1, 1, 1, 0, "u 'TDocOutput' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHtml(void) {
   /* THtml */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__HtmlLN_THtml));
   G__memfunc_setup("THtml",489,G__G__Html_121_0_1, 105, G__get_linked_tagnum(&G__G__HtmlLN_THtml), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadAllLibs",1059,G__G__Html_121_0_2, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&THtml::LoadAllLibs) ), 0);
   G__memfunc_setup("Convert",737,G__G__Html_121_0_3, 121, -1, -1, 0, 6, 1, 1, 0, 
"C - - 10 - filename C - - 10 - title "
"C - - 10 '\"\"' dirname C - - 10 '\"../\"' relpath "
"i - 'Int_t' 0 'kNoOutput' includeOutput C - - 10 '\"\"' context", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateHierarchy",1523,G__G__Html_121_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakeAll",663,G__G__Html_121_0_5, 121, -1, -1, 0, 3, 1, 1, 0, 
"g - 'Bool_t' 0 'kFALSE' force C - - 10 '\"*\"' filter "
"i - - 0 '1' numthreads", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakeClass",884,G__G__Html_121_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - className g - 'Bool_t' 0 'kFALSE' force", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakeIndex",886,G__G__Html_121_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '\"*\"' filter", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakeTree",782,G__G__Html_121_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - className g - 'Bool_t' 0 'kFALSE' force", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetModuleDefinition",1947,G__G__Html_121_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'THtml::TModuleDefinition' - 11 - md", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFileDefinition",1717,G__G__Html_121_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'THtml::TFileDefinition' - 11 - fd", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPathDefinition",1730,G__G__Html_121_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'THtml::TPathDefinition' - 11 - pd", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetProductName",1422,G__G__Html_121_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - product", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOutputDir",1244,G__G__Html_121_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - dir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInputDir",1115,G__G__Html_121_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - dir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSourceDir",1212,G__G__Html_121_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - dir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIncludePath",1405,G__G__Html_121_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - dir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEtcDir",871,G__G__Html_121_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - dir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDocPath",975,G__G__Html_121_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - path", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDotDir",882,G__G__Html_121_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - dir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRootURL",963,G__G__Html_121_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - url", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLibURL",822,G__G__Html_121_0_21, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - lib C - - 10 - url", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetXwho",722,G__G__Html_121_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - xwho", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMacroPath",1195,G__G__Html_121_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - path", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddMacroPath",1160,G__G__Html_121_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - path", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCounterFormat",1653,G__G__Html_121_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - format", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetClassDocTag",1364,G__G__Html_121_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - tag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAuthorTag",1211,G__G__Html_121_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - tag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLastUpdateTag",1599,G__G__Html_121_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - tag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCopyrightTag",1537,G__G__Html_121_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - tag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHeader",885,G__G__Html_121_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFooter",923,G__G__Html_121_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHomepage",1106,G__G__Html_121_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - url", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSearchStemURL",1550,G__G__Html_121_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - url", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSearchEngine",1496,G__G__Html_121_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - url", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetViewCVS",947,G__G__Html_121_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - url", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetWikiURL",947,G__G__Html_121_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - url", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCharset",1014,G__G__Html_121_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - charset", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDocStyle",1107,G__G__Html_121_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - style", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetModuleDefinition",1935,G__G__Html_121_0_39, 117, G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTModuleDefinition), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFileDefinition",1705,G__G__Html_121_0_40, 117, G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTFileDefinition), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPathDefinition",1718,G__G__Html_121_0_41, 117, G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTPathDefinition), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetProductName",1410,G__G__Html_121_0_42, 117, G__get_linked_tagnum(&G__G__HtmlLN_TString), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInputPath",1213,G__G__Html_121_0_43, 117, G__get_linked_tagnum(&G__G__HtmlLN_TString), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOutputDir",1232,G__G__Html_121_0_44, 117, G__get_linked_tagnum(&G__G__HtmlLN_TString), -1, 1, 1, 1, 1, 9, "g - 'Bool_t' 0 'kTRUE' createDir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEtcDir",859,G__G__Html_121_0_45, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetModuleDocPath",1577,G__G__Html_121_0_46, 117, G__get_linked_tagnum(&G__G__HtmlLN_TString), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDotDir",870,G__G__Html_121_0_47, 117, G__get_linked_tagnum(&G__G__HtmlLN_TString), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetURL",531,G__G__Html_121_0_48, 67, -1, -1, 0, 1, 1, 1, 9, "C - - 10 '0' lib", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXwho",710,G__G__Html_121_0_49, 117, G__get_linked_tagnum(&G__G__HtmlLN_TString), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMacroPath",1183,G__G__Html_121_0_50, 117, G__get_linked_tagnum(&G__G__HtmlLN_TString), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCounterFormat",1641,G__G__Html_121_0_51, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetClassDocTag",1352,G__G__Html_121_0_52, 117, G__get_linked_tagnum(&G__G__HtmlLN_TString), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAuthorTag",1199,G__G__Html_121_0_53, 117, G__get_linked_tagnum(&G__G__HtmlLN_TString), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLastUpdateTag",1587,G__G__Html_121_0_54, 117, G__get_linked_tagnum(&G__G__HtmlLN_TString), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCopyrightTag",1525,G__G__Html_121_0_55, 117, G__get_linked_tagnum(&G__G__HtmlLN_TString), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHeader",873,G__G__Html_121_0_56, 117, G__get_linked_tagnum(&G__G__HtmlLN_TString), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFooter",911,G__G__Html_121_0_57, 117, G__get_linked_tagnum(&G__G__HtmlLN_TString), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHomepage",1094,G__G__Html_121_0_58, 117, G__get_linked_tagnum(&G__G__HtmlLN_TString), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSearchStemURL",1538,G__G__Html_121_0_59, 117, G__get_linked_tagnum(&G__G__HtmlLN_TString), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSearchEngine",1484,G__G__Html_121_0_60, 117, G__get_linked_tagnum(&G__G__HtmlLN_TString), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetViewCVS",935,G__G__Html_121_0_61, 117, G__get_linked_tagnum(&G__G__HtmlLN_TString), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWikiURL",935,G__G__Html_121_0_62, 117, G__get_linked_tagnum(&G__G__HtmlLN_TString), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCharset",1002,G__G__Html_121_0_63, 117, G__get_linked_tagnum(&G__G__HtmlLN_TString), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDocStyle",1095,G__G__Html_121_0_64, 117, G__get_linked_tagnum(&G__G__HtmlLN_TString), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CopyFileFromEtcDir",1770,G__G__Html_121_0_65, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "C - - 10 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateAuxiliaryFiles",2047,G__G__Html_121_0_66, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetClass",790,G__G__Html_121_0_67, 85, G__get_linked_tagnum(&G__G__HtmlLN_TClass), -1, 0, 1, 1, 1, 8, "C - - 10 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShortType",946,G__G__Html_121_0_68, 67, -1, -1, 0, 1, 1, 1, 9, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCounter",1024,G__G__Html_121_0_69, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetModuleMacroPath",1797,G__G__Html_121_0_70, 121, -1, -1, 0, 2, 1, 1, 8, 
"u 'TString' - 11 - module u 'TString' - 1 - out_path", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDeclFileName",1433,G__G__Html_121_0_71, 103, -1, -1, 0, 3, 1, 1, 8, 
"U 'TClass' - 0 - cl g - 'Bool_t' 0 - filesys "
"u 'TString' - 1 - out_name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDerivedClasses",1713,G__G__Html_121_0_72, 121, -1, -1, 0, 2, 1, 1, 8, 
"U 'TClass' - 0 - cl u 'map<TClass*,int,less<TClass*>,allocator<pair<TClass* const,int> > >' 'map<TClass*,Int_t>' 1 - derived", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDirDelimiter",1502,G__G__Html_121_0_73, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THtml::GetDirDelimiter) ), 0);
   G__memfunc_setup("GetImplFileName",1459,G__G__Html_121_0_74, 103, -1, -1, 0, 3, 1, 1, 8, 
"U 'TClass' - 0 - cl g - 'Bool_t' 0 - filesys "
"u 'TString' - 1 - out_name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetHtmlFileName",1462,G__G__Html_121_0_75, 121, -1, -1, 0, 2, 1, 1, 8, 
"U 'TClass' - 0 - classPtr u 'TString' - 1 - filename", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetHtmlFileName",1462,G__G__Html_121_0_76, 67, -1, -1, 0, 1, 1, 1, 9, "C - - 10 - classname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLibraryDependencies",2236,G__G__Html_121_0_77, 85, G__get_linked_tagnum(&G__G__HtmlLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SortListOfModules",1746,G__G__Html_121_0_78, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetListOfModules",1610,G__G__Html_121_0_79, 85, G__get_linked_tagnum(&G__G__HtmlLN_TList), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetListOfClasses",1599,G__G__Html_121_0_80, 85, G__get_linked_tagnum(&G__G__HtmlLN_TList), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLocalFiles",1278,G__G__Html_121_0_81, 85, G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTFileSysDB), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMakeClassMutex",1703,G__G__Html_121_0_82, 85, G__get_linked_tagnum(&G__G__HtmlLN_TVirtualMutex), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetModuleNameForClass",2084,G__G__Html_121_0_83, 121, -1, -1, 0, 2, 1, 1, 8, 
"u 'TString' - 1 - module U 'TClass' - 0 - cl", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPathInfo",1081,G__G__Html_121_0_84, 117, G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLPathInfo_t), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HaveDot",683,G__G__Html_121_0_85, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HelperDeleted",1303,G__G__Html_121_0_86, 121, -1, -1, 0, 1, 1, 1, 0, "U 'THtml::THelperBase' - 0 - who", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsNamespace",1097,G__G__Html_121_0_87, 103, -1, G__defined_typename("Bool_t"), 0, 1, 3, 1, 0, "U 'TClass' - 10 - cl", (char*)NULL, (void*) G__func2void( (Bool_t (*)(const TClass*))(&THtml::IsNamespace) ), 0);
   G__memfunc_setup("SetDeclFileName",1445,G__G__Html_121_0_88, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TClass' - 0 - cl C - - 10 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFoundDot",1103,G__G__Html_121_0_89, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' found", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetImplFileName",1471,G__G__Html_121_0_90, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TClass' - 0 - cl C - - 10 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBatch",782,G__G__Html_121_0_91, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' batch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsBatch",670,G__G__Html_121_0_92, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReplaceSpecialChars",1902,G__G__Html_121_0_93, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - - C - - 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEscape",893,G__G__Html_121_0_94, 121, -1, -1, 0, 1, 1, 1, 0, "c - - 0 ''\\\\'' -", "for backward comp", (void*) NULL, 0);
   G__memfunc_setup("CreateJavascript",1643,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CreateStyleSheet",1630,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CreateListOfTypes",1722,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateListOfClasses",1907,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "C - - 10 - filter", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDeclImplFileName",1835,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 4, 1, 2, 8, 
"U 'TClass' - 0 - cl g - - 0 - filesys "
"g - - 0 - decl u 'TString' - 1 - out_name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MakeClass",884,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"Y - - 0 - cdi g - 'Bool_t' 0 'kFALSE' force", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNextClass",1205,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__HtmlLN_TClassDocInfo), -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLocalFiles",1290,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakeClassThreaded",1685,(G__InterfaceMethod) NULL, 89, -1, -1, 0, 1, 3, 2, 0, "Y - - 0 - info", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Html_121_0_104, 85, G__get_linked_tagnum(&G__G__HtmlLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&THtml::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Html_121_0_105, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THtml::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Html_121_0_106, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&THtml::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Html_121_0_107, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&THtml::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__HtmlLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Html_121_0_111, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Html_121_0_112, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THtml::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Html_121_0_113, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THtml::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Html_121_0_114, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THtml::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Html_121_0_115, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THtml::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~THtml", 615, G__G__Html_121_0_116, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDocParser(void) {
   /* TDocParser */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__HtmlLN_TDocParser));
   G__memfunc_setup("AddClassMethodsRecursively",2672,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "U 'TBaseClass' - 0 - bc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddClassDataMembersRecursively",3041,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "U 'TBaseClass' - 0 - bc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Context",741,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__HtmlLN_TDocParsercLcLEParseContext), -1, 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ExpandCPPLine",1227,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"u 'TString' - 1 - line i - 'Ssiz_t' 1 - pos", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HandleDirective",1515,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 2, 0, 
"u 'TString' - 1 - keyword i - 'Ssiz_t' 1 - pos "
"u 'TString' - 1 - word i - 'Ssiz_t' 1 - copiedToCommentUpTo", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitKeywords",1260,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsDirective",1115,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__HtmlLN_TClass), -1, 0, 4, 1, 2, 8, 
"u 'TString' - 11 - line i - 'Ssiz_t' 0 - pos "
"u 'TString' - 11 - word g - 'Bool_t' 1 - begin", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LocateMethodInCurrentLine",2523,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__HtmlLN_TMethod), -1, 0, 8, 1, 2, 0, 
"i - 'Ssiz_t' 1 - posMethodName u 'TString' - 1 - ret "
"u 'TString' - 1 - name u 'TString' - 1 - params "
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - srcOut u 'TString' - 1 - anchor "
"u 'basic_ifstream<char,char_traits<char> >' 'ifstream' 1 - sourcefile g - 'Bool_t' 0 - allowPureVirtual", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LocateMethodsInSource",2132,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LocateMethodsInHeaderInline",2699,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LocateMethodsInHeaderClassDecl",2970,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LocateMethods",1324,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 7, 1, 2, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out C - - 10 - filename "
"g - 'Bool_t' 0 'kTRUE' lookForSourceInfo g - 'Bool_t' 0 'kFALSE' useDocxxStyle "
"g - 'Bool_t' 0 'kFALSE' allowPureVirtual C - - 10 '0' methodPattern "
"C - - 10 '0' sourceExt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ProcessComment",1458,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("RemoveCommentContext",2086,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "g - 'Bool_t' 0 - cxxcomment", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteClassDoc",1303,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out g - 'Bool_t' 0 'kTRUE' first", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteMethod",1132,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 7, 1, 2, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out u 'TString' - 1 - ret "
"u 'TString' - 1 - name u 'TString' - 1 - params "
"C - - 10 - file u 'TString' - 1 - anchor "
"u 'TString' - 1 - codeOneLiner", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteSourceLine",1540,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TDocParser",983,G__G__Html_123_0_18, 105, G__get_linked_tagnum(&G__G__HtmlLN_TDocParser), -1, 0, 2, 1, 1, 0, 
"u 'TClassDocOutput' - 1 - docOutput U 'TClass' - 0 - cl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TDocParser",983,G__G__Html_123_0_19, 105, G__get_linked_tagnum(&G__G__HtmlLN_TDocParser), -1, 0, 1, 1, 1, 0, "u 'TDocOutput' - 1 - docOutput", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AnchorFromLine",1399,G__G__Html_123_0_20, 121, -1, -1, 0, 2, 3, 1, 0, 
"u 'TString' - 11 - line u 'TString' - 1 - anchor", (char*)NULL, (void*) G__func2void( (void (*)(const TString&, TString&))(&TDocParser::AnchorFromLine) ), 0);
   G__memfunc_setup("Convert",737,G__G__Html_123_0_21, 121, -1, -1, 0, 5, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out u 'basic_istream<char,char_traits<char> >' 'istream' 1 - in "
"C - - 10 - relpath g - 'Bool_t' 0 - isCode "
"g - 'Bool_t' 0 - interpretDirectives", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DecrementMethodCount",2049,G__G__Html_123_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DecorateKeywords",1663,G__G__Html_123_0_23, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out C - - 10 - text", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DecorateKeywords",1663,G__G__Html_123_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 1 - text", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DeleteDirectiveOutput",2179,G__G__Html_123_0_25, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMethods",1012,G__G__Html_123_0_26, 85, G__get_linked_tagnum(&G__G__HtmlLN_TList), -1, 0, 1, 1, 1, 9, "i 'TDocParser::EAccess' - 0 - access", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCurrentClass",1529,G__G__Html_123_0_27, 85, G__get_linked_tagnum(&G__G__HtmlLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCurrentModule",1641,G__G__Html_123_0_28, 121, -1, -1, 0, 1, 1, 1, 8, "u 'TString' - 1 - out_module", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDocOutput",1223,G__G__Html_123_0_29, 85, G__get_linked_tagnum(&G__G__HtmlLN_TDocOutput), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLineNumber",1297,G__G__Html_123_0_30, 108, -1, G__defined_typename("Long_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDataMembers",1381,G__G__Html_123_0_31, 85, G__get_linked_tagnum(&G__G__HtmlLN_TList), -1, 0, 1, 1, 1, 9, "i 'TDocParser::EAccess' - 0 - access", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnums",808,G__G__Html_123_0_32, 85, G__get_linked_tagnum(&G__G__HtmlLN_TList), -1, 0, 1, 1, 1, 9, "i 'TDocParser::EAccess' - 0 - access", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSourceInfo",1309,G__G__Html_123_0_33, 67, -1, -1, 0, 1, 1, 1, 9, "i 'TDocParser::ESourceInfo' - 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCurrentModule",1653,G__G__Html_123_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - module", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InContext",924,G__G__Html_123_0_35, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - context", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsName",573,G__G__Html_123_0_36, 103, -1, G__defined_typename("Bool_t"), 0, 1, 3, 1, 0, "b - 'UChar_t' 0 - c", (char*)NULL, (void*) G__func2void( (Bool_t (*)(UChar_t))(&TDocParser::IsName) ), 0);
   G__memfunc_setup("IsWord",600,G__G__Html_123_0_37, 103, -1, G__defined_typename("Bool_t"), 0, 1, 3, 1, 0, "b - 'UChar_t' 0 - c", (char*)NULL, (void*) G__func2void( (Bool_t (*)(UChar_t))(&TDocParser::IsWord) ), 0);
   G__memfunc_setup("Parse",507,G__G__Html_123_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Strip",530,G__G__Html_123_0_39, 103, -1, G__defined_typename("Bool_t"), 0, 1, 3, 1, 0, "u 'TString' - 1 - s", (char*)NULL, (void*) G__func2void( (Bool_t (*)(TString&))(&TDocParser::Strip) ), 0);
   G__memfunc_setup("Class",502,G__G__Html_123_0_40, 85, G__get_linked_tagnum(&G__G__HtmlLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TDocParser::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Html_123_0_41, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDocParser::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Html_123_0_42, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TDocParser::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Html_123_0_43, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TDocParser::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__HtmlLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Html_123_0_47, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Html_123_0_48, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDocParser::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Html_123_0_49, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TDocParser::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Html_123_0_50, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDocParser::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Html_123_0_51, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TDocParser::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TDocParser", 1109, G__G__Html_123_0_52, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTModuleDocInfo(void) {
   /* TModuleDocInfo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__HtmlLN_TModuleDocInfo));
   G__memfunc_setup("TModuleDocInfo",1372,G__G__Html_157_0_1, 105, G__get_linked_tagnum(&G__G__HtmlLN_TModuleDocInfo), -1, 0, 3, 1, 1, 0, 
"C - - 10 - name U 'TModuleDocInfo' - 0 - super "
"C - - 10 '\"\"' doc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDoc",578,G__G__Html_157_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - doc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDoc",566,G__G__Html_157_0_3, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSelected",1109,G__G__Html_157_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' sel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSelected",997,G__G__Html_157_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddClass",767,G__G__Html_157_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TClassDocInfo' - 0 - cl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetClasses",1006,G__G__Html_157_0_7, 85, G__get_linked_tagnum(&G__G__HtmlLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSuper",815,G__G__Html_157_0_8, 85, G__get_linked_tagnum(&G__G__HtmlLN_TModuleDocInfo), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSub",586,G__G__Html_157_0_9, 117, G__get_linked_tagnum(&G__G__HtmlLN_THashList), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Html_157_0_10, 85, G__get_linked_tagnum(&G__G__HtmlLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TModuleDocInfo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Html_157_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TModuleDocInfo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Html_157_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TModuleDocInfo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Html_157_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TModuleDocInfo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__HtmlLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Html_157_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Html_157_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TModuleDocInfo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Html_157_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TModuleDocInfo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Html_157_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TModuleDocInfo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Html_157_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TModuleDocInfo::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TModuleDocInfo", 1498, G__G__Html_157_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDocDirective(void) {
   /* TDocDirective */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__HtmlLN_TDocDirective));
   G__memfunc_setup("AddParameter",1194,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"u 'TString' - 11 - - C - - 10 '0' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetName",673,(G__InterfaceMethod) NULL, 67, -1, -1, 0, 0, 1, 2, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetName",673,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 8, "u 'TString' - 1 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDocParser",1187,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__HtmlLN_TDocParser), -1, 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDocOutput",1223,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__HtmlLN_TDocOutput), -1, 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHtml",693,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__HtmlLN_THtml), -1, 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOutputDir",1232,(G__InterfaceMethod) NULL, 67, -1, -1, 0, 0, 1, 2, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParser",921,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "U 'TDocParser' - 0 - parser", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParameters",1344,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "C - - 10 - params", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTag",584,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "C - - 10 - tag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCounter",1036,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "i - 'Int_t' 0 - count", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteOutputFiles",1751,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 8, "C - - 10 - ext", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEndTag",851,G__G__Html_164_0_15, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("AddLine",657,G__G__Html_164_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TSubString' - 11 - line", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetResult",927,G__G__Html_164_0_17, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'TString' - 1 - result", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("DeleteOutput",1252,G__G__Html_164_0_18, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__Html_164_0_19, 85, G__get_linked_tagnum(&G__G__HtmlLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TDocDirective::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Html_164_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDocDirective::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Html_164_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TDocDirective::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Html_164_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TDocDirective::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__HtmlLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Html_164_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Html_164_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDocDirective::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Html_164_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TDocDirective::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Html_164_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDocDirective::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Html_164_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TDocDirective::DeclFileLine) ), 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Html_164_0_31, (int) ('u'), G__get_linked_tagnum(&G__G__HtmlLN_TDocDirective), -1, 1, 1, 1, 1, 0, "u 'TDocDirective' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDocHtmlDirective(void) {
   /* TDocHtmlDirective */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__HtmlLN_TDocHtmlDirective));
   G__memfunc_setup("TDocHtmlDirective",1694,G__G__Html_165_0_1, 105, G__get_linked_tagnum(&G__G__HtmlLN_TDocHtmlDirective), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddLine",657,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TSubString' - 11 - line", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEndTag",851,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetResult",927,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'TString' - 1 - result", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__Html_165_0_5, 85, G__get_linked_tagnum(&G__G__HtmlLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TDocHtmlDirective::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Html_165_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDocHtmlDirective::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Html_165_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TDocHtmlDirective::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Html_165_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TDocHtmlDirective::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__HtmlLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Html_165_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Html_165_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDocHtmlDirective::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Html_165_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TDocHtmlDirective::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Html_165_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDocHtmlDirective::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Html_165_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TDocHtmlDirective::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TDocHtmlDirective", 1694, G__G__Html_165_0_17, (int) ('i'), G__get_linked_tagnum(&G__G__HtmlLN_TDocHtmlDirective), -1, 0, 1, 1, 1, 0, "u 'TDocHtmlDirective' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TDocHtmlDirective", 1820, G__G__Html_165_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Html_165_0_19, (int) ('u'), G__get_linked_tagnum(&G__G__HtmlLN_TDocHtmlDirective), -1, 1, 1, 1, 1, 0, "u 'TDocHtmlDirective' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDocMacroDirective(void) {
   /* TDocMacroDirective */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__HtmlLN_TDocMacroDirective));
   G__memfunc_setup("AddParameter",1194,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"u 'TString' - 11 - name C - - 10 '0' value", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TDocMacroDirective",1787,G__G__Html_166_0_2, 105, G__get_linked_tagnum(&G__G__HtmlLN_TDocMacroDirective), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddLine",657,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TSubString' - 11 - line", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEndTag",851,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetResult",927,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'TString' - 1 - result", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DeleteOutput",1252,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__Html_166_0_7, 85, G__get_linked_tagnum(&G__G__HtmlLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TDocMacroDirective::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Html_166_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDocMacroDirective::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Html_166_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TDocMacroDirective::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Html_166_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TDocMacroDirective::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__HtmlLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Html_166_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Html_166_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDocMacroDirective::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Html_166_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TDocMacroDirective::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Html_166_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDocMacroDirective::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Html_166_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TDocMacroDirective::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TDocMacroDirective", 1787, G__G__Html_166_0_19, (int) ('i'), G__get_linked_tagnum(&G__G__HtmlLN_TDocMacroDirective), -1, 0, 1, 1, 1, 0, "u 'TDocMacroDirective' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TDocMacroDirective", 1913, G__G__Html_166_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Html_166_0_21, (int) ('u'), G__get_linked_tagnum(&G__G__HtmlLN_TDocMacroDirective), -1, 1, 1, 1, 1, 0, "u 'TDocMacroDirective' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDocLatexDirective(void) {
   /* TDocLatexDirective */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__HtmlLN_TDocLatexDirective));
   G__memfunc_setup("CreateLatex",1106,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "C - - 10 - filename", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddParameter",1194,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"u 'TString' - 11 - name C - - 10 '0' value", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBoundingBox",1407,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 2, 0, 
"u 'TLatex' - 1 - latex C - - 10 - text "
"f - 'Float_t' 1 - width f - 'Float_t' 1 - height", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TDocLatexDirective",1799,G__G__Html_167_0_4, 105, G__get_linked_tagnum(&G__G__HtmlLN_TDocLatexDirective), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddLine",657,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TSubString' - 11 - line", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEndTag",851,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetAlignment",1215,G__G__Html_167_0_7, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSeparator",1233,G__G__Html_167_0_8, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SeparatorIsRegexp",1752,G__G__Html_167_0_9, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFontSize",1106,G__G__Html_167_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetListOfLines",1388,G__G__Html_167_0_11, 85, G__get_linked_tagnum(&G__G__HtmlLN_TList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetResult",927,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'TString' - 1 - result", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DeleteOutput",1252,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__Html_167_0_14, 85, G__get_linked_tagnum(&G__G__HtmlLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TDocLatexDirective::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Html_167_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDocLatexDirective::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Html_167_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TDocLatexDirective::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Html_167_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TDocLatexDirective::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__HtmlLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Html_167_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Html_167_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDocLatexDirective::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Html_167_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TDocLatexDirective::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Html_167_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDocLatexDirective::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Html_167_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TDocLatexDirective::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TDocLatexDirective", 1799, G__G__Html_167_0_26, (int) ('i'), G__get_linked_tagnum(&G__G__HtmlLN_TDocLatexDirective), -1, 0, 1, 1, 1, 0, "u 'TDocLatexDirective' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TDocLatexDirective", 1925, G__G__Html_167_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Html_167_0_28, (int) ('u'), G__get_linked_tagnum(&G__G__HtmlLN_TDocLatexDirective), -1, 1, 1, 1, 1, 0, "u 'TDocLatexDirective' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTClassDocInfo(void) {
   /* TClassDocInfo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__HtmlLN_TClassDocInfo));
   G__memfunc_setup("TClassDocInfo",1260,G__G__Html_190_0_1, 105, G__get_linked_tagnum(&G__G__HtmlLN_TClassDocInfo), -1, 0, 6, 1, 1, 0, 
"U 'TClass' - 0 - cl C - - 10 '\"\"' htmlfilename "
"C - - 10 '\"\"' fsdecl C - - 10 '\"\"' fsimpl "
"C - - 10 '0' decl C - - 10 '0' impl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClassDocInfo",1260,G__G__Html_190_0_2, 105, G__get_linked_tagnum(&G__G__HtmlLN_TClassDocInfo), -1, 0, 6, 1, 1, 0, 
"U 'TDictionary' - 0 - cl C - - 10 '\"\"' htmlfilename "
"C - - 10 '\"\"' fsdecl C - - 10 '\"\"' fsimpl "
"C - - 10 '0' decl C - - 10 '0' impl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetClass",790,G__G__Html_190_0_3, 85, G__get_linked_tagnum(&G__G__HtmlLN_TDictionary), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetName",673,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetHtmlFileName",1462,G__G__Html_190_0_5, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDeclFileName",1433,G__G__Html_190_0_6, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetImplFileName",1459,G__G__Html_190_0_7, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDeclFileSysName",1752,G__G__Html_190_0_8, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetImplFileSysName",1778,G__G__Html_190_0_9, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetModule",914,G__G__Html_190_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TModuleDocInfo' - 0 - module", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetModule",902,G__G__Html_190_0_11, 85, G__get_linked_tagnum(&G__G__HtmlLN_TModuleDocInfo), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSelected",1109,G__G__Html_190_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' sel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSelected",997,G__G__Html_190_0_13, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HaveSource",1013,G__G__Html_190_0_14, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHtmlFileName",1474,G__G__Html_190_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDeclFileName",1445,G__G__Html_190_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetImplFileName",1471,G__G__Html_190_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDeclFileSysName",1764,G__G__Html_190_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - fsname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetImplFileSysName",1790,G__G__Html_190_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - fsname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Hash",388,(G__InterfaceMethod) NULL,107, -1, G__defined_typename("ULong_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetListOfTypedefs",1717,G__G__Html_190_0_21, 117, G__get_linked_tagnum(&G__G__HtmlLN_TList), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSortable",1016,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Compare",711,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "U 'TObject' - 10 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TClassDocInfo",1260,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__HtmlLN_TClassDocInfo), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Html_190_0_25, 85, G__get_linked_tagnum(&G__G__HtmlLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TClassDocInfo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Html_190_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TClassDocInfo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Html_190_0_27, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TClassDocInfo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Html_190_0_28, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TClassDocInfo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__HtmlLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Html_190_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Html_190_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TClassDocInfo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Html_190_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TClassDocInfo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Html_190_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TClassDocInfo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Html_190_0_36, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TClassDocInfo::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TClassDocInfo", 1386, G__G__Html_190_0_37, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTLibraryDocInfo(void) {
   /* TLibraryDocInfo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__HtmlLN_TLibraryDocInfo));
   G__memfunc_setup("TLibraryDocInfo",1483,G__G__Html_191_0_1, 105, G__get_linked_tagnum(&G__G__HtmlLN_TLibraryDocInfo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLibraryDocInfo",1483,G__G__Html_191_0_2, 105, G__get_linked_tagnum(&G__G__HtmlLN_TLibraryDocInfo), -1, 0, 1, 1, 1, 0, "C - - 10 - lib", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDependencies",1511,G__G__Html_191_0_3, 117, G__get_linked_tagnum(&G__G__HtmlLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR), G__defined_typename("set<std::string>"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetModules",1017,G__G__Html_191_0_4, 117, G__get_linked_tagnum(&G__G__HtmlLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR), G__defined_typename("set<std::string>"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddDependency",1288,G__G__Html_191_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - lib", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddModule",879,G__G__Html_191_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - module", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Html_191_0_7, 85, G__get_linked_tagnum(&G__G__HtmlLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TLibraryDocInfo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Html_191_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLibraryDocInfo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Html_191_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TLibraryDocInfo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Html_191_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TLibraryDocInfo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__HtmlLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Html_191_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Html_191_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLibraryDocInfo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Html_191_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TLibraryDocInfo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Html_191_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLibraryDocInfo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Html_191_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TLibraryDocInfo::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TLibraryDocInfo", 1483, G__G__Html_191_0_19, (int) ('i'), G__get_linked_tagnum(&G__G__HtmlLN_TLibraryDocInfo), -1, 0, 1, 1, 1, 0, "u 'TLibraryDocInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TLibraryDocInfo", 1609, G__G__Html_191_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Html_191_0_21, (int) ('u'), G__get_linked_tagnum(&G__G__HtmlLN_TLibraryDocInfo), -1, 1, 1, 1, 1, 0, "u 'TLibraryDocInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHtmlcLcLTHelperBase(void) {
   /* THtml::THelperBase */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTHelperBase));
   G__memfunc_setup("THelperBase",1071,G__G__Html_196_0_1, 105, G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTHelperBase), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOwner",823,G__G__Html_196_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'THtml' - 0 - html", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOwner",811,G__G__Html_196_0_3, 85, G__get_linked_tagnum(&G__G__HtmlLN_THtml), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Html_196_0_4, 85, G__get_linked_tagnum(&G__G__HtmlLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&THtml::THelperBase::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Html_196_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THtml::THelperBase::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Html_196_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&THtml::THelperBase::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Html_196_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&THtml::THelperBase::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__HtmlLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Html_196_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Html_196_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THtml::THelperBase::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Html_196_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THtml::THelperBase::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Html_196_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THtml::THelperBase::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Html_196_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THtml::THelperBase::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("THelperBase", 1071, G__G__Html_196_0_16, (int) ('i'), G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTHelperBase), -1, 0, 1, 1, 1, 0, "u 'THtml::THelperBase' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~THelperBase", 1197, G__G__Html_196_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Html_196_0_18, (int) ('u'), G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTHelperBase), -1, 1, 1, 1, 1, 0, "u 'THtml::THelperBase' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHtmlcLcLTFileSysEntry(void) {
   /* THtml::TFileSysEntry */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTFileSysEntry));
   G__memfunc_setup("TFileSysEntry",1317,G__G__Html_197_0_1, 105, G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTFileSysEntry), -1, 0, 2, 1, 1, 0, 
"C - - 10 - name U 'THtml::TFileSysDir' - 0 - parent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetName",673,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Hash",388,(G__InterfaceMethod) NULL,107, -1, G__defined_typename("ULong_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFullName",1076,G__G__Html_197_0_4, 121, -1, -1, 0, 2, 1, 1, 8, 
"u 'TString' - 1 - fullname g - 'Bool_t' 0 - asIncluded", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetParent",906,G__G__Html_197_0_5, 85, G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTFileSysDir), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLevel",792,G__G__Html_197_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Html_197_0_7, 85, G__get_linked_tagnum(&G__G__HtmlLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&THtml::TFileSysEntry::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Html_197_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THtml::TFileSysEntry::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Html_197_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&THtml::TFileSysEntry::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Html_197_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&THtml::TFileSysEntry::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__HtmlLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Html_197_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Html_197_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THtml::TFileSysEntry::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Html_197_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THtml::TFileSysEntry::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Html_197_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THtml::TFileSysEntry::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Html_197_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THtml::TFileSysEntry::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TFileSysEntry", 1317, G__G__Html_197_0_19, (int) ('i'), G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTFileSysEntry), -1, 0, 1, 1, 1, 0, "u 'THtml::TFileSysEntry' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TFileSysEntry", 1443, G__G__Html_197_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Html_197_0_21, (int) ('u'), G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTFileSysEntry), -1, 1, 1, 1, 1, 0, "u 'THtml::TFileSysEntry' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHtmlcLcLTModuleDefinition(void) {
   /* THtml::TModuleDefinition */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTModuleDefinition));
   G__memfunc_setup("GetModule",902,G__G__Html_198_0_1, 103, -1, -1, 0, 3, 1, 1, 8, 
"U 'TClass' - 0 - cl U 'THtml::TFileSysEntry' - 0 - fse "
"u 'TString' - 1 - out_modulename", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__Html_198_0_2, 85, G__get_linked_tagnum(&G__G__HtmlLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&THtml::TModuleDefinition::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Html_198_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THtml::TModuleDefinition::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Html_198_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&THtml::TModuleDefinition::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Html_198_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&THtml::TModuleDefinition::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__HtmlLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Html_198_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Html_198_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THtml::TModuleDefinition::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Html_198_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THtml::TModuleDefinition::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Html_198_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THtml::TModuleDefinition::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Html_198_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THtml::TModuleDefinition::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("TModuleDefinition", 1731, G__G__Html_198_0_14, (int) ('i'), G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTModuleDefinition), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TModuleDefinition", 1731, G__G__Html_198_0_15, (int) ('i'), G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTModuleDefinition), -1, 0, 1, 1, 1, 0, "u 'THtml::TModuleDefinition' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TModuleDefinition", 1857, G__G__Html_198_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Html_198_0_17, (int) ('u'), G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTModuleDefinition), -1, 1, 1, 1, 1, 0, "u 'THtml::TModuleDefinition' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHtmlcLcLTFileDefinition(void) {
   /* THtml::TFileDefinition */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTFileDefinition));
   G__memfunc_setup("GetDeclFileName",1433,G__G__Html_199_0_1, 103, -1, -1, 0, 4, 1, 1, 8, 
"U 'TClass' - 10 - cl u 'TString' - 1 - out_filename "
"u 'TString' - 1 - out_fsys U 'THtml::TFileSysEntry' - 2 '0' fse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetImplFileName",1459,G__G__Html_199_0_2, 103, -1, -1, 0, 4, 1, 1, 8, 
"U 'TClass' - 10 - cl u 'TString' - 1 - out_filename "
"u 'TString' - 1 - out_fsys U 'THtml::TFileSysEntry' - 2 '0' fse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFileName",1057,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 5, 1, 2, 8, 
"U 'TClass' - 10 - cl g - - 0 - decl "
"u 'TString' - 1 - out_filename u 'TString' - 1 - out_fsys "
"U 'THtml::TFileSysEntry' - 2 '0' fse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MatchFileSysName",1581,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__HtmlLN_TString), -1, 0, 2, 1, 2, 8, 
"u 'TString' - 1 - filename U 'THtml::TFileSysEntry' - 2 '0' fse", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SplitClassIntoDirFile",2107,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 2, 8, 
"u 'TString' - 11 - clname u 'TString' - 1 - dir "
"u 'TString' - 1 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NormalizePath",1342,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 8, "u 'TString' - 1 - path", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ExpandSearchPath",1603,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 8, "u 'TString' - 1 - path", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Html_199_0_8, 85, G__get_linked_tagnum(&G__G__HtmlLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&THtml::TFileDefinition::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Html_199_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THtml::TFileDefinition::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Html_199_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&THtml::TFileDefinition::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Html_199_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&THtml::TFileDefinition::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__HtmlLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Html_199_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Html_199_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THtml::TFileDefinition::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Html_199_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THtml::TFileDefinition::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Html_199_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THtml::TFileDefinition::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Html_199_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THtml::TFileDefinition::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("TFileDefinition", 1501, G__G__Html_199_0_20, (int) ('i'), G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTFileDefinition), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TFileDefinition", 1501, G__G__Html_199_0_21, (int) ('i'), G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTFileDefinition), -1, 0, 1, 1, 1, 0, "u 'THtml::TFileDefinition' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TFileDefinition", 1627, G__G__Html_199_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Html_199_0_23, (int) ('u'), G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTFileDefinition), -1, 1, 1, 1, 1, 0, "u 'THtml::TFileDefinition' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHtmlcLcLTPathDefinition(void) {
   /* THtml::TPathDefinition */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTPathDefinition));
   G__memfunc_setup("GetMacroPath",1183,G__G__Html_200_0_1, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'TString' - 11 - module u 'TString' - 1 - out_dir", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIncludeAs",1176,G__G__Html_200_0_2, 103, -1, -1, 0, 2, 1, 1, 8, 
"U 'TClass' - 0 - cl u 'TString' - 1 - out_include_as", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFileNameFromInclude",2169,G__G__Html_200_0_3, 103, -1, -1, 0, 2, 1, 1, 8, 
"C - - 10 - included u 'TString' - 1 - out_fsname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDocDir",853,G__G__Html_200_0_4, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'TString' - 11 - module u 'TString' - 1 - doc_dir", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__Html_200_0_5, 85, G__get_linked_tagnum(&G__G__HtmlLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&THtml::TPathDefinition::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Html_200_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THtml::TPathDefinition::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Html_200_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&THtml::TPathDefinition::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Html_200_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&THtml::TPathDefinition::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__HtmlLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Html_200_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Html_200_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THtml::TPathDefinition::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Html_200_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THtml::TPathDefinition::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Html_200_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THtml::TPathDefinition::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Html_200_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THtml::TPathDefinition::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("TPathDefinition", 1514, G__G__Html_200_0_17, (int) ('i'), G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTPathDefinition), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TPathDefinition", 1514, G__G__Html_200_0_18, (int) ('i'), G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTPathDefinition), -1, 0, 1, 1, 1, 0, "u 'THtml::TPathDefinition' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TPathDefinition", 1640, G__G__Html_200_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Html_200_0_20, (int) ('u'), G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTPathDefinition), -1, 1, 1, 1, 1, 0, "u 'THtml::TPathDefinition' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHtmlcLcLTFileSysDir(void) {
   /* THtml::TFileSysDir */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTFileSysDir));
   G__memfunc_setup("TFileSysDir",1074,G__G__Html_201_0_1, 105, G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTFileSysDir), -1, 0, 2, 1, 1, 0, 
"C - - 10 - name U 'THtml::TFileSysDir' - 0 - parent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFiles",787,G__G__Html_201_0_2, 85, G__get_linked_tagnum(&G__G__HtmlLN_TList), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSubDirs",988,G__G__Html_201_0_3, 85, G__get_linked_tagnum(&G__G__HtmlLN_TList), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Recurse",729,G__G__Html_201_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'THtml::TFileSysDB' - 0 - db C - - 10 - path", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Html_201_0_5, 85, G__get_linked_tagnum(&G__G__HtmlLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&THtml::TFileSysDir::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Html_201_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THtml::TFileSysDir::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Html_201_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&THtml::TFileSysDir::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Html_201_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&THtml::TFileSysDir::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__HtmlLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Html_201_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Html_201_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THtml::TFileSysDir::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Html_201_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THtml::TFileSysDir::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Html_201_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THtml::TFileSysDir::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Html_201_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THtml::TFileSysDir::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TFileSysDir", 1200, G__G__Html_201_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHtmlcLcLTFileSysDB(void) {
   /* THtml::TFileSysDB */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTFileSysDB));
   G__memfunc_setup("TFileSysDB",921,G__G__Html_202_0_1, 105, G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTFileSysDB), -1, 0, 3, 1, 1, 0, 
"C - - 10 - path C - - 10 - ignore "
"i - 'Int_t' 0 - maxdirlevel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMapIno",868,G__G__Html_202_0_2, 117, G__get_linked_tagnum(&G__G__HtmlLN_TExMap), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEntries",1018,G__G__Html_202_0_3, 117, G__get_linked_tagnum(&G__G__HtmlLN_THashTable), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIgnore",900,G__G__Html_202_0_4, 117, G__get_linked_tagnum(&G__G__HtmlLN_TString), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaxLevel",1086,G__G__Html_202_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill",391,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Html_202_0_7, 85, G__get_linked_tagnum(&G__G__HtmlLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&THtml::TFileSysDB::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Html_202_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THtml::TFileSysDB::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Html_202_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&THtml::TFileSysDB::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Html_202_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&THtml::TFileSysDB::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__HtmlLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Html_202_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Html_202_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THtml::TFileSysDB::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Html_202_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THtml::TFileSysDB::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Html_202_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THtml::TFileSysDB::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Html_202_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THtml::TFileSysDB::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TFileSysDB", 1047, G__G__Html_202_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHtmlcLcLTFileSysRoot(void) {
   /* THtml::TFileSysRoot */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTFileSysRoot));
   G__memfunc_setup("TFileSysRoot",1207,G__G__Html_203_0_1, 105, G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTFileSysRoot), -1, 0, 2, 1, 1, 0, 
"C - - 10 - name U 'THtml::TFileSysDB' - 0 - parent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFullName",1076,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 8, 
"u 'TString' - 1 - fullname g - 'Bool_t' 0 - asIncluded", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__Html_203_0_3, 85, G__get_linked_tagnum(&G__G__HtmlLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&THtml::TFileSysRoot::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Html_203_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THtml::TFileSysRoot::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Html_203_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&THtml::TFileSysRoot::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Html_203_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&THtml::TFileSysRoot::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__HtmlLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Html_203_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Html_203_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THtml::TFileSysRoot::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Html_203_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THtml::TFileSysRoot::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Html_203_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THtml::TFileSysRoot::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Html_203_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THtml::TFileSysRoot::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TFileSysRoot", 1333, G__G__Html_203_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__Html() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
   G__memvar_setup((void*)(&gHtml),85,0,0,G__get_linked_tagnum(&G__G__HtmlLN_THtml),-1,-1,1,"gHtml=",0,(char*)NULL);

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__Html() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__Html() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__HtmlLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__HtmlLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__HtmlLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__HtmlLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__HtmlLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__G__HtmlLN_basic_istreamlEcharcOchar_traitslEchargRsPgR = { "basic_istream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__G__HtmlLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR = { "basic_ostream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__G__HtmlLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR = { "basic_ifstream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__G__HtmlLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__G__HtmlLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__HtmlLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__HtmlLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__G__HtmlLN_TMethod = { "TMethod" , 99 , -1 };
G__linked_taginfo G__G__HtmlLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__HtmlLN_TSubString = { "TSubString" , 99 , -1 };
G__linked_taginfo G__G__HtmlLN_TVirtualMutex = { "TVirtualMutex" , 99 , -1 };
G__linked_taginfo G__G__HtmlLN_TIter = { "TIter" , 99 , -1 };
G__linked_taginfo G__G__HtmlLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__G__HtmlLN_THashTable = { "THashTable" , 99 , -1 };
G__linked_taginfo G__G__HtmlLN_THashList = { "THashList" , 99 , -1 };
G__linked_taginfo G__G__HtmlLN_TBaseClass = { "TBaseClass" , 99 , -1 };
G__linked_taginfo G__G__HtmlLN_TClassDocOutput = { "TClassDocOutput" , 99 , -1 };
G__linked_taginfo G__G__HtmlLN_TDocOutput = { "TDocOutput" , 99 , -1 };
G__linked_taginfo G__G__HtmlLN_THtml = { "THtml" , 99 , -1 };
G__linked_taginfo G__G__HtmlLN_TDocMethodWrapper = { "TDocMethodWrapper" , 99 , -1 };
G__linked_taginfo G__G__HtmlLN_TDocParser = { "TDocParser" , 99 , -1 };
G__linked_taginfo G__G__HtmlLN_TDocParsercLcLEDocContext = { "TDocParser::EDocContext" , 101 , -1 };
G__linked_taginfo G__G__HtmlLN_TDocParsercLcLESourceInfo = { "TDocParser::ESourceInfo" , 101 , -1 };
G__linked_taginfo G__G__HtmlLN_TDocParsercLcLEAccess = { "TDocParser::EAccess" , 101 , -1 };
G__linked_taginfo G__G__HtmlLN_TDocParsercLcLEParseContext = { "TDocParser::EParseContext" , 101 , -1 };
G__linked_taginfo G__G__HtmlLN_TDocParsercLcLEParseContextFlag = { "TDocParser::EParseContextFlag" , 101 , -1 };
G__linked_taginfo G__G__HtmlLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR = { "map<string,int,less<string>,allocator<pair<const string,int> > >" , 99 , -1 };
G__linked_taginfo G__G__HtmlLN_listlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "list<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__G__HtmlLN_TDocParsercLcLdA = { "TDocParser::$" , 101 , -1 };
G__linked_taginfo G__G__HtmlLN_setlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgR = { "set<unsigned int,less<unsigned int>,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__G__HtmlLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR = { "set<string,less<string>,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__G__HtmlLN_TDataMember = { "TDataMember" , 99 , -1 };
G__linked_taginfo G__G__HtmlLN_TDataType = { "TDataType" , 99 , -1 };
G__linked_taginfo G__G__HtmlLN_TGClient = { "TGClient" , 99 , -1 };
G__linked_taginfo G__G__HtmlLN_TModuleDocInfo = { "TModuleDocInfo" , 99 , -1 };
G__linked_taginfo G__G__HtmlLN_TVirtualPad = { "TVirtualPad" , 99 , -1 };
G__linked_taginfo G__G__HtmlLN_TDocOutputcLcLEGraphvizTool = { "TDocOutput::EGraphvizTool" , 101 , -1 };
G__linked_taginfo G__G__HtmlLN_TDocOutputcLcLEFileType = { "TDocOutput::EFileType" , 101 , -1 };
G__linked_taginfo G__G__HtmlLN_TClassDocOutputcLcLETraverse = { "TClassDocOutput::ETraverse" , 101 , -1 };
G__linked_taginfo G__G__HtmlLN_TLatex = { "TLatex" , 99 , -1 };
G__linked_taginfo G__G__HtmlLN_TMacro = { "TMacro" , 99 , -1 };
G__linked_taginfo G__G__HtmlLN_TDocDirective = { "TDocDirective" , 99 , -1 };
G__linked_taginfo G__G__HtmlLN_TDocHtmlDirective = { "TDocHtmlDirective" , 99 , -1 };
G__linked_taginfo G__G__HtmlLN_TDocMacroDirective = { "TDocMacroDirective" , 99 , -1 };
G__linked_taginfo G__G__HtmlLN_TDocLatexDirective = { "TDocLatexDirective" , 99 , -1 };
G__linked_taginfo G__G__HtmlLN_TDictionary = { "TDictionary" , 99 , -1 };
G__linked_taginfo G__G__HtmlLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__G__HtmlLN_TClassDocInfo = { "TClassDocInfo" , 99 , -1 };
G__linked_taginfo G__G__HtmlLN_TLibraryDocInfo = { "TLibraryDocInfo" , 99 , -1 };
G__linked_taginfo G__G__HtmlLN_TExMap = { "TExMap" , 99 , -1 };
G__linked_taginfo G__G__HtmlLN_THtmlcLcLTHelperBase = { "THtml::THelperBase" , 99 , -1 };
G__linked_taginfo G__G__HtmlLN_THtmlcLcLTFileSysEntry = { "THtml::TFileSysEntry" , 99 , -1 };
G__linked_taginfo G__G__HtmlLN_THtmlcLcLTModuleDefinition = { "THtml::TModuleDefinition" , 99 , -1 };
G__linked_taginfo G__G__HtmlLN_THtmlcLcLTFileDefinition = { "THtml::TFileDefinition" , 99 , -1 };
G__linked_taginfo G__G__HtmlLN_THtmlcLcLTPathDefinition = { "THtml::TPathDefinition" , 99 , -1 };
G__linked_taginfo G__G__HtmlLN_THtmlcLcLTFileSysDir = { "THtml::TFileSysDir" , 99 , -1 };
G__linked_taginfo G__G__HtmlLN_THtmlcLcLTFileSysDB = { "THtml::TFileSysDB" , 99 , -1 };
G__linked_taginfo G__G__HtmlLN_THtmlcLcLTFileSysRoot = { "THtml::TFileSysRoot" , 99 , -1 };
G__linked_taginfo G__G__HtmlLN_THtmlcLcLPathInfo_t = { "THtml::PathInfo_t" , 115 , -1 };
G__linked_taginfo G__G__HtmlLN_THtmlcLcLEConvertOutput = { "THtml::EConvertOutput" , 101 , -1 };
G__linked_taginfo G__G__HtmlLN_maplETClassmUcOintcOlesslETClassmUgRcOallocatorlEpairlETClassmUsPconstcOintgRsPgRsPgR = { "map<TClass*,int,less<TClass*>,allocator<pair<TClass* const,int> > >" , 99 , -1 };
G__linked_taginfo G__G__HtmlLN_THtmlcLcLDocSyntax_t = { "THtml::DocSyntax_t" , 115 , -1 };
G__linked_taginfo G__G__HtmlLN_THtmlcLcLLinkInfo_t = { "THtml::LinkInfo_t" , 115 , -1 };
G__linked_taginfo G__G__HtmlLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgR = { "map<string,TString,less<string>,allocator<pair<const string,TString> > >" , 99 , -1 };
G__linked_taginfo G__G__HtmlLN_THtmlcLcLOutputStyle_t = { "THtml::OutputStyle_t" , 115 , -1 };
G__linked_taginfo G__G__HtmlLN_THtmlcLcLDocEntityInfo_t = { "THtml::DocEntityInfo_t" , 115 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__Html() {
  G__G__HtmlLN_TClass.tagnum = -1 ;
  G__G__HtmlLN_TBuffer.tagnum = -1 ;
  G__G__HtmlLN_TMemberInspector.tagnum = -1 ;
  G__G__HtmlLN_TObject.tagnum = -1 ;
  G__G__HtmlLN_TNamed.tagnum = -1 ;
  G__G__HtmlLN_basic_istreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__G__HtmlLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__G__HtmlLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__G__HtmlLN_string.tagnum = -1 ;
  G__G__HtmlLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__HtmlLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__HtmlLN_TList.tagnum = -1 ;
  G__G__HtmlLN_TMethod.tagnum = -1 ;
  G__G__HtmlLN_TString.tagnum = -1 ;
  G__G__HtmlLN_TSubString.tagnum = -1 ;
  G__G__HtmlLN_TVirtualMutex.tagnum = -1 ;
  G__G__HtmlLN_TIter.tagnum = -1 ;
  G__G__HtmlLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__G__HtmlLN_THashTable.tagnum = -1 ;
  G__G__HtmlLN_THashList.tagnum = -1 ;
  G__G__HtmlLN_TBaseClass.tagnum = -1 ;
  G__G__HtmlLN_TClassDocOutput.tagnum = -1 ;
  G__G__HtmlLN_TDocOutput.tagnum = -1 ;
  G__G__HtmlLN_THtml.tagnum = -1 ;
  G__G__HtmlLN_TDocMethodWrapper.tagnum = -1 ;
  G__G__HtmlLN_TDocParser.tagnum = -1 ;
  G__G__HtmlLN_TDocParsercLcLEDocContext.tagnum = -1 ;
  G__G__HtmlLN_TDocParsercLcLESourceInfo.tagnum = -1 ;
  G__G__HtmlLN_TDocParsercLcLEAccess.tagnum = -1 ;
  G__G__HtmlLN_TDocParsercLcLEParseContext.tagnum = -1 ;
  G__G__HtmlLN_TDocParsercLcLEParseContextFlag.tagnum = -1 ;
  G__G__HtmlLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR.tagnum = -1 ;
  G__G__HtmlLN_listlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__G__HtmlLN_TDocParsercLcLdA.tagnum = -1 ;
  G__G__HtmlLN_setlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__G__HtmlLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__G__HtmlLN_TDataMember.tagnum = -1 ;
  G__G__HtmlLN_TDataType.tagnum = -1 ;
  G__G__HtmlLN_TGClient.tagnum = -1 ;
  G__G__HtmlLN_TModuleDocInfo.tagnum = -1 ;
  G__G__HtmlLN_TVirtualPad.tagnum = -1 ;
  G__G__HtmlLN_TDocOutputcLcLEGraphvizTool.tagnum = -1 ;
  G__G__HtmlLN_TDocOutputcLcLEFileType.tagnum = -1 ;
  G__G__HtmlLN_TClassDocOutputcLcLETraverse.tagnum = -1 ;
  G__G__HtmlLN_TLatex.tagnum = -1 ;
  G__G__HtmlLN_TMacro.tagnum = -1 ;
  G__G__HtmlLN_TDocDirective.tagnum = -1 ;
  G__G__HtmlLN_TDocHtmlDirective.tagnum = -1 ;
  G__G__HtmlLN_TDocMacroDirective.tagnum = -1 ;
  G__G__HtmlLN_TDocLatexDirective.tagnum = -1 ;
  G__G__HtmlLN_TDictionary.tagnum = -1 ;
  G__G__HtmlLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__G__HtmlLN_TClassDocInfo.tagnum = -1 ;
  G__G__HtmlLN_TLibraryDocInfo.tagnum = -1 ;
  G__G__HtmlLN_TExMap.tagnum = -1 ;
  G__G__HtmlLN_THtmlcLcLTHelperBase.tagnum = -1 ;
  G__G__HtmlLN_THtmlcLcLTFileSysEntry.tagnum = -1 ;
  G__G__HtmlLN_THtmlcLcLTModuleDefinition.tagnum = -1 ;
  G__G__HtmlLN_THtmlcLcLTFileDefinition.tagnum = -1 ;
  G__G__HtmlLN_THtmlcLcLTPathDefinition.tagnum = -1 ;
  G__G__HtmlLN_THtmlcLcLTFileSysDir.tagnum = -1 ;
  G__G__HtmlLN_THtmlcLcLTFileSysDB.tagnum = -1 ;
  G__G__HtmlLN_THtmlcLcLTFileSysRoot.tagnum = -1 ;
  G__G__HtmlLN_THtmlcLcLPathInfo_t.tagnum = -1 ;
  G__G__HtmlLN_THtmlcLcLEConvertOutput.tagnum = -1 ;
  G__G__HtmlLN_maplETClassmUcOintcOlesslETClassmUgRcOallocatorlEpairlETClassmUsPconstcOintgRsPgRsPgR.tagnum = -1 ;
  G__G__HtmlLN_THtmlcLcLDocSyntax_t.tagnum = -1 ;
  G__G__HtmlLN_THtmlcLcLLinkInfo_t.tagnum = -1 ;
  G__G__HtmlLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgR.tagnum = -1 ;
  G__G__HtmlLN_THtmlcLcLOutputStyle_t.tagnum = -1 ;
  G__G__HtmlLN_THtmlcLcLDocEntityInfo_t.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__Html() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__HtmlLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__HtmlLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__HtmlLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__HtmlLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__HtmlLN_TNamed);
   G__get_linked_tagnum_fwd(&G__G__HtmlLN_basic_istreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__G__HtmlLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__G__HtmlLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__G__HtmlLN_string);
   G__get_linked_tagnum_fwd(&G__G__HtmlLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__HtmlLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__HtmlLN_TList);
   G__get_linked_tagnum_fwd(&G__G__HtmlLN_TMethod);
   G__get_linked_tagnum_fwd(&G__G__HtmlLN_TString);
   G__get_linked_tagnum_fwd(&G__G__HtmlLN_TSubString);
   G__get_linked_tagnum_fwd(&G__G__HtmlLN_TVirtualMutex);
   G__get_linked_tagnum_fwd(&G__G__HtmlLN_TIter);
   G__get_linked_tagnum_fwd(&G__G__HtmlLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__G__HtmlLN_THashTable);
   G__get_linked_tagnum_fwd(&G__G__HtmlLN_THashList);
   G__get_linked_tagnum_fwd(&G__G__HtmlLN_TBaseClass);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__HtmlLN_TClassDocOutput),sizeof(TClassDocOutput),-1,62464,"generates documentation web pages for a class",G__setup_memvarTClassDocOutput,G__setup_memfuncTClassDocOutput);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__HtmlLN_TDocOutput),sizeof(TDocOutput),-1,62464,"generates documentation web pages",G__setup_memvarTDocOutput,G__setup_memfuncTDocOutput);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__HtmlLN_THtml),sizeof(THtml),-1,29952,"Convert class(es) into HTML file(s)",G__setup_memvarTHtml,G__setup_memfuncTHtml);
   G__get_linked_tagnum_fwd(&G__G__HtmlLN_TDocMethodWrapper);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__HtmlLN_TDocParser),sizeof(TDocParser),-1,62464,"parser for reference documentation",G__setup_memvarTDocParser,G__setup_memfuncTDocParser);
   G__get_linked_tagnum_fwd(&G__G__HtmlLN_TDocParsercLcLEDocContext);
   G__get_linked_tagnum_fwd(&G__G__HtmlLN_TDocParsercLcLESourceInfo);
   G__get_linked_tagnum_fwd(&G__G__HtmlLN_TDocParsercLcLEAccess);
   G__get_linked_tagnum_fwd(&G__G__HtmlLN_TDocParsercLcLEParseContext);
   G__get_linked_tagnum_fwd(&G__G__HtmlLN_TDocParsercLcLEParseContextFlag);
   G__get_linked_tagnum_fwd(&G__G__HtmlLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__HtmlLN_listlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__HtmlLN_TDocParsercLcLdA);
   G__get_linked_tagnum_fwd(&G__G__HtmlLN_setlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__HtmlLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__HtmlLN_TDataMember);
   G__get_linked_tagnum_fwd(&G__G__HtmlLN_TDataType);
   G__get_linked_tagnum_fwd(&G__G__HtmlLN_TGClient);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__HtmlLN_TModuleDocInfo),sizeof(TModuleDocInfo),-1,62464,"documentation for a group of classes",G__setup_memvarTModuleDocInfo,G__setup_memfuncTModuleDocInfo);
   G__get_linked_tagnum_fwd(&G__G__HtmlLN_TVirtualPad);
   G__get_linked_tagnum_fwd(&G__G__HtmlLN_TDocOutputcLcLEGraphvizTool);
   G__get_linked_tagnum_fwd(&G__G__HtmlLN_TDocOutputcLcLEFileType);
   G__get_linked_tagnum_fwd(&G__G__HtmlLN_TClassDocOutputcLcLETraverse);
   G__get_linked_tagnum_fwd(&G__G__HtmlLN_TLatex);
   G__get_linked_tagnum_fwd(&G__G__HtmlLN_TMacro);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__HtmlLN_TDocDirective),sizeof(TDocDirective),-1,62723,"THtml directive handler",G__setup_memvarTDocDirective,G__setup_memfuncTDocDirective);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__HtmlLN_TDocHtmlDirective),sizeof(TDocHtmlDirective),-1,62720,"Handler for \"Begin_Html\"/\"End_Html\" for raw HTML in documentation comments",G__setup_memvarTDocHtmlDirective,G__setup_memfuncTDocHtmlDirective);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__HtmlLN_TDocMacroDirective),sizeof(TDocMacroDirective),-1,62720,"Handler for \"Begin_Macro\"/\"End_Macro\" for code that is executed and that can generate an image for documentation",G__setup_memvarTDocMacroDirective,G__setup_memfuncTDocMacroDirective);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__HtmlLN_TDocLatexDirective),sizeof(TDocLatexDirective),-1,62720,"Handler for \"Begin_Latex\"/\"End_Latex\" to generate an image from latex",G__setup_memvarTDocLatexDirective,G__setup_memfuncTDocLatexDirective);
   G__get_linked_tagnum_fwd(&G__G__HtmlLN_TDictionary);
   G__get_linked_tagnum_fwd(&G__G__HtmlLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__HtmlLN_TClassDocInfo),sizeof(TClassDocInfo),-1,62720,"info cache for class documentation",G__setup_memvarTClassDocInfo,G__setup_memfuncTClassDocInfo);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__HtmlLN_TLibraryDocInfo),sizeof(TLibraryDocInfo),-1,61696,"documentation for a library",G__setup_memvarTLibraryDocInfo,G__setup_memfuncTLibraryDocInfo);
   G__get_linked_tagnum_fwd(&G__G__HtmlLN_TExMap);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTHelperBase),sizeof(THtml::THelperBase),-1,29952,"a helper object's base class",G__setup_memvarTHtmlcLcLTHelperBase,G__setup_memfuncTHtmlcLcLTHelperBase);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTFileSysEntry),sizeof(THtml::TFileSysEntry),-1,61440,"an entry of the local file system",G__setup_memvarTHtmlcLcLTFileSysEntry,G__setup_memfuncTHtmlcLcLTFileSysEntry);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTModuleDefinition),sizeof(THtml::TModuleDefinition),-1,28672,"helper class to determine a class's module",G__setup_memvarTHtmlcLcLTModuleDefinition,G__setup_memfuncTHtmlcLcLTModuleDefinition);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTFileDefinition),sizeof(THtml::TFileDefinition),-1,28672,"helper class to determine a class's source files",G__setup_memvarTHtmlcLcLTFileDefinition,G__setup_memfuncTHtmlcLcLTFileDefinition);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTPathDefinition),sizeof(THtml::TPathDefinition),-1,28672,"helper class to determine directory layouts",G__setup_memvarTHtmlcLcLTPathDefinition,G__setup_memfuncTHtmlcLcLTPathDefinition);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTFileSysDir),sizeof(THtml::TFileSysDir),-1,61440,"an directory of the local file system",G__setup_memvarTHtmlcLcLTFileSysDir,G__setup_memfuncTHtmlcLcLTFileSysDir);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTFileSysDB),sizeof(THtml::TFileSysDB),-1,61440,"instance of file system data",G__setup_memvarTHtmlcLcLTFileSysDB,G__setup_memfuncTHtmlcLcLTFileSysDB);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__HtmlLN_THtmlcLcLTFileSysRoot),sizeof(THtml::TFileSysRoot),-1,61440,"an root directory of the local file system",G__setup_memvarTHtmlcLcLTFileSysRoot,G__setup_memfuncTHtmlcLcLTFileSysRoot);
   G__get_linked_tagnum_fwd(&G__G__HtmlLN_THtmlcLcLPathInfo_t);
   G__get_linked_tagnum_fwd(&G__G__HtmlLN_THtmlcLcLEConvertOutput);
   G__get_linked_tagnum_fwd(&G__G__HtmlLN_maplETClassmUcOintcOlesslETClassmUgRcOallocatorlEpairlETClassmUsPconstcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__HtmlLN_THtmlcLcLDocSyntax_t);
   G__get_linked_tagnum_fwd(&G__G__HtmlLN_THtmlcLcLLinkInfo_t);
   G__get_linked_tagnum_fwd(&G__G__HtmlLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__HtmlLN_THtmlcLcLOutputStyle_t);
   G__get_linked_tagnum_fwd(&G__G__HtmlLN_THtmlcLcLDocEntityInfo_t);
}
extern "C" void G__cpp_setupG__Html(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__Html()");
  G__set_cpp_environmentG__Html();
  G__cpp_setup_tagtableG__Html();

  G__cpp_setup_inheritanceG__Html();

  G__cpp_setup_typetableG__Html();

  G__cpp_setup_memvarG__Html();

  G__cpp_setup_memfuncG__Html();
  G__cpp_setup_globalG__Html();
  G__cpp_setup_funcG__Html();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__Html();
  return;
}
class G__cpp_setup_initG__Html {
  public:
    G__cpp_setup_initG__Html() { G__add_setup_func("G__Html",(G__incsetup)(&G__cpp_setupG__Html)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__Html() { G__remove_setup_func("G__Html"); }
};
G__cpp_setup_initG__Html G__cpp_setup_initializerG__Html;

