//
// File generated by core/utils/src/rootcint_tmp at Mon Apr 13 13:44:17 2015

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__TreePlayer.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
      namespace ROOT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::TBranchProxy TBranchProxy;
      #else
      class TBranchProxy  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TBranchProxy() throw() {};
         ::ROOT::TBranchProxyDirector* fDirector; //contain pointer to TTree and entry to be read
         bool fInitialized; //
         :: TString fBranchName; //name of the branch to read
         ::ROOT::TBranchProxy* fParent; //Proxy to a parent object
         :: TString fDataMember; //name of the (eventual) data member being proxied
          bool fIsMember; //true if we proxy an unsplit data member
         bool fIsClone; //true if we proxy the inside of a TClonesArray
         bool fIsaPointer; //true if we proxy a data member of pointer type
         ::TString fClassName; //class name of the object pointed to by the branch
         ::TClass* fClass; //class name of the object pointed to by the branch
         ::TStreamerElement* fElement; //
         int fMemberOffset; //
         int fOffset; //Offset inside the object
         ::TBranch* fBranch; //branch to read
         ::TBranch* fBranchCount; //eventual auxiliary branch (for example holding the size)
         ::TTree* fLastTree; //TTree containing the last entry read
         G__int64 fRead; //Last entry read
         void* fWhere; //memory location of the data
         ::TVirtualCollectionProxy* fCollection; //Handle to the collection containing the data chunk.
      };
      #endif
      } 
      namespace ROOT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::TFriendProxy TFriendProxy;
      #else
      class TFriendProxy  {
         public:
         //friend XX;
         ::ROOT::TBranchProxyDirector fDirector; //contain pointer to TTree and entry to be read
         int fIndex; //Index of this tree in the list of friends
      };
      #endif
      } 
      namespace ROOT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::TBranchProxyDirector TBranchProxyDirector;
      #else
      class TBranchProxyDirector  {
         public:
         //friend XX;
         ::TTree* fTree; //TTree we are currently looking at.
         G__int64 fEntry; //Entry currently being read.
         list< TBranchProxy* > fDirected; //
         list< TFriendProxy* > fFriends; //
      };
      #endif
      } 
      namespace ROOT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::TImpProxy< double > TImpProxylEdoublegR;
      #else
      class TImpProxylEdoublegR  :  public ::ROOT::TBranchProxy {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TImpProxylEdoublegR() throw() {};
      };
      #endif
      } 
      namespace ROOT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::TImpProxy< float > TImpProxylEfloatgR;
      #else
      class TImpProxylEfloatgR  :  public ::ROOT::TBranchProxy {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TImpProxylEfloatgR() throw() {};
      };
      #endif
      } 
      namespace ROOT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::TImpProxy< unsigned int > TImpProxylEunsignedsPintgR;
      #else
      class TImpProxylEunsignedsPintgR  :  public ::ROOT::TBranchProxy {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TImpProxylEunsignedsPintgR() throw() {};
      };
      #endif
      } 
      namespace ROOT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::TImpProxy< unsigned long > TImpProxylEunsignedsPlonggR;
      #else
      class TImpProxylEunsignedsPlonggR  :  public ::ROOT::TBranchProxy {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TImpProxylEunsignedsPlonggR() throw() {};
      };
      #endif
      } 
      namespace ROOT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::TImpProxy< unsigned long long > TImpProxylEunsignedsPlongsPlonggR;
      #else
      class TImpProxylEunsignedsPlongsPlonggR  :  public ::ROOT::TBranchProxy {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TImpProxylEunsignedsPlongsPlonggR() throw() {};
      };
      #endif
      } 
      namespace ROOT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::TImpProxy< unsigned short > TImpProxylEunsignedsPshortgR;
      #else
      class TImpProxylEunsignedsPshortgR  :  public ::ROOT::TBranchProxy {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TImpProxylEunsignedsPshortgR() throw() {};
      };
      #endif
      } 
      namespace ROOT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::TImpProxy< unsigned char > TImpProxylEunsignedsPchargR;
      #else
      class TImpProxylEunsignedsPchargR  :  public ::ROOT::TBranchProxy {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TImpProxylEunsignedsPchargR() throw() {};
      };
      #endif
      } 
      namespace ROOT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::TImpProxy< int > TImpProxylEintgR;
      #else
      class TImpProxylEintgR  :  public ::ROOT::TBranchProxy {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TImpProxylEintgR() throw() {};
      };
      #endif
      } 
      namespace ROOT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::TImpProxy< long > TImpProxylElonggR;
      #else
      class TImpProxylElonggR  :  public ::ROOT::TBranchProxy {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TImpProxylElonggR() throw() {};
      };
      #endif
      } 
      namespace ROOT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::TImpProxy< long long > TImpProxylElongsPlonggR;
      #else
      class TImpProxylElongsPlonggR  :  public ::ROOT::TBranchProxy {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TImpProxylElongsPlonggR() throw() {};
      };
      #endif
      } 
      namespace ROOT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::TImpProxy< short > TImpProxylEshortgR;
      #else
      class TImpProxylEshortgR  :  public ::ROOT::TBranchProxy {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TImpProxylEshortgR() throw() {};
      };
      #endif
      } 
      namespace ROOT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::TImpProxy< char > TImpProxylEchargR;
      #else
      class TImpProxylEchargR  :  public ::ROOT::TBranchProxy {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TImpProxylEchargR() throw() {};
      };
      #endif
      } 
      namespace ROOT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::TImpProxy< bool > TImpProxylEboolgR;
      #else
      class TImpProxylEboolgR  :  public ::ROOT::TBranchProxy {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TImpProxylEboolgR() throw() {};
      };
      #endif
      } 
      namespace ROOT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::TArrayProxy< ::ROOT::TArrayType< double, 0 >  > TArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR;
      #else
      class TArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR  :  public ::ROOT::TBranchProxy {
         public:
         //friend XX;
         typedef void* (*array_t)() ;
         typedef void* (*type_t)() ;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR() throw() {};
      };
      #endif
      } 
      namespace ROOT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::TArrayProxy< ::ROOT::TArrayType< float, 0 >  > TArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR;
      #else
      class TArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR  :  public ::ROOT::TBranchProxy {
         public:
         //friend XX;
         typedef void* (*array_t)() ;
         typedef void* (*type_t)() ;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR() throw() {};
      };
      #endif
      } 
      namespace ROOT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::TArrayProxy< ::ROOT::TArrayType< unsigned int, 0 >  > TArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR;
      #else
      class TArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR  :  public ::ROOT::TBranchProxy {
         public:
         //friend XX;
         typedef void* (*array_t)() ;
         typedef void* (*type_t)() ;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR() throw() {};
      };
      #endif
      } 
      namespace ROOT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::TArrayProxy< ::ROOT::TArrayType< unsigned long, 0 >  > TArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR;
      #else
      class TArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR  :  public ::ROOT::TBranchProxy {
         public:
         //friend XX;
         typedef void* (*array_t)() ;
         typedef void* (*type_t)() ;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR() throw() {};
      };
      #endif
      } 
      namespace ROOT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::TArrayProxy< ::ROOT::TArrayType< unsigned long long, 0 >  > TArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR;
      #else
      class TArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR  :  public ::ROOT::TBranchProxy {
         public:
         //friend XX;
         typedef void* (*array_t)() ;
         typedef void* (*type_t)() ;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR() throw() {};
      };
      #endif
      } 
      namespace ROOT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::TArrayProxy< ::ROOT::TArrayType< unsigned short, 0 >  > TArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR;
      #else
      class TArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR  :  public ::ROOT::TBranchProxy {
         public:
         //friend XX;
         typedef void* (*array_t)() ;
         typedef void* (*type_t)() ;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR() throw() {};
      };
      #endif
      } 
      namespace ROOT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::TArrayProxy< ::ROOT::TArrayType< unsigned char, 0 >  > TArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR;
      #else
      class TArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR  :  public ::ROOT::TBranchProxy {
         public:
         //friend XX;
         typedef void* (*array_t)() ;
         typedef void* (*type_t)() ;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR() throw() {};
      };
      #endif
      } 
      namespace ROOT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::TArrayProxy< ::ROOT::TArrayType< int, 0 >  > TArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR;
      #else
      class TArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR  :  public ::ROOT::TBranchProxy {
         public:
         //friend XX;
         typedef void* (*array_t)() ;
         typedef void* (*type_t)() ;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR() throw() {};
      };
      #endif
      } 
      namespace ROOT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::TArrayProxy< ::ROOT::TArrayType< long, 0 >  > TArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR;
      #else
      class TArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR  :  public ::ROOT::TBranchProxy {
         public:
         //friend XX;
         typedef void* (*array_t)() ;
         typedef void* (*type_t)() ;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR() throw() {};
      };
      #endif
      } 
      namespace ROOT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::TArrayProxy< ::ROOT::TArrayType< long long, 0 >  > TArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR;
      #else
      class TArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR  :  public ::ROOT::TBranchProxy {
         public:
         //friend XX;
         typedef void* (*array_t)() ;
         typedef void* (*type_t)() ;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR() throw() {};
      };
      #endif
      } 
      namespace ROOT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::TArrayProxy< ::ROOT::TArrayType< bool, 0 >  > TArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR;
      #else
      class TArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR  :  public ::ROOT::TBranchProxy {
         public:
         //friend XX;
         typedef void* (*array_t)() ;
         typedef void* (*type_t)() ;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR() throw() {};
      };
      #endif
      } 
      namespace ROOT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::TClaImpProxy< double > TClaImpProxylEdoublegR;
      #else
      class TClaImpProxylEdoublegR  :  public ::ROOT::TBranchProxy {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TClaImpProxylEdoublegR() throw() {};
      };
      #endif
      } 
      namespace ROOT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::TClaImpProxy< float > TClaImpProxylEfloatgR;
      #else
      class TClaImpProxylEfloatgR  :  public ::ROOT::TBranchProxy {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TClaImpProxylEfloatgR() throw() {};
      };
      #endif
      } 
      namespace ROOT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::TClaImpProxy< unsigned int > TClaImpProxylEunsignedsPintgR;
      #else
      class TClaImpProxylEunsignedsPintgR  :  public ::ROOT::TBranchProxy {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TClaImpProxylEunsignedsPintgR() throw() {};
      };
      #endif
      } 
      namespace ROOT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::TClaImpProxy< unsigned long > TClaImpProxylEunsignedsPlonggR;
      #else
      class TClaImpProxylEunsignedsPlonggR  :  public ::ROOT::TBranchProxy {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TClaImpProxylEunsignedsPlonggR() throw() {};
      };
      #endif
      } 
      namespace ROOT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::TClaImpProxy< unsigned long long > TClaImpProxylEunsignedsPlongsPlonggR;
      #else
      class TClaImpProxylEunsignedsPlongsPlonggR  :  public ::ROOT::TBranchProxy {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TClaImpProxylEunsignedsPlongsPlonggR() throw() {};
      };
      #endif
      } 
      namespace ROOT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::TClaImpProxy< unsigned short > TClaImpProxylEunsignedsPshortgR;
      #else
      class TClaImpProxylEunsignedsPshortgR  :  public ::ROOT::TBranchProxy {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TClaImpProxylEunsignedsPshortgR() throw() {};
      };
      #endif
      } 
      namespace ROOT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::TClaImpProxy< unsigned char > TClaImpProxylEunsignedsPchargR;
      #else
      class TClaImpProxylEunsignedsPchargR  :  public ::ROOT::TBranchProxy {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TClaImpProxylEunsignedsPchargR() throw() {};
      };
      #endif
      } 
      namespace ROOT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::TClaImpProxy< int > TClaImpProxylEintgR;
      #else
      class TClaImpProxylEintgR  :  public ::ROOT::TBranchProxy {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TClaImpProxylEintgR() throw() {};
      };
      #endif
      } 
      namespace ROOT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::TClaImpProxy< long > TClaImpProxylElonggR;
      #else
      class TClaImpProxylElonggR  :  public ::ROOT::TBranchProxy {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TClaImpProxylElonggR() throw() {};
      };
      #endif
      } 
      namespace ROOT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::TClaImpProxy< long long > TClaImpProxylElongsPlonggR;
      #else
      class TClaImpProxylElongsPlonggR  :  public ::ROOT::TBranchProxy {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TClaImpProxylElongsPlonggR() throw() {};
      };
      #endif
      } 
      namespace ROOT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::TClaImpProxy< short > TClaImpProxylEshortgR;
      #else
      class TClaImpProxylEshortgR  :  public ::ROOT::TBranchProxy {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TClaImpProxylEshortgR() throw() {};
      };
      #endif
      } 
      namespace ROOT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::TClaImpProxy< char > TClaImpProxylEchargR;
      #else
      class TClaImpProxylEchargR  :  public ::ROOT::TBranchProxy {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TClaImpProxylEchargR() throw() {};
      };
      #endif
      } 
      namespace ROOT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::TClaImpProxy< bool > TClaImpProxylEboolgR;
      #else
      class TClaImpProxylEboolgR  :  public ::ROOT::TBranchProxy {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TClaImpProxylEboolgR() throw() {};
      };
      #endif
      } 
      namespace ROOT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::TClaArrayProxy< ::ROOT::TArrayType< double, 0 >  > TClaArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR;
      #else
      class TClaArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR  :  public ::ROOT::TBranchProxy {
         public:
         //friend XX;
         typedef void* (*array_t)() ;
         typedef void* (*type_t)() ;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TClaArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR() throw() {};
      };
      #endif
      } 
      namespace ROOT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::TClaArrayProxy< ::ROOT::TArrayType< float, 0 >  > TClaArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR;
      #else
      class TClaArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR  :  public ::ROOT::TBranchProxy {
         public:
         //friend XX;
         typedef void* (*array_t)() ;
         typedef void* (*type_t)() ;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TClaArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR() throw() {};
      };
      #endif
      } 
      namespace ROOT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::TClaArrayProxy< ::ROOT::TArrayType< unsigned int, 0 >  > TClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR;
      #else
      class TClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR  :  public ::ROOT::TBranchProxy {
         public:
         //friend XX;
         typedef void* (*array_t)() ;
         typedef void* (*type_t)() ;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR() throw() {};
      };
      #endif
      } 
      namespace ROOT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::TClaArrayProxy< ::ROOT::TArrayType< unsigned long, 0 >  > TClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR;
      #else
      class TClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR  :  public ::ROOT::TBranchProxy {
         public:
         //friend XX;
         typedef void* (*array_t)() ;
         typedef void* (*type_t)() ;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR() throw() {};
      };
      #endif
      } 
      namespace ROOT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::TClaArrayProxy< ::ROOT::TArrayType< unsigned long long, 0 >  > TClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR;
      #else
      class TClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR  :  public ::ROOT::TBranchProxy {
         public:
         //friend XX;
         typedef void* (*array_t)() ;
         typedef void* (*type_t)() ;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR() throw() {};
      };
      #endif
      } 
      namespace ROOT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::TClaArrayProxy< ::ROOT::TArrayType< unsigned short, 0 >  > TClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR;
      #else
      class TClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR  :  public ::ROOT::TBranchProxy {
         public:
         //friend XX;
         typedef void* (*array_t)() ;
         typedef void* (*type_t)() ;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR() throw() {};
      };
      #endif
      } 
      namespace ROOT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::TClaArrayProxy< ::ROOT::TArrayType< unsigned char, 0 >  > TClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR;
      #else
      class TClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR  :  public ::ROOT::TBranchProxy {
         public:
         //friend XX;
         typedef void* (*array_t)() ;
         typedef void* (*type_t)() ;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR() throw() {};
      };
      #endif
      } 
      namespace ROOT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::TClaArrayProxy< ::ROOT::TArrayType< int, 0 >  > TClaArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR;
      #else
      class TClaArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR  :  public ::ROOT::TBranchProxy {
         public:
         //friend XX;
         typedef void* (*array_t)() ;
         typedef void* (*type_t)() ;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TClaArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR() throw() {};
      };
      #endif
      } 
      namespace ROOT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::TClaArrayProxy< ::ROOT::TArrayType< long, 0 >  > TClaArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR;
      #else
      class TClaArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR  :  public ::ROOT::TBranchProxy {
         public:
         //friend XX;
         typedef void* (*array_t)() ;
         typedef void* (*type_t)() ;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TClaArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR() throw() {};
      };
      #endif
      } 
      namespace ROOT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::TClaArrayProxy< ::ROOT::TArrayType< long long, 0 >  > TClaArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR;
      #else
      class TClaArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR  :  public ::ROOT::TBranchProxy {
         public:
         //friend XX;
         typedef void* (*array_t)() ;
         typedef void* (*type_t)() ;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TClaArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR() throw() {};
      };
      #endif
      } 
      namespace ROOT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::TClaArrayProxy< ::ROOT::TArrayType< char, 0 >  > TClaArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR;
      #else
      class TClaArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR  :  public ::ROOT::TBranchProxy {
         public:
         //friend XX;
         typedef void* (*array_t)() ;
         typedef void* (*type_t)() ;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TClaArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR() throw() {};
      };
      #endif
      } 
      namespace ROOT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::TClaArrayProxy< ::ROOT::TArrayType< bool, 0 >  > TClaArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR;
      #else
      class TClaArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR  :  public ::ROOT::TBranchProxy {
         public:
         //friend XX;
         typedef void* (*array_t)() ;
         typedef void* (*type_t)() ;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TClaArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR() throw() {};
      };
      #endif
      } 
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::TChainIndex TChainIndex;
      #else
      class TChainIndex  :  public ::TVirtualIndex {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::TChainIndex::TChainIndexEntry TChainIndexEntry;
         #else
         class TChainIndexEntry  {
            public:
            //friend XX;
            G__int64 fMinIndexValue; //the minimum value of the index
            G__int64 fMaxIndexValue; //the maximum value of the index
            ::TVirtualIndex* fTreeIndex; //the tree index in case it was created in the constructor,
         };
         #endif

         // To force the creation of a virtual table, throw just in case.
         virtual ~TChainIndex() throw() {};
      };
      #endif

      namespace ROOT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::TArrayProxy< ::ROOT::TArrayType< short, 0 >  > TArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR;
      #else
      class TArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR  :  public ::ROOT::TBranchProxy {
         public:
         //friend XX;
         typedef void* (*array_t)() ;
         typedef void* (*type_t)() ;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR() throw() {};
      };
      #endif
      } 
      namespace ROOT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::TArrayProxy< ::ROOT::TArrayType< char, 0 >  > TArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR;
      #else
      class TArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR  :  public ::ROOT::TBranchProxy {
         public:
         //friend XX;
         typedef void* (*array_t)() ;
         typedef void* (*type_t)() ;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR() throw() {};
      };
      #endif
      } 
      namespace ROOT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::TClaArrayProxy< ::ROOT::TArrayType< short, 0 >  > TClaArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR;
      #else
      class TClaArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR  :  public ::ROOT::TBranchProxy {
         public:
         //friend XX;
         typedef void* (*array_t)() ;
         typedef void* (*type_t)() ;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TClaArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR() throw() {};
      };
      #endif
      } 
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

   namespace ROOT {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void ROOT_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("ROOT", 0 /*version*/, "include/TTreeProxyGenerator.h", 28,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &ROOT_Dictionary, 0);
         return &instance;
      }
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void ROOT_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }

namespace ROOT {
   void ROOTcLcLTBranchProxyDescriptor_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_ROOTcLcLTBranchProxyDescriptor(void *p);
   static void deleteArray_ROOTcLcLTBranchProxyDescriptor(void *p);
   static void destruct_ROOTcLcLTBranchProxyDescriptor(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::TBranchProxyDescriptor*)
   {
      ::ROOT::TBranchProxyDescriptor *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ROOT::TBranchProxyDescriptor >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::TBranchProxyDescriptor", ::ROOT::TBranchProxyDescriptor::Class_Version(), "include/TBranchProxyDescriptor.h", 22,
                  typeid(::ROOT::TBranchProxyDescriptor), DefineBehavior(ptr, ptr),
                  &::ROOT::TBranchProxyDescriptor::Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::TBranchProxyDescriptor) );
      instance.SetDelete(&delete_ROOTcLcLTBranchProxyDescriptor);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLTBranchProxyDescriptor);
      instance.SetDestructor(&destruct_ROOTcLcLTBranchProxyDescriptor);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::TBranchProxyDescriptor*)
   {
      return GenerateInitInstanceLocal((::ROOT::TBranchProxyDescriptor*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::TBranchProxyDescriptor*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLTBranchProxyClassDescriptor_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_ROOTcLcLTBranchProxyClassDescriptor(void *p);
   static void deleteArray_ROOTcLcLTBranchProxyClassDescriptor(void *p);
   static void destruct_ROOTcLcLTBranchProxyClassDescriptor(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::TBranchProxyClassDescriptor*)
   {
      ::ROOT::TBranchProxyClassDescriptor *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ROOT::TBranchProxyClassDescriptor >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::TBranchProxyClassDescriptor", ::ROOT::TBranchProxyClassDescriptor::Class_Version(), "include/TBranchProxyClassDescriptor.h", 29,
                  typeid(::ROOT::TBranchProxyClassDescriptor), DefineBehavior(ptr, ptr),
                  &::ROOT::TBranchProxyClassDescriptor::Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::TBranchProxyClassDescriptor) );
      instance.SetDelete(&delete_ROOTcLcLTBranchProxyClassDescriptor);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLTBranchProxyClassDescriptor);
      instance.SetDestructor(&destruct_ROOTcLcLTBranchProxyClassDescriptor);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::TBranchProxyClassDescriptor*)
   {
      return GenerateInitInstanceLocal((::ROOT::TBranchProxyClassDescriptor*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::TBranchProxyClassDescriptor*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TTreeFormula_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TTreeFormula(void *p = 0);
   static void *newArray_TTreeFormula(Long_t size, void *p);
   static void delete_TTreeFormula(void *p);
   static void deleteArray_TTreeFormula(void *p);
   static void destruct_TTreeFormula(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TTreeFormula*)
   {
      ::TTreeFormula *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TTreeFormula >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TTreeFormula", ::TTreeFormula::Class_Version(), "include/TTreeFormula.h", 64,
                  typeid(::TTreeFormula), DefineBehavior(ptr, ptr),
                  &::TTreeFormula::Dictionary, isa_proxy, 1,
                  sizeof(::TTreeFormula) );
      instance.SetNew(&new_TTreeFormula);
      instance.SetNewArray(&newArray_TTreeFormula);
      instance.SetDelete(&delete_TTreeFormula);
      instance.SetDeleteArray(&deleteArray_TTreeFormula);
      instance.SetDestructor(&destruct_TTreeFormula);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TTreeFormula*)
   {
      return GenerateInitInstanceLocal((::TTreeFormula*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TTreeFormula*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLTBranchProxy_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLTBranchProxy_Dictionary();
   static void *new_ROOTcLcLTBranchProxy(void *p = 0);
   static void *newArray_ROOTcLcLTBranchProxy(Long_t size, void *p);
   static void delete_ROOTcLcLTBranchProxy(void *p);
   static void deleteArray_ROOTcLcLTBranchProxy(void *p);
   static void destruct_ROOTcLcLTBranchProxy(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::TBranchProxy*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::TBranchProxy) == sizeof(::ROOT::Shadow::ROOT::TBranchProxy));
      ::ROOT::TBranchProxy *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::TBranchProxy),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::TBranchProxy", "include/TBranchProxy.h", 79,
                  typeid(::ROOT::TBranchProxy), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLTBranchProxy_ShowMembers, &ROOTcLcLTBranchProxy_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::TBranchProxy) );
      instance.SetNew(&new_ROOTcLcLTBranchProxy);
      instance.SetNewArray(&newArray_ROOTcLcLTBranchProxy);
      instance.SetDelete(&delete_ROOTcLcLTBranchProxy);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLTBranchProxy);
      instance.SetDestructor(&destruct_ROOTcLcLTBranchProxy);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::TBranchProxy*)
   {
      return GenerateInitInstanceLocal((::ROOT::TBranchProxy*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::TBranchProxy*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLTBranchProxy_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TBranchProxy*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLTFriendProxy_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLTFriendProxy_Dictionary();
   static void *new_ROOTcLcLTFriendProxy(void *p = 0);
   static void *newArray_ROOTcLcLTFriendProxy(Long_t size, void *p);
   static void delete_ROOTcLcLTFriendProxy(void *p);
   static void deleteArray_ROOTcLcLTFriendProxy(void *p);
   static void destruct_ROOTcLcLTFriendProxy(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::TFriendProxy*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::TFriendProxy) == sizeof(::ROOT::Shadow::ROOT::TFriendProxy));
      ::ROOT::TFriendProxy *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::TFriendProxy),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::TFriendProxy", "include/TFriendProxy.h", 23,
                  typeid(::ROOT::TFriendProxy), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLTFriendProxy_ShowMembers, &ROOTcLcLTFriendProxy_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::TFriendProxy) );
      instance.SetNew(&new_ROOTcLcLTFriendProxy);
      instance.SetNewArray(&newArray_ROOTcLcLTFriendProxy);
      instance.SetDelete(&delete_ROOTcLcLTFriendProxy);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLTFriendProxy);
      instance.SetDestructor(&destruct_ROOTcLcLTFriendProxy);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::TFriendProxy*)
   {
      return GenerateInitInstanceLocal((::ROOT::TFriendProxy*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::TFriendProxy*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLTFriendProxy_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TFriendProxy*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLTBranchProxyDirector_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLTBranchProxyDirector_Dictionary();
   static void delete_ROOTcLcLTBranchProxyDirector(void *p);
   static void deleteArray_ROOTcLcLTBranchProxyDirector(void *p);
   static void destruct_ROOTcLcLTBranchProxyDirector(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::TBranchProxyDirector*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::TBranchProxyDirector) == sizeof(::ROOT::Shadow::ROOT::TBranchProxyDirector));
      ::ROOT::TBranchProxyDirector *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::TBranchProxyDirector),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::TBranchProxyDirector", "include/TBranchProxyDirector.h", 29,
                  typeid(::ROOT::TBranchProxyDirector), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLTBranchProxyDirector_ShowMembers, &ROOTcLcLTBranchProxyDirector_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::TBranchProxyDirector) );
      instance.SetDelete(&delete_ROOTcLcLTBranchProxyDirector);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLTBranchProxyDirector);
      instance.SetDestructor(&destruct_ROOTcLcLTBranchProxyDirector);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::TBranchProxyDirector*)
   {
      return GenerateInitInstanceLocal((::ROOT::TBranchProxyDirector*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::TBranchProxyDirector*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLTBranchProxyDirector_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TBranchProxyDirector*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLTImpProxylEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLTImpProxylEdoublegR_Dictionary();
   static void *new_ROOTcLcLTImpProxylEdoublegR(void *p = 0);
   static void *newArray_ROOTcLcLTImpProxylEdoublegR(Long_t size, void *p);
   static void delete_ROOTcLcLTImpProxylEdoublegR(void *p);
   static void deleteArray_ROOTcLcLTImpProxylEdoublegR(void *p);
   static void destruct_ROOTcLcLTImpProxylEdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::TImpProxy<double>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::TImpProxy<double>) == sizeof(::ROOT::Shadow::ROOT::TImpProxylEdoublegR));
      ::ROOT::TImpProxy<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::TImpProxy<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::TImpProxy<double>", "include/TBranchProxy.h", 436,
                  typeid(::ROOT::TImpProxy<double>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLTImpProxylEdoublegR_ShowMembers, &ROOTcLcLTImpProxylEdoublegR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::TImpProxy<double>) );
      instance.SetNew(&new_ROOTcLcLTImpProxylEdoublegR);
      instance.SetNewArray(&newArray_ROOTcLcLTImpProxylEdoublegR);
      instance.SetDelete(&delete_ROOTcLcLTImpProxylEdoublegR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLTImpProxylEdoublegR);
      instance.SetDestructor(&destruct_ROOTcLcLTImpProxylEdoublegR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::TImpProxy<double>*)
   {
      return GenerateInitInstanceLocal((::ROOT::TImpProxy<double>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::TImpProxy<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLTImpProxylEdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TImpProxy<double>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLTImpProxylEfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLTImpProxylEfloatgR_Dictionary();
   static void *new_ROOTcLcLTImpProxylEfloatgR(void *p = 0);
   static void *newArray_ROOTcLcLTImpProxylEfloatgR(Long_t size, void *p);
   static void delete_ROOTcLcLTImpProxylEfloatgR(void *p);
   static void deleteArray_ROOTcLcLTImpProxylEfloatgR(void *p);
   static void destruct_ROOTcLcLTImpProxylEfloatgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::TImpProxy<float>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::TImpProxy<float>) == sizeof(::ROOT::Shadow::ROOT::TImpProxylEfloatgR));
      ::ROOT::TImpProxy<float> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::TImpProxy<float>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::TImpProxy<float>", "include/TBranchProxy.h", 436,
                  typeid(::ROOT::TImpProxy<float>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLTImpProxylEfloatgR_ShowMembers, &ROOTcLcLTImpProxylEfloatgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::TImpProxy<float>) );
      instance.SetNew(&new_ROOTcLcLTImpProxylEfloatgR);
      instance.SetNewArray(&newArray_ROOTcLcLTImpProxylEfloatgR);
      instance.SetDelete(&delete_ROOTcLcLTImpProxylEfloatgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLTImpProxylEfloatgR);
      instance.SetDestructor(&destruct_ROOTcLcLTImpProxylEfloatgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::TImpProxy<float>*)
   {
      return GenerateInitInstanceLocal((::ROOT::TImpProxy<float>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::TImpProxy<float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLTImpProxylEfloatgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TImpProxy<float>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLTImpProxylEunsignedsPintgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLTImpProxylEunsignedsPintgR_Dictionary();
   static void *new_ROOTcLcLTImpProxylEunsignedsPintgR(void *p = 0);
   static void *newArray_ROOTcLcLTImpProxylEunsignedsPintgR(Long_t size, void *p);
   static void delete_ROOTcLcLTImpProxylEunsignedsPintgR(void *p);
   static void deleteArray_ROOTcLcLTImpProxylEunsignedsPintgR(void *p);
   static void destruct_ROOTcLcLTImpProxylEunsignedsPintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::TImpProxy<unsigned int>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::TImpProxy<unsigned int>) == sizeof(::ROOT::Shadow::ROOT::TImpProxylEunsignedsPintgR));
      ::ROOT::TImpProxy<unsigned int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::TImpProxy<unsigned int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::TImpProxy<unsigned int>", "include/TBranchProxy.h", 436,
                  typeid(::ROOT::TImpProxy<unsigned int>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLTImpProxylEunsignedsPintgR_ShowMembers, &ROOTcLcLTImpProxylEunsignedsPintgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::TImpProxy<unsigned int>) );
      instance.SetNew(&new_ROOTcLcLTImpProxylEunsignedsPintgR);
      instance.SetNewArray(&newArray_ROOTcLcLTImpProxylEunsignedsPintgR);
      instance.SetDelete(&delete_ROOTcLcLTImpProxylEunsignedsPintgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLTImpProxylEunsignedsPintgR);
      instance.SetDestructor(&destruct_ROOTcLcLTImpProxylEunsignedsPintgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::TImpProxy<unsigned int>*)
   {
      return GenerateInitInstanceLocal((::ROOT::TImpProxy<unsigned int>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::TImpProxy<unsigned int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLTImpProxylEunsignedsPintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TImpProxy<unsigned int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLTImpProxylEunsignedsPlonggR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLTImpProxylEunsignedsPlonggR_Dictionary();
   static void *new_ROOTcLcLTImpProxylEunsignedsPlonggR(void *p = 0);
   static void *newArray_ROOTcLcLTImpProxylEunsignedsPlonggR(Long_t size, void *p);
   static void delete_ROOTcLcLTImpProxylEunsignedsPlonggR(void *p);
   static void deleteArray_ROOTcLcLTImpProxylEunsignedsPlonggR(void *p);
   static void destruct_ROOTcLcLTImpProxylEunsignedsPlonggR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::TImpProxy<unsigned long>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::TImpProxy<unsigned long>) == sizeof(::ROOT::Shadow::ROOT::TImpProxylEunsignedsPlonggR));
      ::ROOT::TImpProxy<unsigned long> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::TImpProxy<unsigned long>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::TImpProxy<unsigned long>", "include/TBranchProxy.h", 436,
                  typeid(::ROOT::TImpProxy<unsigned long>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLTImpProxylEunsignedsPlonggR_ShowMembers, &ROOTcLcLTImpProxylEunsignedsPlonggR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::TImpProxy<unsigned long>) );
      instance.SetNew(&new_ROOTcLcLTImpProxylEunsignedsPlonggR);
      instance.SetNewArray(&newArray_ROOTcLcLTImpProxylEunsignedsPlonggR);
      instance.SetDelete(&delete_ROOTcLcLTImpProxylEunsignedsPlonggR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLTImpProxylEunsignedsPlonggR);
      instance.SetDestructor(&destruct_ROOTcLcLTImpProxylEunsignedsPlonggR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::TImpProxy<unsigned long>*)
   {
      return GenerateInitInstanceLocal((::ROOT::TImpProxy<unsigned long>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::TImpProxy<unsigned long>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLTImpProxylEunsignedsPlonggR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TImpProxy<unsigned long>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLTImpProxylEULong64_tgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLTImpProxylEULong64_tgR_Dictionary();
   static void *new_ROOTcLcLTImpProxylEULong64_tgR(void *p = 0);
   static void *newArray_ROOTcLcLTImpProxylEULong64_tgR(Long_t size, void *p);
   static void delete_ROOTcLcLTImpProxylEULong64_tgR(void *p);
   static void deleteArray_ROOTcLcLTImpProxylEULong64_tgR(void *p);
   static void destruct_ROOTcLcLTImpProxylEULong64_tgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::TImpProxy<ULong64_t>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::TImpProxy<ULong64_t>) == sizeof(::ROOT::Shadow::ROOT::TImpProxylEunsignedsPlongsPlonggR));
      ::ROOT::TImpProxy<ULong64_t> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::TImpProxy<ULong64_t>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::TImpProxy<ULong64_t>", "include/TBranchProxy.h", 436,
                  typeid(::ROOT::TImpProxy<ULong64_t>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLTImpProxylEULong64_tgR_ShowMembers, &ROOTcLcLTImpProxylEULong64_tgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::TImpProxy<ULong64_t>) );
      instance.SetNew(&new_ROOTcLcLTImpProxylEULong64_tgR);
      instance.SetNewArray(&newArray_ROOTcLcLTImpProxylEULong64_tgR);
      instance.SetDelete(&delete_ROOTcLcLTImpProxylEULong64_tgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLTImpProxylEULong64_tgR);
      instance.SetDestructor(&destruct_ROOTcLcLTImpProxylEULong64_tgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::TImpProxy<ULong64_t>*)
   {
      return GenerateInitInstanceLocal((::ROOT::TImpProxy<ULong64_t>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::TImpProxy<ULong64_t>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLTImpProxylEULong64_tgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TImpProxy<ULong64_t>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLTImpProxylEunsignedsPshortgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLTImpProxylEunsignedsPshortgR_Dictionary();
   static void *new_ROOTcLcLTImpProxylEunsignedsPshortgR(void *p = 0);
   static void *newArray_ROOTcLcLTImpProxylEunsignedsPshortgR(Long_t size, void *p);
   static void delete_ROOTcLcLTImpProxylEunsignedsPshortgR(void *p);
   static void deleteArray_ROOTcLcLTImpProxylEunsignedsPshortgR(void *p);
   static void destruct_ROOTcLcLTImpProxylEunsignedsPshortgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::TImpProxy<unsigned short>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::TImpProxy<unsigned short>) == sizeof(::ROOT::Shadow::ROOT::TImpProxylEunsignedsPshortgR));
      ::ROOT::TImpProxy<unsigned short> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::TImpProxy<unsigned short>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::TImpProxy<unsigned short>", "include/TBranchProxy.h", 436,
                  typeid(::ROOT::TImpProxy<unsigned short>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLTImpProxylEunsignedsPshortgR_ShowMembers, &ROOTcLcLTImpProxylEunsignedsPshortgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::TImpProxy<unsigned short>) );
      instance.SetNew(&new_ROOTcLcLTImpProxylEunsignedsPshortgR);
      instance.SetNewArray(&newArray_ROOTcLcLTImpProxylEunsignedsPshortgR);
      instance.SetDelete(&delete_ROOTcLcLTImpProxylEunsignedsPshortgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLTImpProxylEunsignedsPshortgR);
      instance.SetDestructor(&destruct_ROOTcLcLTImpProxylEunsignedsPshortgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::TImpProxy<unsigned short>*)
   {
      return GenerateInitInstanceLocal((::ROOT::TImpProxy<unsigned short>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::TImpProxy<unsigned short>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLTImpProxylEunsignedsPshortgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TImpProxy<unsigned short>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLTImpProxylEunsignedsPchargR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLTImpProxylEunsignedsPchargR_Dictionary();
   static void *new_ROOTcLcLTImpProxylEunsignedsPchargR(void *p = 0);
   static void *newArray_ROOTcLcLTImpProxylEunsignedsPchargR(Long_t size, void *p);
   static void delete_ROOTcLcLTImpProxylEunsignedsPchargR(void *p);
   static void deleteArray_ROOTcLcLTImpProxylEunsignedsPchargR(void *p);
   static void destruct_ROOTcLcLTImpProxylEunsignedsPchargR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::TImpProxy<unsigned char>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::TImpProxy<unsigned char>) == sizeof(::ROOT::Shadow::ROOT::TImpProxylEunsignedsPchargR));
      ::ROOT::TImpProxy<unsigned char> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::TImpProxy<unsigned char>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::TImpProxy<unsigned char>", "include/TBranchProxy.h", 436,
                  typeid(::ROOT::TImpProxy<unsigned char>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLTImpProxylEunsignedsPchargR_ShowMembers, &ROOTcLcLTImpProxylEunsignedsPchargR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::TImpProxy<unsigned char>) );
      instance.SetNew(&new_ROOTcLcLTImpProxylEunsignedsPchargR);
      instance.SetNewArray(&newArray_ROOTcLcLTImpProxylEunsignedsPchargR);
      instance.SetDelete(&delete_ROOTcLcLTImpProxylEunsignedsPchargR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLTImpProxylEunsignedsPchargR);
      instance.SetDestructor(&destruct_ROOTcLcLTImpProxylEunsignedsPchargR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::TImpProxy<unsigned char>*)
   {
      return GenerateInitInstanceLocal((::ROOT::TImpProxy<unsigned char>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::TImpProxy<unsigned char>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLTImpProxylEunsignedsPchargR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TImpProxy<unsigned char>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLTImpProxylEintgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLTImpProxylEintgR_Dictionary();
   static void *new_ROOTcLcLTImpProxylEintgR(void *p = 0);
   static void *newArray_ROOTcLcLTImpProxylEintgR(Long_t size, void *p);
   static void delete_ROOTcLcLTImpProxylEintgR(void *p);
   static void deleteArray_ROOTcLcLTImpProxylEintgR(void *p);
   static void destruct_ROOTcLcLTImpProxylEintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::TImpProxy<int>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::TImpProxy<int>) == sizeof(::ROOT::Shadow::ROOT::TImpProxylEintgR));
      ::ROOT::TImpProxy<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::TImpProxy<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::TImpProxy<int>", "include/TBranchProxy.h", 436,
                  typeid(::ROOT::TImpProxy<int>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLTImpProxylEintgR_ShowMembers, &ROOTcLcLTImpProxylEintgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::TImpProxy<int>) );
      instance.SetNew(&new_ROOTcLcLTImpProxylEintgR);
      instance.SetNewArray(&newArray_ROOTcLcLTImpProxylEintgR);
      instance.SetDelete(&delete_ROOTcLcLTImpProxylEintgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLTImpProxylEintgR);
      instance.SetDestructor(&destruct_ROOTcLcLTImpProxylEintgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::TImpProxy<int>*)
   {
      return GenerateInitInstanceLocal((::ROOT::TImpProxy<int>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::TImpProxy<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLTImpProxylEintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TImpProxy<int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLTImpProxylElonggR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLTImpProxylElonggR_Dictionary();
   static void *new_ROOTcLcLTImpProxylElonggR(void *p = 0);
   static void *newArray_ROOTcLcLTImpProxylElonggR(Long_t size, void *p);
   static void delete_ROOTcLcLTImpProxylElonggR(void *p);
   static void deleteArray_ROOTcLcLTImpProxylElonggR(void *p);
   static void destruct_ROOTcLcLTImpProxylElonggR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::TImpProxy<long>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::TImpProxy<long>) == sizeof(::ROOT::Shadow::ROOT::TImpProxylElonggR));
      ::ROOT::TImpProxy<long> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::TImpProxy<long>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::TImpProxy<long>", "include/TBranchProxy.h", 436,
                  typeid(::ROOT::TImpProxy<long>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLTImpProxylElonggR_ShowMembers, &ROOTcLcLTImpProxylElonggR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::TImpProxy<long>) );
      instance.SetNew(&new_ROOTcLcLTImpProxylElonggR);
      instance.SetNewArray(&newArray_ROOTcLcLTImpProxylElonggR);
      instance.SetDelete(&delete_ROOTcLcLTImpProxylElonggR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLTImpProxylElonggR);
      instance.SetDestructor(&destruct_ROOTcLcLTImpProxylElonggR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::TImpProxy<long>*)
   {
      return GenerateInitInstanceLocal((::ROOT::TImpProxy<long>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::TImpProxy<long>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLTImpProxylElonggR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TImpProxy<long>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLTImpProxylELong64_tgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLTImpProxylELong64_tgR_Dictionary();
   static void *new_ROOTcLcLTImpProxylELong64_tgR(void *p = 0);
   static void *newArray_ROOTcLcLTImpProxylELong64_tgR(Long_t size, void *p);
   static void delete_ROOTcLcLTImpProxylELong64_tgR(void *p);
   static void deleteArray_ROOTcLcLTImpProxylELong64_tgR(void *p);
   static void destruct_ROOTcLcLTImpProxylELong64_tgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::TImpProxy<Long64_t>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::TImpProxy<Long64_t>) == sizeof(::ROOT::Shadow::ROOT::TImpProxylElongsPlonggR));
      ::ROOT::TImpProxy<Long64_t> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::TImpProxy<Long64_t>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::TImpProxy<Long64_t>", "include/TBranchProxy.h", 436,
                  typeid(::ROOT::TImpProxy<Long64_t>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLTImpProxylELong64_tgR_ShowMembers, &ROOTcLcLTImpProxylELong64_tgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::TImpProxy<Long64_t>) );
      instance.SetNew(&new_ROOTcLcLTImpProxylELong64_tgR);
      instance.SetNewArray(&newArray_ROOTcLcLTImpProxylELong64_tgR);
      instance.SetDelete(&delete_ROOTcLcLTImpProxylELong64_tgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLTImpProxylELong64_tgR);
      instance.SetDestructor(&destruct_ROOTcLcLTImpProxylELong64_tgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::TImpProxy<Long64_t>*)
   {
      return GenerateInitInstanceLocal((::ROOT::TImpProxy<Long64_t>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::TImpProxy<Long64_t>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLTImpProxylELong64_tgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TImpProxy<Long64_t>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLTImpProxylEshortgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLTImpProxylEshortgR_Dictionary();
   static void *new_ROOTcLcLTImpProxylEshortgR(void *p = 0);
   static void *newArray_ROOTcLcLTImpProxylEshortgR(Long_t size, void *p);
   static void delete_ROOTcLcLTImpProxylEshortgR(void *p);
   static void deleteArray_ROOTcLcLTImpProxylEshortgR(void *p);
   static void destruct_ROOTcLcLTImpProxylEshortgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::TImpProxy<short>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::TImpProxy<short>) == sizeof(::ROOT::Shadow::ROOT::TImpProxylEshortgR));
      ::ROOT::TImpProxy<short> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::TImpProxy<short>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::TImpProxy<short>", "include/TBranchProxy.h", 436,
                  typeid(::ROOT::TImpProxy<short>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLTImpProxylEshortgR_ShowMembers, &ROOTcLcLTImpProxylEshortgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::TImpProxy<short>) );
      instance.SetNew(&new_ROOTcLcLTImpProxylEshortgR);
      instance.SetNewArray(&newArray_ROOTcLcLTImpProxylEshortgR);
      instance.SetDelete(&delete_ROOTcLcLTImpProxylEshortgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLTImpProxylEshortgR);
      instance.SetDestructor(&destruct_ROOTcLcLTImpProxylEshortgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::TImpProxy<short>*)
   {
      return GenerateInitInstanceLocal((::ROOT::TImpProxy<short>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::TImpProxy<short>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLTImpProxylEshortgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TImpProxy<short>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLTImpProxylEchargR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLTImpProxylEchargR_Dictionary();
   static void *new_ROOTcLcLTImpProxylEchargR(void *p = 0);
   static void *newArray_ROOTcLcLTImpProxylEchargR(Long_t size, void *p);
   static void delete_ROOTcLcLTImpProxylEchargR(void *p);
   static void deleteArray_ROOTcLcLTImpProxylEchargR(void *p);
   static void destruct_ROOTcLcLTImpProxylEchargR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::TImpProxy<char>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::TImpProxy<char>) == sizeof(::ROOT::Shadow::ROOT::TImpProxylEchargR));
      ::ROOT::TImpProxy<char> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::TImpProxy<char>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::TImpProxy<char>", "include/TBranchProxy.h", 436,
                  typeid(::ROOT::TImpProxy<char>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLTImpProxylEchargR_ShowMembers, &ROOTcLcLTImpProxylEchargR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::TImpProxy<char>) );
      instance.SetNew(&new_ROOTcLcLTImpProxylEchargR);
      instance.SetNewArray(&newArray_ROOTcLcLTImpProxylEchargR);
      instance.SetDelete(&delete_ROOTcLcLTImpProxylEchargR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLTImpProxylEchargR);
      instance.SetDestructor(&destruct_ROOTcLcLTImpProxylEchargR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::TImpProxy<char>*)
   {
      return GenerateInitInstanceLocal((::ROOT::TImpProxy<char>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::TImpProxy<char>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLTImpProxylEchargR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TImpProxy<char>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLTImpProxylEboolgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLTImpProxylEboolgR_Dictionary();
   static void *new_ROOTcLcLTImpProxylEboolgR(void *p = 0);
   static void *newArray_ROOTcLcLTImpProxylEboolgR(Long_t size, void *p);
   static void delete_ROOTcLcLTImpProxylEboolgR(void *p);
   static void deleteArray_ROOTcLcLTImpProxylEboolgR(void *p);
   static void destruct_ROOTcLcLTImpProxylEboolgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::TImpProxy<bool>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::TImpProxy<bool>) == sizeof(::ROOT::Shadow::ROOT::TImpProxylEboolgR));
      ::ROOT::TImpProxy<bool> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::TImpProxy<bool>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::TImpProxy<bool>", "include/TBranchProxy.h", 436,
                  typeid(::ROOT::TImpProxy<bool>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLTImpProxylEboolgR_ShowMembers, &ROOTcLcLTImpProxylEboolgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::TImpProxy<bool>) );
      instance.SetNew(&new_ROOTcLcLTImpProxylEboolgR);
      instance.SetNewArray(&newArray_ROOTcLcLTImpProxylEboolgR);
      instance.SetDelete(&delete_ROOTcLcLTImpProxylEboolgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLTImpProxylEboolgR);
      instance.SetDestructor(&destruct_ROOTcLcLTImpProxylEboolgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::TImpProxy<bool>*)
   {
      return GenerateInitInstanceLocal((::ROOT::TImpProxy<bool>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::TImpProxy<bool>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLTImpProxylEboolgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TImpProxy<bool>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR_Dictionary();
   static void *new_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR(void *p);
   static void deleteArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR(void *p);
   static void destruct_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::TArrayProxy<ROOT::TArrayType<double,0> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::TArrayProxy<ROOT::TArrayType<double,0> >) == sizeof(::ROOT::Shadow::ROOT::TArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR));
      ::ROOT::TArrayProxy<ROOT::TArrayType<double,0> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::TArrayProxy<ROOT::TArrayType<double,0> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::TArrayProxy<ROOT::TArrayType<double,0> >", "include/TBranchProxy.h", 497,
                  typeid(::ROOT::TArrayProxy<ROOT::TArrayType<double,0> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR_ShowMembers, &ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::TArrayProxy<ROOT::TArrayType<double,0> >) );
      instance.SetNew(&new_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::TArrayProxy<ROOT::TArrayType<double,0> >*)
   {
      return GenerateInitInstanceLocal((::ROOT::TArrayProxy<ROOT::TArrayType<double,0> >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::TArrayProxy<ROOT::TArrayType<double,0> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TArrayProxy<ROOT::TArrayType<double,0> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR_Dictionary();
   static void *new_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR(void *p);
   static void deleteArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR(void *p);
   static void destruct_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::TArrayProxy<ROOT::TArrayType<float,0> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::TArrayProxy<ROOT::TArrayType<float,0> >) == sizeof(::ROOT::Shadow::ROOT::TArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR));
      ::ROOT::TArrayProxy<ROOT::TArrayType<float,0> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::TArrayProxy<ROOT::TArrayType<float,0> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::TArrayProxy<ROOT::TArrayType<float,0> >", "include/TBranchProxy.h", 497,
                  typeid(::ROOT::TArrayProxy<ROOT::TArrayType<float,0> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR_ShowMembers, &ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::TArrayProxy<ROOT::TArrayType<float,0> >) );
      instance.SetNew(&new_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::TArrayProxy<ROOT::TArrayType<float,0> >*)
   {
      return GenerateInitInstanceLocal((::ROOT::TArrayProxy<ROOT::TArrayType<float,0> >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::TArrayProxy<ROOT::TArrayType<float,0> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TArrayProxy<ROOT::TArrayType<float,0> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR_Dictionary();
   static void *new_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR(void *p);
   static void deleteArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR(void *p);
   static void destruct_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >) == sizeof(::ROOT::Shadow::ROOT::TArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR));
      ::ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >", "include/TBranchProxy.h", 497,
                  typeid(::ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR_ShowMembers, &ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >) );
      instance.SetNew(&new_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >*)
   {
      return GenerateInitInstanceLocal((::ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR_Dictionary();
   static void *new_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR(void *p);
   static void deleteArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR(void *p);
   static void destruct_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >) == sizeof(::ROOT::Shadow::ROOT::TArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR));
      ::ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >", "include/TBranchProxy.h", 497,
                  typeid(::ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR_ShowMembers, &ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >) );
      instance.SetNew(&new_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >*)
   {
      return GenerateInitInstanceLocal((::ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEULong64_tcO0gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEULong64_tcO0gRsPgR_Dictionary();
   static void *new_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEULong64_tcO0gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEULong64_tcO0gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEULong64_tcO0gRsPgR(void *p);
   static void deleteArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEULong64_tcO0gRsPgR(void *p);
   static void destruct_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEULong64_tcO0gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::TArrayProxy<ROOT::TArrayType<ULong64_t,0> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::TArrayProxy<ROOT::TArrayType<ULong64_t,0> >) == sizeof(::ROOT::Shadow::ROOT::TArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR));
      ::ROOT::TArrayProxy<ROOT::TArrayType<ULong64_t,0> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::TArrayProxy<ROOT::TArrayType<ULong64_t,0> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::TArrayProxy<ROOT::TArrayType<ULong64_t,0> >", "include/TBranchProxy.h", 497,
                  typeid(::ROOT::TArrayProxy<ROOT::TArrayType<ULong64_t,0> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEULong64_tcO0gRsPgR_ShowMembers, &ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEULong64_tcO0gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::TArrayProxy<ROOT::TArrayType<ULong64_t,0> >) );
      instance.SetNew(&new_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEULong64_tcO0gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEULong64_tcO0gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEULong64_tcO0gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEULong64_tcO0gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEULong64_tcO0gRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::TArrayProxy<ROOT::TArrayType<ULong64_t,0> >*)
   {
      return GenerateInitInstanceLocal((::ROOT::TArrayProxy<ROOT::TArrayType<ULong64_t,0> >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::TArrayProxy<ROOT::TArrayType<ULong64_t,0> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEULong64_tcO0gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TArrayProxy<ROOT::TArrayType<ULong64_t,0> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR_Dictionary();
   static void *new_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR(void *p);
   static void deleteArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR(void *p);
   static void destruct_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >) == sizeof(::ROOT::Shadow::ROOT::TArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR));
      ::ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >", "include/TBranchProxy.h", 497,
                  typeid(::ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR_ShowMembers, &ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >) );
      instance.SetNew(&new_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >*)
   {
      return GenerateInitInstanceLocal((::ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR_Dictionary();
   static void *new_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR(void *p);
   static void deleteArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR(void *p);
   static void destruct_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >) == sizeof(::ROOT::Shadow::ROOT::TArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR));
      ::ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >", "include/TBranchProxy.h", 497,
                  typeid(::ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR_ShowMembers, &ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >) );
      instance.SetNew(&new_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >*)
   {
      return GenerateInitInstanceLocal((::ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR_Dictionary();
   static void *new_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR(void *p);
   static void deleteArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR(void *p);
   static void destruct_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::TArrayProxy<ROOT::TArrayType<int,0> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::TArrayProxy<ROOT::TArrayType<int,0> >) == sizeof(::ROOT::Shadow::ROOT::TArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR));
      ::ROOT::TArrayProxy<ROOT::TArrayType<int,0> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::TArrayProxy<ROOT::TArrayType<int,0> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::TArrayProxy<ROOT::TArrayType<int,0> >", "include/TBranchProxy.h", 497,
                  typeid(::ROOT::TArrayProxy<ROOT::TArrayType<int,0> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR_ShowMembers, &ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::TArrayProxy<ROOT::TArrayType<int,0> >) );
      instance.SetNew(&new_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::TArrayProxy<ROOT::TArrayType<int,0> >*)
   {
      return GenerateInitInstanceLocal((::ROOT::TArrayProxy<ROOT::TArrayType<int,0> >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::TArrayProxy<ROOT::TArrayType<int,0> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TArrayProxy<ROOT::TArrayType<int,0> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR_Dictionary();
   static void *new_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR(void *p);
   static void deleteArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR(void *p);
   static void destruct_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::TArrayProxy<ROOT::TArrayType<long,0> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::TArrayProxy<ROOT::TArrayType<long,0> >) == sizeof(::ROOT::Shadow::ROOT::TArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR));
      ::ROOT::TArrayProxy<ROOT::TArrayType<long,0> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::TArrayProxy<ROOT::TArrayType<long,0> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::TArrayProxy<ROOT::TArrayType<long,0> >", "include/TBranchProxy.h", 497,
                  typeid(::ROOT::TArrayProxy<ROOT::TArrayType<long,0> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR_ShowMembers, &ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::TArrayProxy<ROOT::TArrayType<long,0> >) );
      instance.SetNew(&new_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::TArrayProxy<ROOT::TArrayType<long,0> >*)
   {
      return GenerateInitInstanceLocal((::ROOT::TArrayProxy<ROOT::TArrayType<long,0> >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::TArrayProxy<ROOT::TArrayType<long,0> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TArrayProxy<ROOT::TArrayType<long,0> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelELong64_tcO0gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelELong64_tcO0gRsPgR_Dictionary();
   static void *new_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelELong64_tcO0gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelELong64_tcO0gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelELong64_tcO0gRsPgR(void *p);
   static void deleteArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelELong64_tcO0gRsPgR(void *p);
   static void destruct_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelELong64_tcO0gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::TArrayProxy<ROOT::TArrayType<Long64_t,0> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::TArrayProxy<ROOT::TArrayType<Long64_t,0> >) == sizeof(::ROOT::Shadow::ROOT::TArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR));
      ::ROOT::TArrayProxy<ROOT::TArrayType<Long64_t,0> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::TArrayProxy<ROOT::TArrayType<Long64_t,0> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::TArrayProxy<ROOT::TArrayType<Long64_t,0> >", "include/TBranchProxy.h", 497,
                  typeid(::ROOT::TArrayProxy<ROOT::TArrayType<Long64_t,0> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelELong64_tcO0gRsPgR_ShowMembers, &ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelELong64_tcO0gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::TArrayProxy<ROOT::TArrayType<Long64_t,0> >) );
      instance.SetNew(&new_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelELong64_tcO0gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelELong64_tcO0gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelELong64_tcO0gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelELong64_tcO0gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelELong64_tcO0gRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::TArrayProxy<ROOT::TArrayType<Long64_t,0> >*)
   {
      return GenerateInitInstanceLocal((::ROOT::TArrayProxy<ROOT::TArrayType<Long64_t,0> >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::TArrayProxy<ROOT::TArrayType<Long64_t,0> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelELong64_tcO0gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TArrayProxy<ROOT::TArrayType<Long64_t,0> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR_Dictionary();
   static void *new_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR(void *p);
   static void deleteArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR(void *p);
   static void destruct_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >) == sizeof(::ROOT::Shadow::ROOT::TArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR));
      ::ROOT::TArrayProxy<ROOT::TArrayType<bool,0> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >", "include/TBranchProxy.h", 497,
                  typeid(::ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR_ShowMembers, &ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >) );
      instance.SetNew(&new_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >*)
   {
      return GenerateInitInstanceLocal((::ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLTClaImpProxylEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLTClaImpProxylEdoublegR_Dictionary();
   static void *new_ROOTcLcLTClaImpProxylEdoublegR(void *p = 0);
   static void *newArray_ROOTcLcLTClaImpProxylEdoublegR(Long_t size, void *p);
   static void delete_ROOTcLcLTClaImpProxylEdoublegR(void *p);
   static void deleteArray_ROOTcLcLTClaImpProxylEdoublegR(void *p);
   static void destruct_ROOTcLcLTClaImpProxylEdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::TClaImpProxy<double>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::TClaImpProxy<double>) == sizeof(::ROOT::Shadow::ROOT::TClaImpProxylEdoublegR));
      ::ROOT::TClaImpProxy<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::TClaImpProxy<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::TClaImpProxy<double>", "include/TBranchProxy.h", 535,
                  typeid(::ROOT::TClaImpProxy<double>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLTClaImpProxylEdoublegR_ShowMembers, &ROOTcLcLTClaImpProxylEdoublegR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::TClaImpProxy<double>) );
      instance.SetNew(&new_ROOTcLcLTClaImpProxylEdoublegR);
      instance.SetNewArray(&newArray_ROOTcLcLTClaImpProxylEdoublegR);
      instance.SetDelete(&delete_ROOTcLcLTClaImpProxylEdoublegR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLTClaImpProxylEdoublegR);
      instance.SetDestructor(&destruct_ROOTcLcLTClaImpProxylEdoublegR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::TClaImpProxy<double>*)
   {
      return GenerateInitInstanceLocal((::ROOT::TClaImpProxy<double>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::TClaImpProxy<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLTClaImpProxylEdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TClaImpProxy<double>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLTClaImpProxylEfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLTClaImpProxylEfloatgR_Dictionary();
   static void *new_ROOTcLcLTClaImpProxylEfloatgR(void *p = 0);
   static void *newArray_ROOTcLcLTClaImpProxylEfloatgR(Long_t size, void *p);
   static void delete_ROOTcLcLTClaImpProxylEfloatgR(void *p);
   static void deleteArray_ROOTcLcLTClaImpProxylEfloatgR(void *p);
   static void destruct_ROOTcLcLTClaImpProxylEfloatgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::TClaImpProxy<float>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::TClaImpProxy<float>) == sizeof(::ROOT::Shadow::ROOT::TClaImpProxylEfloatgR));
      ::ROOT::TClaImpProxy<float> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::TClaImpProxy<float>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::TClaImpProxy<float>", "include/TBranchProxy.h", 535,
                  typeid(::ROOT::TClaImpProxy<float>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLTClaImpProxylEfloatgR_ShowMembers, &ROOTcLcLTClaImpProxylEfloatgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::TClaImpProxy<float>) );
      instance.SetNew(&new_ROOTcLcLTClaImpProxylEfloatgR);
      instance.SetNewArray(&newArray_ROOTcLcLTClaImpProxylEfloatgR);
      instance.SetDelete(&delete_ROOTcLcLTClaImpProxylEfloatgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLTClaImpProxylEfloatgR);
      instance.SetDestructor(&destruct_ROOTcLcLTClaImpProxylEfloatgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::TClaImpProxy<float>*)
   {
      return GenerateInitInstanceLocal((::ROOT::TClaImpProxy<float>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::TClaImpProxy<float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLTClaImpProxylEfloatgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TClaImpProxy<float>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLTClaImpProxylEunsignedsPintgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLTClaImpProxylEunsignedsPintgR_Dictionary();
   static void *new_ROOTcLcLTClaImpProxylEunsignedsPintgR(void *p = 0);
   static void *newArray_ROOTcLcLTClaImpProxylEunsignedsPintgR(Long_t size, void *p);
   static void delete_ROOTcLcLTClaImpProxylEunsignedsPintgR(void *p);
   static void deleteArray_ROOTcLcLTClaImpProxylEunsignedsPintgR(void *p);
   static void destruct_ROOTcLcLTClaImpProxylEunsignedsPintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::TClaImpProxy<unsigned int>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::TClaImpProxy<unsigned int>) == sizeof(::ROOT::Shadow::ROOT::TClaImpProxylEunsignedsPintgR));
      ::ROOT::TClaImpProxy<unsigned int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::TClaImpProxy<unsigned int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::TClaImpProxy<unsigned int>", "include/TBranchProxy.h", 535,
                  typeid(::ROOT::TClaImpProxy<unsigned int>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLTClaImpProxylEunsignedsPintgR_ShowMembers, &ROOTcLcLTClaImpProxylEunsignedsPintgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::TClaImpProxy<unsigned int>) );
      instance.SetNew(&new_ROOTcLcLTClaImpProxylEunsignedsPintgR);
      instance.SetNewArray(&newArray_ROOTcLcLTClaImpProxylEunsignedsPintgR);
      instance.SetDelete(&delete_ROOTcLcLTClaImpProxylEunsignedsPintgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLTClaImpProxylEunsignedsPintgR);
      instance.SetDestructor(&destruct_ROOTcLcLTClaImpProxylEunsignedsPintgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::TClaImpProxy<unsigned int>*)
   {
      return GenerateInitInstanceLocal((::ROOT::TClaImpProxy<unsigned int>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::TClaImpProxy<unsigned int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLTClaImpProxylEunsignedsPintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TClaImpProxy<unsigned int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLTClaImpProxylEunsignedsPlonggR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLTClaImpProxylEunsignedsPlonggR_Dictionary();
   static void *new_ROOTcLcLTClaImpProxylEunsignedsPlonggR(void *p = 0);
   static void *newArray_ROOTcLcLTClaImpProxylEunsignedsPlonggR(Long_t size, void *p);
   static void delete_ROOTcLcLTClaImpProxylEunsignedsPlonggR(void *p);
   static void deleteArray_ROOTcLcLTClaImpProxylEunsignedsPlonggR(void *p);
   static void destruct_ROOTcLcLTClaImpProxylEunsignedsPlonggR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::TClaImpProxy<unsigned long>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::TClaImpProxy<unsigned long>) == sizeof(::ROOT::Shadow::ROOT::TClaImpProxylEunsignedsPlonggR));
      ::ROOT::TClaImpProxy<unsigned long> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::TClaImpProxy<unsigned long>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::TClaImpProxy<unsigned long>", "include/TBranchProxy.h", 535,
                  typeid(::ROOT::TClaImpProxy<unsigned long>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLTClaImpProxylEunsignedsPlonggR_ShowMembers, &ROOTcLcLTClaImpProxylEunsignedsPlonggR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::TClaImpProxy<unsigned long>) );
      instance.SetNew(&new_ROOTcLcLTClaImpProxylEunsignedsPlonggR);
      instance.SetNewArray(&newArray_ROOTcLcLTClaImpProxylEunsignedsPlonggR);
      instance.SetDelete(&delete_ROOTcLcLTClaImpProxylEunsignedsPlonggR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLTClaImpProxylEunsignedsPlonggR);
      instance.SetDestructor(&destruct_ROOTcLcLTClaImpProxylEunsignedsPlonggR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::TClaImpProxy<unsigned long>*)
   {
      return GenerateInitInstanceLocal((::ROOT::TClaImpProxy<unsigned long>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::TClaImpProxy<unsigned long>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLTClaImpProxylEunsignedsPlonggR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TClaImpProxy<unsigned long>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLTClaImpProxylEULong64_tgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLTClaImpProxylEULong64_tgR_Dictionary();
   static void *new_ROOTcLcLTClaImpProxylEULong64_tgR(void *p = 0);
   static void *newArray_ROOTcLcLTClaImpProxylEULong64_tgR(Long_t size, void *p);
   static void delete_ROOTcLcLTClaImpProxylEULong64_tgR(void *p);
   static void deleteArray_ROOTcLcLTClaImpProxylEULong64_tgR(void *p);
   static void destruct_ROOTcLcLTClaImpProxylEULong64_tgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::TClaImpProxy<ULong64_t>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::TClaImpProxy<ULong64_t>) == sizeof(::ROOT::Shadow::ROOT::TClaImpProxylEunsignedsPlongsPlonggR));
      ::ROOT::TClaImpProxy<ULong64_t> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::TClaImpProxy<ULong64_t>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::TClaImpProxy<ULong64_t>", "include/TBranchProxy.h", 535,
                  typeid(::ROOT::TClaImpProxy<ULong64_t>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLTClaImpProxylEULong64_tgR_ShowMembers, &ROOTcLcLTClaImpProxylEULong64_tgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::TClaImpProxy<ULong64_t>) );
      instance.SetNew(&new_ROOTcLcLTClaImpProxylEULong64_tgR);
      instance.SetNewArray(&newArray_ROOTcLcLTClaImpProxylEULong64_tgR);
      instance.SetDelete(&delete_ROOTcLcLTClaImpProxylEULong64_tgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLTClaImpProxylEULong64_tgR);
      instance.SetDestructor(&destruct_ROOTcLcLTClaImpProxylEULong64_tgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::TClaImpProxy<ULong64_t>*)
   {
      return GenerateInitInstanceLocal((::ROOT::TClaImpProxy<ULong64_t>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::TClaImpProxy<ULong64_t>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLTClaImpProxylEULong64_tgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TClaImpProxy<ULong64_t>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLTClaImpProxylEunsignedsPshortgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLTClaImpProxylEunsignedsPshortgR_Dictionary();
   static void *new_ROOTcLcLTClaImpProxylEunsignedsPshortgR(void *p = 0);
   static void *newArray_ROOTcLcLTClaImpProxylEunsignedsPshortgR(Long_t size, void *p);
   static void delete_ROOTcLcLTClaImpProxylEunsignedsPshortgR(void *p);
   static void deleteArray_ROOTcLcLTClaImpProxylEunsignedsPshortgR(void *p);
   static void destruct_ROOTcLcLTClaImpProxylEunsignedsPshortgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::TClaImpProxy<unsigned short>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::TClaImpProxy<unsigned short>) == sizeof(::ROOT::Shadow::ROOT::TClaImpProxylEunsignedsPshortgR));
      ::ROOT::TClaImpProxy<unsigned short> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::TClaImpProxy<unsigned short>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::TClaImpProxy<unsigned short>", "include/TBranchProxy.h", 535,
                  typeid(::ROOT::TClaImpProxy<unsigned short>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLTClaImpProxylEunsignedsPshortgR_ShowMembers, &ROOTcLcLTClaImpProxylEunsignedsPshortgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::TClaImpProxy<unsigned short>) );
      instance.SetNew(&new_ROOTcLcLTClaImpProxylEunsignedsPshortgR);
      instance.SetNewArray(&newArray_ROOTcLcLTClaImpProxylEunsignedsPshortgR);
      instance.SetDelete(&delete_ROOTcLcLTClaImpProxylEunsignedsPshortgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLTClaImpProxylEunsignedsPshortgR);
      instance.SetDestructor(&destruct_ROOTcLcLTClaImpProxylEunsignedsPshortgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::TClaImpProxy<unsigned short>*)
   {
      return GenerateInitInstanceLocal((::ROOT::TClaImpProxy<unsigned short>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::TClaImpProxy<unsigned short>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLTClaImpProxylEunsignedsPshortgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TClaImpProxy<unsigned short>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLTClaImpProxylEunsignedsPchargR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLTClaImpProxylEunsignedsPchargR_Dictionary();
   static void *new_ROOTcLcLTClaImpProxylEunsignedsPchargR(void *p = 0);
   static void *newArray_ROOTcLcLTClaImpProxylEunsignedsPchargR(Long_t size, void *p);
   static void delete_ROOTcLcLTClaImpProxylEunsignedsPchargR(void *p);
   static void deleteArray_ROOTcLcLTClaImpProxylEunsignedsPchargR(void *p);
   static void destruct_ROOTcLcLTClaImpProxylEunsignedsPchargR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::TClaImpProxy<unsigned char>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::TClaImpProxy<unsigned char>) == sizeof(::ROOT::Shadow::ROOT::TClaImpProxylEunsignedsPchargR));
      ::ROOT::TClaImpProxy<unsigned char> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::TClaImpProxy<unsigned char>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::TClaImpProxy<unsigned char>", "include/TBranchProxy.h", 535,
                  typeid(::ROOT::TClaImpProxy<unsigned char>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLTClaImpProxylEunsignedsPchargR_ShowMembers, &ROOTcLcLTClaImpProxylEunsignedsPchargR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::TClaImpProxy<unsigned char>) );
      instance.SetNew(&new_ROOTcLcLTClaImpProxylEunsignedsPchargR);
      instance.SetNewArray(&newArray_ROOTcLcLTClaImpProxylEunsignedsPchargR);
      instance.SetDelete(&delete_ROOTcLcLTClaImpProxylEunsignedsPchargR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLTClaImpProxylEunsignedsPchargR);
      instance.SetDestructor(&destruct_ROOTcLcLTClaImpProxylEunsignedsPchargR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::TClaImpProxy<unsigned char>*)
   {
      return GenerateInitInstanceLocal((::ROOT::TClaImpProxy<unsigned char>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::TClaImpProxy<unsigned char>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLTClaImpProxylEunsignedsPchargR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TClaImpProxy<unsigned char>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLTClaImpProxylEintgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLTClaImpProxylEintgR_Dictionary();
   static void *new_ROOTcLcLTClaImpProxylEintgR(void *p = 0);
   static void *newArray_ROOTcLcLTClaImpProxylEintgR(Long_t size, void *p);
   static void delete_ROOTcLcLTClaImpProxylEintgR(void *p);
   static void deleteArray_ROOTcLcLTClaImpProxylEintgR(void *p);
   static void destruct_ROOTcLcLTClaImpProxylEintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::TClaImpProxy<int>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::TClaImpProxy<int>) == sizeof(::ROOT::Shadow::ROOT::TClaImpProxylEintgR));
      ::ROOT::TClaImpProxy<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::TClaImpProxy<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::TClaImpProxy<int>", "include/TBranchProxy.h", 535,
                  typeid(::ROOT::TClaImpProxy<int>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLTClaImpProxylEintgR_ShowMembers, &ROOTcLcLTClaImpProxylEintgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::TClaImpProxy<int>) );
      instance.SetNew(&new_ROOTcLcLTClaImpProxylEintgR);
      instance.SetNewArray(&newArray_ROOTcLcLTClaImpProxylEintgR);
      instance.SetDelete(&delete_ROOTcLcLTClaImpProxylEintgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLTClaImpProxylEintgR);
      instance.SetDestructor(&destruct_ROOTcLcLTClaImpProxylEintgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::TClaImpProxy<int>*)
   {
      return GenerateInitInstanceLocal((::ROOT::TClaImpProxy<int>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::TClaImpProxy<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLTClaImpProxylEintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TClaImpProxy<int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLTClaImpProxylElonggR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLTClaImpProxylElonggR_Dictionary();
   static void *new_ROOTcLcLTClaImpProxylElonggR(void *p = 0);
   static void *newArray_ROOTcLcLTClaImpProxylElonggR(Long_t size, void *p);
   static void delete_ROOTcLcLTClaImpProxylElonggR(void *p);
   static void deleteArray_ROOTcLcLTClaImpProxylElonggR(void *p);
   static void destruct_ROOTcLcLTClaImpProxylElonggR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::TClaImpProxy<long>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::TClaImpProxy<long>) == sizeof(::ROOT::Shadow::ROOT::TClaImpProxylElonggR));
      ::ROOT::TClaImpProxy<long> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::TClaImpProxy<long>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::TClaImpProxy<long>", "include/TBranchProxy.h", 535,
                  typeid(::ROOT::TClaImpProxy<long>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLTClaImpProxylElonggR_ShowMembers, &ROOTcLcLTClaImpProxylElonggR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::TClaImpProxy<long>) );
      instance.SetNew(&new_ROOTcLcLTClaImpProxylElonggR);
      instance.SetNewArray(&newArray_ROOTcLcLTClaImpProxylElonggR);
      instance.SetDelete(&delete_ROOTcLcLTClaImpProxylElonggR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLTClaImpProxylElonggR);
      instance.SetDestructor(&destruct_ROOTcLcLTClaImpProxylElonggR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::TClaImpProxy<long>*)
   {
      return GenerateInitInstanceLocal((::ROOT::TClaImpProxy<long>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::TClaImpProxy<long>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLTClaImpProxylElonggR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TClaImpProxy<long>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLTClaImpProxylELong64_tgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLTClaImpProxylELong64_tgR_Dictionary();
   static void *new_ROOTcLcLTClaImpProxylELong64_tgR(void *p = 0);
   static void *newArray_ROOTcLcLTClaImpProxylELong64_tgR(Long_t size, void *p);
   static void delete_ROOTcLcLTClaImpProxylELong64_tgR(void *p);
   static void deleteArray_ROOTcLcLTClaImpProxylELong64_tgR(void *p);
   static void destruct_ROOTcLcLTClaImpProxylELong64_tgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::TClaImpProxy<Long64_t>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::TClaImpProxy<Long64_t>) == sizeof(::ROOT::Shadow::ROOT::TClaImpProxylElongsPlonggR));
      ::ROOT::TClaImpProxy<Long64_t> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::TClaImpProxy<Long64_t>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::TClaImpProxy<Long64_t>", "include/TBranchProxy.h", 535,
                  typeid(::ROOT::TClaImpProxy<Long64_t>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLTClaImpProxylELong64_tgR_ShowMembers, &ROOTcLcLTClaImpProxylELong64_tgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::TClaImpProxy<Long64_t>) );
      instance.SetNew(&new_ROOTcLcLTClaImpProxylELong64_tgR);
      instance.SetNewArray(&newArray_ROOTcLcLTClaImpProxylELong64_tgR);
      instance.SetDelete(&delete_ROOTcLcLTClaImpProxylELong64_tgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLTClaImpProxylELong64_tgR);
      instance.SetDestructor(&destruct_ROOTcLcLTClaImpProxylELong64_tgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::TClaImpProxy<Long64_t>*)
   {
      return GenerateInitInstanceLocal((::ROOT::TClaImpProxy<Long64_t>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::TClaImpProxy<Long64_t>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLTClaImpProxylELong64_tgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TClaImpProxy<Long64_t>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLTClaImpProxylEshortgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLTClaImpProxylEshortgR_Dictionary();
   static void *new_ROOTcLcLTClaImpProxylEshortgR(void *p = 0);
   static void *newArray_ROOTcLcLTClaImpProxylEshortgR(Long_t size, void *p);
   static void delete_ROOTcLcLTClaImpProxylEshortgR(void *p);
   static void deleteArray_ROOTcLcLTClaImpProxylEshortgR(void *p);
   static void destruct_ROOTcLcLTClaImpProxylEshortgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::TClaImpProxy<short>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::TClaImpProxy<short>) == sizeof(::ROOT::Shadow::ROOT::TClaImpProxylEshortgR));
      ::ROOT::TClaImpProxy<short> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::TClaImpProxy<short>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::TClaImpProxy<short>", "include/TBranchProxy.h", 535,
                  typeid(::ROOT::TClaImpProxy<short>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLTClaImpProxylEshortgR_ShowMembers, &ROOTcLcLTClaImpProxylEshortgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::TClaImpProxy<short>) );
      instance.SetNew(&new_ROOTcLcLTClaImpProxylEshortgR);
      instance.SetNewArray(&newArray_ROOTcLcLTClaImpProxylEshortgR);
      instance.SetDelete(&delete_ROOTcLcLTClaImpProxylEshortgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLTClaImpProxylEshortgR);
      instance.SetDestructor(&destruct_ROOTcLcLTClaImpProxylEshortgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::TClaImpProxy<short>*)
   {
      return GenerateInitInstanceLocal((::ROOT::TClaImpProxy<short>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::TClaImpProxy<short>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLTClaImpProxylEshortgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TClaImpProxy<short>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLTClaImpProxylEchargR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLTClaImpProxylEchargR_Dictionary();
   static void *new_ROOTcLcLTClaImpProxylEchargR(void *p = 0);
   static void *newArray_ROOTcLcLTClaImpProxylEchargR(Long_t size, void *p);
   static void delete_ROOTcLcLTClaImpProxylEchargR(void *p);
   static void deleteArray_ROOTcLcLTClaImpProxylEchargR(void *p);
   static void destruct_ROOTcLcLTClaImpProxylEchargR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::TClaImpProxy<char>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::TClaImpProxy<char>) == sizeof(::ROOT::Shadow::ROOT::TClaImpProxylEchargR));
      ::ROOT::TClaImpProxy<char> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::TClaImpProxy<char>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::TClaImpProxy<char>", "include/TBranchProxy.h", 535,
                  typeid(::ROOT::TClaImpProxy<char>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLTClaImpProxylEchargR_ShowMembers, &ROOTcLcLTClaImpProxylEchargR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::TClaImpProxy<char>) );
      instance.SetNew(&new_ROOTcLcLTClaImpProxylEchargR);
      instance.SetNewArray(&newArray_ROOTcLcLTClaImpProxylEchargR);
      instance.SetDelete(&delete_ROOTcLcLTClaImpProxylEchargR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLTClaImpProxylEchargR);
      instance.SetDestructor(&destruct_ROOTcLcLTClaImpProxylEchargR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::TClaImpProxy<char>*)
   {
      return GenerateInitInstanceLocal((::ROOT::TClaImpProxy<char>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::TClaImpProxy<char>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLTClaImpProxylEchargR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TClaImpProxy<char>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLTClaImpProxylEboolgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLTClaImpProxylEboolgR_Dictionary();
   static void *new_ROOTcLcLTClaImpProxylEboolgR(void *p = 0);
   static void *newArray_ROOTcLcLTClaImpProxylEboolgR(Long_t size, void *p);
   static void delete_ROOTcLcLTClaImpProxylEboolgR(void *p);
   static void deleteArray_ROOTcLcLTClaImpProxylEboolgR(void *p);
   static void destruct_ROOTcLcLTClaImpProxylEboolgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::TClaImpProxy<bool>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::TClaImpProxy<bool>) == sizeof(::ROOT::Shadow::ROOT::TClaImpProxylEboolgR));
      ::ROOT::TClaImpProxy<bool> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::TClaImpProxy<bool>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::TClaImpProxy<bool>", "include/TBranchProxy.h", 535,
                  typeid(::ROOT::TClaImpProxy<bool>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLTClaImpProxylEboolgR_ShowMembers, &ROOTcLcLTClaImpProxylEboolgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::TClaImpProxy<bool>) );
      instance.SetNew(&new_ROOTcLcLTClaImpProxylEboolgR);
      instance.SetNewArray(&newArray_ROOTcLcLTClaImpProxylEboolgR);
      instance.SetDelete(&delete_ROOTcLcLTClaImpProxylEboolgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLTClaImpProxylEboolgR);
      instance.SetDestructor(&destruct_ROOTcLcLTClaImpProxylEboolgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::TClaImpProxy<bool>*)
   {
      return GenerateInitInstanceLocal((::ROOT::TClaImpProxy<bool>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::TClaImpProxy<bool>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLTClaImpProxylEboolgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TClaImpProxy<bool>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR_Dictionary();
   static void *new_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR(void *p);
   static void deleteArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR(void *p);
   static void destruct_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> >) == sizeof(::ROOT::Shadow::ROOT::TClaArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR));
      ::ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> >", "include/TBranchProxy.h", 638,
                  typeid(::ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR_ShowMembers, &ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> >) );
      instance.SetNew(&new_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> >*)
   {
      return GenerateInitInstanceLocal((::ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR_Dictionary();
   static void *new_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR(void *p);
   static void deleteArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR(void *p);
   static void destruct_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> >) == sizeof(::ROOT::Shadow::ROOT::TClaArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR));
      ::ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> >", "include/TBranchProxy.h", 638,
                  typeid(::ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR_ShowMembers, &ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> >) );
      instance.SetNew(&new_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> >*)
   {
      return GenerateInitInstanceLocal((::ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR_Dictionary();
   static void *new_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR(void *p);
   static void deleteArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR(void *p);
   static void destruct_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >) == sizeof(::ROOT::Shadow::ROOT::TClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR));
      ::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >", "include/TBranchProxy.h", 638,
                  typeid(::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR_ShowMembers, &ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >) );
      instance.SetNew(&new_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >*)
   {
      return GenerateInitInstanceLocal((::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR_Dictionary();
   static void *new_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR(void *p);
   static void deleteArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR(void *p);
   static void destruct_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >) == sizeof(::ROOT::Shadow::ROOT::TClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR));
      ::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >", "include/TBranchProxy.h", 638,
                  typeid(::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR_ShowMembers, &ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >) );
      instance.SetNew(&new_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >*)
   {
      return GenerateInitInstanceLocal((::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEULong64_tcO0gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEULong64_tcO0gRsPgR_Dictionary();
   static void *new_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEULong64_tcO0gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEULong64_tcO0gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEULong64_tcO0gRsPgR(void *p);
   static void deleteArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEULong64_tcO0gRsPgR(void *p);
   static void destruct_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEULong64_tcO0gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::TClaArrayProxy<ROOT::TArrayType<ULong64_t,0> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::TClaArrayProxy<ROOT::TArrayType<ULong64_t,0> >) == sizeof(::ROOT::Shadow::ROOT::TClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR));
      ::ROOT::TClaArrayProxy<ROOT::TArrayType<ULong64_t,0> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::TClaArrayProxy<ROOT::TArrayType<ULong64_t,0> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::TClaArrayProxy<ROOT::TArrayType<ULong64_t,0> >", "include/TBranchProxy.h", 638,
                  typeid(::ROOT::TClaArrayProxy<ROOT::TArrayType<ULong64_t,0> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEULong64_tcO0gRsPgR_ShowMembers, &ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEULong64_tcO0gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::TClaArrayProxy<ROOT::TArrayType<ULong64_t,0> >) );
      instance.SetNew(&new_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEULong64_tcO0gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEULong64_tcO0gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEULong64_tcO0gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEULong64_tcO0gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEULong64_tcO0gRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::TClaArrayProxy<ROOT::TArrayType<ULong64_t,0> >*)
   {
      return GenerateInitInstanceLocal((::ROOT::TClaArrayProxy<ROOT::TArrayType<ULong64_t,0> >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::TClaArrayProxy<ROOT::TArrayType<ULong64_t,0> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEULong64_tcO0gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TClaArrayProxy<ROOT::TArrayType<ULong64_t,0> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR_Dictionary();
   static void *new_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR(void *p);
   static void deleteArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR(void *p);
   static void destruct_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >) == sizeof(::ROOT::Shadow::ROOT::TClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR));
      ::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >", "include/TBranchProxy.h", 638,
                  typeid(::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR_ShowMembers, &ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >) );
      instance.SetNew(&new_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >*)
   {
      return GenerateInitInstanceLocal((::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR_Dictionary();
   static void *new_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR(void *p);
   static void deleteArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR(void *p);
   static void destruct_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >) == sizeof(::ROOT::Shadow::ROOT::TClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR));
      ::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >", "include/TBranchProxy.h", 638,
                  typeid(::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR_ShowMembers, &ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >) );
      instance.SetNew(&new_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >*)
   {
      return GenerateInitInstanceLocal((::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR_Dictionary();
   static void *new_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR(void *p);
   static void deleteArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR(void *p);
   static void destruct_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >) == sizeof(::ROOT::Shadow::ROOT::TClaArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR));
      ::ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >", "include/TBranchProxy.h", 638,
                  typeid(::ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR_ShowMembers, &ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >) );
      instance.SetNew(&new_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >*)
   {
      return GenerateInitInstanceLocal((::ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR_Dictionary();
   static void *new_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR(void *p);
   static void deleteArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR(void *p);
   static void destruct_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >) == sizeof(::ROOT::Shadow::ROOT::TClaArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR));
      ::ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >", "include/TBranchProxy.h", 638,
                  typeid(::ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR_ShowMembers, &ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >) );
      instance.SetNew(&new_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >*)
   {
      return GenerateInitInstanceLocal((::ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelELong64_tcO0gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelELong64_tcO0gRsPgR_Dictionary();
   static void *new_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelELong64_tcO0gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelELong64_tcO0gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelELong64_tcO0gRsPgR(void *p);
   static void deleteArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelELong64_tcO0gRsPgR(void *p);
   static void destruct_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelELong64_tcO0gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::TClaArrayProxy<ROOT::TArrayType<Long64_t,0> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::TClaArrayProxy<ROOT::TArrayType<Long64_t,0> >) == sizeof(::ROOT::Shadow::ROOT::TClaArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR));
      ::ROOT::TClaArrayProxy<ROOT::TArrayType<Long64_t,0> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::TClaArrayProxy<ROOT::TArrayType<Long64_t,0> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::TClaArrayProxy<ROOT::TArrayType<Long64_t,0> >", "include/TBranchProxy.h", 638,
                  typeid(::ROOT::TClaArrayProxy<ROOT::TArrayType<Long64_t,0> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelELong64_tcO0gRsPgR_ShowMembers, &ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelELong64_tcO0gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::TClaArrayProxy<ROOT::TArrayType<Long64_t,0> >) );
      instance.SetNew(&new_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelELong64_tcO0gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelELong64_tcO0gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelELong64_tcO0gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelELong64_tcO0gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelELong64_tcO0gRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::TClaArrayProxy<ROOT::TArrayType<Long64_t,0> >*)
   {
      return GenerateInitInstanceLocal((::ROOT::TClaArrayProxy<ROOT::TArrayType<Long64_t,0> >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::TClaArrayProxy<ROOT::TArrayType<Long64_t,0> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelELong64_tcO0gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TClaArrayProxy<ROOT::TArrayType<Long64_t,0> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR_Dictionary();
   static void *new_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR(void *p);
   static void deleteArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR(void *p);
   static void destruct_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >) == sizeof(::ROOT::Shadow::ROOT::TClaArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR));
      ::ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >", "include/TBranchProxy.h", 638,
                  typeid(::ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR_ShowMembers, &ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >) );
      instance.SetNew(&new_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >*)
   {
      return GenerateInitInstanceLocal((::ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR_Dictionary();
   static void *new_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR(void *p);
   static void deleteArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR(void *p);
   static void destruct_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >) == sizeof(::ROOT::Shadow::ROOT::TClaArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR));
      ::ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >", "include/TBranchProxy.h", 638,
                  typeid(::ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR_ShowMembers, &ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >) );
      instance.SetNew(&new_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >*)
   {
      return GenerateInitInstanceLocal((::ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void TChainIndex_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TChainIndex(void *p = 0);
   static void *newArray_TChainIndex(Long_t size, void *p);
   static void delete_TChainIndex(void *p);
   static void deleteArray_TChainIndex(void *p);
   static void destruct_TChainIndex(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TChainIndex*)
   {
      ::TChainIndex *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TChainIndex >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TChainIndex", ::TChainIndex::Class_Version(), "include/TChainIndex.h", 40,
                  typeid(::TChainIndex), DefineBehavior(ptr, ptr),
                  &::TChainIndex::Dictionary, isa_proxy, 4,
                  sizeof(::TChainIndex) );
      instance.SetNew(&new_TChainIndex);
      instance.SetNewArray(&newArray_TChainIndex);
      instance.SetDelete(&delete_TChainIndex);
      instance.SetDeleteArray(&deleteArray_TChainIndex);
      instance.SetDestructor(&destruct_TChainIndex);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TChainIndex*)
   {
      return GenerateInitInstanceLocal((::TChainIndex*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TChainIndex*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TChainIndexcLcLTChainIndexEntry_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void TChainIndexcLcLTChainIndexEntry_Dictionary();
   static void *new_TChainIndexcLcLTChainIndexEntry(void *p = 0);
   static void *newArray_TChainIndexcLcLTChainIndexEntry(Long_t size, void *p);
   static void delete_TChainIndexcLcLTChainIndexEntry(void *p);
   static void deleteArray_TChainIndexcLcLTChainIndexEntry(void *p);
   static void destruct_TChainIndexcLcLTChainIndexEntry(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TChainIndex::TChainIndexEntry*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::TChainIndex::TChainIndexEntry) == sizeof(::ROOT::Shadow::TChainIndex::TChainIndexEntry));
      ::TChainIndex::TChainIndexEntry *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TChainIndex::TChainIndexEntry),0);
      static ::ROOT::TGenericClassInfo 
         instance("TChainIndex::TChainIndexEntry", "include/TChainIndex.h", 43,
                  typeid(::TChainIndex::TChainIndexEntry), DefineBehavior(ptr, ptr),
                  (void*)&TChainIndexcLcLTChainIndexEntry_ShowMembers, &TChainIndexcLcLTChainIndexEntry_Dictionary, isa_proxy, 4,
                  sizeof(::TChainIndex::TChainIndexEntry) );
      instance.SetNew(&new_TChainIndexcLcLTChainIndexEntry);
      instance.SetNewArray(&newArray_TChainIndexcLcLTChainIndexEntry);
      instance.SetDelete(&delete_TChainIndexcLcLTChainIndexEntry);
      instance.SetDeleteArray(&deleteArray_TChainIndexcLcLTChainIndexEntry);
      instance.SetDestructor(&destruct_TChainIndexcLcLTChainIndexEntry);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TChainIndex::TChainIndexEntry*)
   {
      return GenerateInitInstanceLocal((::TChainIndex::TChainIndexEntry*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TChainIndex::TChainIndexEntry*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TChainIndexcLcLTChainIndexEntry_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::TChainIndex::TChainIndexEntry*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void TFileDrawMap_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TFileDrawMap(void *p = 0);
   static void *newArray_TFileDrawMap(Long_t size, void *p);
   static void delete_TFileDrawMap(void *p);
   static void deleteArray_TFileDrawMap(void *p);
   static void destruct_TFileDrawMap(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TFileDrawMap*)
   {
      ::TFileDrawMap *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TFileDrawMap >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TFileDrawMap", ::TFileDrawMap::Class_Version(), "include/TFileDrawMap.h", 34,
                  typeid(::TFileDrawMap), DefineBehavior(ptr, ptr),
                  &::TFileDrawMap::Dictionary, isa_proxy, 4,
                  sizeof(::TFileDrawMap) );
      instance.SetNew(&new_TFileDrawMap);
      instance.SetNewArray(&newArray_TFileDrawMap);
      instance.SetDelete(&delete_TFileDrawMap);
      instance.SetDeleteArray(&deleteArray_TFileDrawMap);
      instance.SetDestructor(&destruct_TFileDrawMap);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TFileDrawMap*)
   {
      return GenerateInitInstanceLocal((::TFileDrawMap*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TFileDrawMap*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLTFriendProxyDescriptor_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_ROOTcLcLTFriendProxyDescriptor(void *p);
   static void deleteArray_ROOTcLcLTFriendProxyDescriptor(void *p);
   static void destruct_ROOTcLcLTFriendProxyDescriptor(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::TFriendProxyDescriptor*)
   {
      ::ROOT::TFriendProxyDescriptor *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ROOT::TFriendProxyDescriptor >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::TFriendProxyDescriptor", ::ROOT::TFriendProxyDescriptor::Class_Version(), "include/TFriendProxyDescriptor.h", 25,
                  typeid(::ROOT::TFriendProxyDescriptor), DefineBehavior(ptr, ptr),
                  &::ROOT::TFriendProxyDescriptor::Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::TFriendProxyDescriptor) );
      instance.SetDelete(&delete_ROOTcLcLTFriendProxyDescriptor);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLTFriendProxyDescriptor);
      instance.SetDestructor(&destruct_ROOTcLcLTFriendProxyDescriptor);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::TFriendProxyDescriptor*)
   {
      return GenerateInitInstanceLocal((::ROOT::TFriendProxyDescriptor*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::TFriendProxyDescriptor*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TTreeFormulaManager_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TTreeFormulaManager(void *p = 0);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TTreeFormulaManager*)
   {
      ::TTreeFormulaManager *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TTreeFormulaManager >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TTreeFormulaManager", ::TTreeFormulaManager::Class_Version(), "include/TTreeFormulaManager.h", 34,
                  typeid(::TTreeFormulaManager), DefineBehavior(ptr, ptr),
                  &::TTreeFormulaManager::Dictionary, isa_proxy, 0,
                  sizeof(::TTreeFormulaManager) );
      instance.SetNew(&new_TTreeFormulaManager);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TTreeFormulaManager*)
   {
      return GenerateInitInstanceLocal((::TTreeFormulaManager*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TTreeFormulaManager*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSelectorDraw_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TSelectorDraw(void *p = 0);
   static void *newArray_TSelectorDraw(Long_t size, void *p);
   static void delete_TSelectorDraw(void *p);
   static void deleteArray_TSelectorDraw(void *p);
   static void destruct_TSelectorDraw(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSelectorDraw*)
   {
      ::TSelectorDraw *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSelectorDraw >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSelectorDraw", ::TSelectorDraw::Class_Version(), "include/TSelectorDraw.h", 32,
                  typeid(::TSelectorDraw), DefineBehavior(ptr, ptr),
                  &::TSelectorDraw::Dictionary, isa_proxy, 0,
                  sizeof(::TSelectorDraw) );
      instance.SetNew(&new_TSelectorDraw);
      instance.SetNewArray(&newArray_TSelectorDraw);
      instance.SetDelete(&delete_TSelectorDraw);
      instance.SetDeleteArray(&deleteArray_TSelectorDraw);
      instance.SetDestructor(&destruct_TSelectorDraw);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSelectorDraw*)
   {
      return GenerateInitInstanceLocal((::TSelectorDraw*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSelectorDraw*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSelectorEntries_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TSelectorEntries(void *p = 0);
   static void *newArray_TSelectorEntries(Long_t size, void *p);
   static void delete_TSelectorEntries(void *p);
   static void deleteArray_TSelectorEntries(void *p);
   static void destruct_TSelectorEntries(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSelectorEntries*)
   {
      ::TSelectorEntries *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSelectorEntries >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSelectorEntries", ::TSelectorEntries::Class_Version(), "include/TSelectorEntries.h", 34,
                  typeid(::TSelectorEntries), DefineBehavior(ptr, ptr),
                  &::TSelectorEntries::Dictionary, isa_proxy, 0,
                  sizeof(::TSelectorEntries) );
      instance.SetNew(&new_TSelectorEntries);
      instance.SetNewArray(&newArray_TSelectorEntries);
      instance.SetDelete(&delete_TSelectorEntries);
      instance.SetDeleteArray(&deleteArray_TSelectorEntries);
      instance.SetDestructor(&destruct_TSelectorEntries);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSelectorEntries*)
   {
      return GenerateInitInstanceLocal((::TSelectorEntries*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSelectorEntries*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TTreeDrawArgsParser_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TTreeDrawArgsParser(void *p = 0);
   static void *newArray_TTreeDrawArgsParser(Long_t size, void *p);
   static void delete_TTreeDrawArgsParser(void *p);
   static void deleteArray_TTreeDrawArgsParser(void *p);
   static void destruct_TTreeDrawArgsParser(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TTreeDrawArgsParser*)
   {
      ::TTreeDrawArgsParser *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TTreeDrawArgsParser >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TTreeDrawArgsParser", ::TTreeDrawArgsParser::Class_Version(), "include/TTreeDrawArgsParser.h", 33,
                  typeid(::TTreeDrawArgsParser), DefineBehavior(ptr, ptr),
                  &::TTreeDrawArgsParser::Dictionary, isa_proxy, 4,
                  sizeof(::TTreeDrawArgsParser) );
      instance.SetNew(&new_TTreeDrawArgsParser);
      instance.SetNewArray(&newArray_TTreeDrawArgsParser);
      instance.SetDelete(&delete_TTreeDrawArgsParser);
      instance.SetDeleteArray(&deleteArray_TTreeDrawArgsParser);
      instance.SetDestructor(&destruct_TTreeDrawArgsParser);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TTreeDrawArgsParser*)
   {
      return GenerateInitInstanceLocal((::TTreeDrawArgsParser*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TTreeDrawArgsParser*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TTreeIndex_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TTreeIndex(void *p = 0);
   static void *newArray_TTreeIndex(Long_t size, void *p);
   static void delete_TTreeIndex(void *p);
   static void deleteArray_TTreeIndex(void *p);
   static void destruct_TTreeIndex(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TTreeIndex*)
   {
      ::TTreeIndex *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TTreeIndex >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TTreeIndex", ::TTreeIndex::Class_Version(), "include/TTreeIndex.h", 32,
                  typeid(::TTreeIndex), DefineBehavior(ptr, ptr),
                  &::TTreeIndex::Dictionary, isa_proxy, 1,
                  sizeof(::TTreeIndex) );
      instance.SetNew(&new_TTreeIndex);
      instance.SetNewArray(&newArray_TTreeIndex);
      instance.SetDelete(&delete_TTreeIndex);
      instance.SetDeleteArray(&deleteArray_TTreeIndex);
      instance.SetDestructor(&destruct_TTreeIndex);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TTreeIndex*)
   {
      return GenerateInitInstanceLocal((::TTreeIndex*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TTreeIndex*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TTreePerfStats_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TTreePerfStats(void *p = 0);
   static void *newArray_TTreePerfStats(Long_t size, void *p);
   static void delete_TTreePerfStats(void *p);
   static void deleteArray_TTreePerfStats(void *p);
   static void destruct_TTreePerfStats(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TTreePerfStats*)
   {
      ::TTreePerfStats *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TTreePerfStats >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TTreePerfStats", ::TTreePerfStats::Class_Version(), "include/TTreePerfStats.h", 40,
                  typeid(::TTreePerfStats), DefineBehavior(ptr, ptr),
                  &::TTreePerfStats::Dictionary, isa_proxy, 4,
                  sizeof(::TTreePerfStats) );
      instance.SetNew(&new_TTreePerfStats);
      instance.SetNewArray(&newArray_TTreePerfStats);
      instance.SetDelete(&delete_TTreePerfStats);
      instance.SetDeleteArray(&deleteArray_TTreePerfStats);
      instance.SetDestructor(&destruct_TTreePerfStats);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TTreePerfStats*)
   {
      return GenerateInitInstanceLocal((::TTreePerfStats*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TTreePerfStats*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TTreePlayer_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TTreePlayer(void *p = 0);
   static void *newArray_TTreePlayer(Long_t size, void *p);
   static void delete_TTreePlayer(void *p);
   static void deleteArray_TTreePlayer(void *p);
   static void destruct_TTreePlayer(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TTreePlayer*)
   {
      ::TTreePlayer *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TTreePlayer >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TTreePlayer", ::TTreePlayer::Class_Version(), "include/TTreePlayer.h", 43,
                  typeid(::TTreePlayer), DefineBehavior(ptr, ptr),
                  &::TTreePlayer::Dictionary, isa_proxy, 4,
                  sizeof(::TTreePlayer) );
      instance.SetNew(&new_TTreePlayer);
      instance.SetNewArray(&newArray_TTreePlayer);
      instance.SetDelete(&delete_TTreePlayer);
      instance.SetDeleteArray(&deleteArray_TTreePlayer);
      instance.SetDestructor(&destruct_TTreePlayer);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TTreePlayer*)
   {
      return GenerateInitInstanceLocal((::TTreePlayer*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TTreePlayer*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TTreeTableInterface_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TTreeTableInterface(void *p = 0);
   static void *newArray_TTreeTableInterface(Long_t size, void *p);
   static void delete_TTreeTableInterface(void *p);
   static void deleteArray_TTreeTableInterface(void *p);
   static void destruct_TTreeTableInterface(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TTreeTableInterface*)
   {
      ::TTreeTableInterface *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TTreeTableInterface >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TTreeTableInterface", ::TTreeTableInterface::Class_Version(), "include/TTreeTableInterface.h", 25,
                  typeid(::TTreeTableInterface), DefineBehavior(ptr, ptr),
                  &::TTreeTableInterface::Dictionary, isa_proxy, 0,
                  sizeof(::TTreeTableInterface) );
      instance.SetNew(&new_TTreeTableInterface);
      instance.SetNewArray(&newArray_TTreeTableInterface);
      instance.SetDelete(&delete_TTreeTableInterface);
      instance.SetDeleteArray(&deleteArray_TTreeTableInterface);
      instance.SetDestructor(&destruct_TTreeTableInterface);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TTreeTableInterface*)
   {
      return GenerateInitInstanceLocal((::TTreeTableInterface*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TTreeTableInterface*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR_Dictionary();
   static void *new_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR(void *p);
   static void deleteArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR(void *p);
   static void destruct_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::TArrayProxy<ROOT::TArrayType<short,0> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::TArrayProxy<ROOT::TArrayType<short,0> >) == sizeof(::ROOT::Shadow::ROOT::TArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR));
      ::ROOT::TArrayProxy<ROOT::TArrayType<short,0> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::TArrayProxy<ROOT::TArrayType<short,0> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::TArrayProxy<ROOT::TArrayType<short,0> >", "include/TBranchProxy.h", 497,
                  typeid(::ROOT::TArrayProxy<ROOT::TArrayType<short,0> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR_ShowMembers, &ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::TArrayProxy<ROOT::TArrayType<short,0> >) );
      instance.SetNew(&new_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::TArrayProxy<ROOT::TArrayType<short,0> >*)
   {
      return GenerateInitInstanceLocal((::ROOT::TArrayProxy<ROOT::TArrayType<short,0> >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::TArrayProxy<ROOT::TArrayType<short,0> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TArrayProxy<ROOT::TArrayType<short,0> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR_Dictionary();
   static void *new_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR(void *p);
   static void deleteArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR(void *p);
   static void destruct_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::TArrayProxy<ROOT::TArrayType<char,0> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::TArrayProxy<ROOT::TArrayType<char,0> >) == sizeof(::ROOT::Shadow::ROOT::TArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR));
      ::ROOT::TArrayProxy<ROOT::TArrayType<char,0> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::TArrayProxy<ROOT::TArrayType<char,0> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::TArrayProxy<ROOT::TArrayType<char,0> >", "include/TBranchProxy.h", 497,
                  typeid(::ROOT::TArrayProxy<ROOT::TArrayType<char,0> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR_ShowMembers, &ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::TArrayProxy<ROOT::TArrayType<char,0> >) );
      instance.SetNew(&new_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::TArrayProxy<ROOT::TArrayType<char,0> >*)
   {
      return GenerateInitInstanceLocal((::ROOT::TArrayProxy<ROOT::TArrayType<char,0> >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::TArrayProxy<ROOT::TArrayType<char,0> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TArrayProxy<ROOT::TArrayType<char,0> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR_Dictionary();
   static void *new_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR(void *p);
   static void deleteArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR(void *p);
   static void destruct_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> >) == sizeof(::ROOT::Shadow::ROOT::TClaArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR));
      ::ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> >", "include/TBranchProxy.h", 638,
                  typeid(::ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR_ShowMembers, &ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> >) );
      instance.SetNew(&new_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> >*)
   {
      return GenerateInitInstanceLocal((::ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

      namespace ROOT {
//______________________________________________________________________________
TClass *TBranchProxyDescriptor::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TBranchProxyDescriptor::Class_Name()
{
   return "ROOT::TBranchProxyDescriptor";
}

//______________________________________________________________________________
const char *TBranchProxyDescriptor::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TBranchProxyDescriptor*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TBranchProxyDescriptor::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TBranchProxyDescriptor*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TBranchProxyDescriptor::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TBranchProxyDescriptor*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TBranchProxyDescriptor::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TBranchProxyDescriptor*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ROOT
      namespace ROOT {
//______________________________________________________________________________
TClass *TBranchProxyClassDescriptor::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TBranchProxyClassDescriptor::Class_Name()
{
   return "ROOT::TBranchProxyClassDescriptor";
}

//______________________________________________________________________________
const char *TBranchProxyClassDescriptor::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TBranchProxyClassDescriptor*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TBranchProxyClassDescriptor::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TBranchProxyClassDescriptor*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TBranchProxyClassDescriptor::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TBranchProxyClassDescriptor*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TBranchProxyClassDescriptor::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TBranchProxyClassDescriptor*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ROOT
//______________________________________________________________________________
TClass *TTreeFormula::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TTreeFormula::Class_Name()
{
   return "TTreeFormula";
}

//______________________________________________________________________________
const char *TTreeFormula::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TTreeFormula*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTreeFormula::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TTreeFormula*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTreeFormula::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TTreeFormula*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTreeFormula::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TTreeFormula*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TChainIndex::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TChainIndex::Class_Name()
{
   return "TChainIndex";
}

//______________________________________________________________________________
const char *TChainIndex::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TChainIndex*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TChainIndex::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TChainIndex*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TChainIndex::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TChainIndex*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TChainIndex::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TChainIndex*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TFileDrawMap::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TFileDrawMap::Class_Name()
{
   return "TFileDrawMap";
}

//______________________________________________________________________________
const char *TFileDrawMap::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TFileDrawMap*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TFileDrawMap::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TFileDrawMap*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TFileDrawMap::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TFileDrawMap*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TFileDrawMap::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TFileDrawMap*)0x0)->GetClass();
   return fgIsA;
}

      namespace ROOT {
//______________________________________________________________________________
TClass *TFriendProxyDescriptor::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TFriendProxyDescriptor::Class_Name()
{
   return "ROOT::TFriendProxyDescriptor";
}

//______________________________________________________________________________
const char *TFriendProxyDescriptor::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TFriendProxyDescriptor*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TFriendProxyDescriptor::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TFriendProxyDescriptor*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TFriendProxyDescriptor::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TFriendProxyDescriptor*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TFriendProxyDescriptor::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TFriendProxyDescriptor*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ROOT
//______________________________________________________________________________
TClass *TTreeFormulaManager::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TTreeFormulaManager::Class_Name()
{
   return "TTreeFormulaManager";
}

//______________________________________________________________________________
const char *TTreeFormulaManager::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TTreeFormulaManager*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTreeFormulaManager::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TTreeFormulaManager*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTreeFormulaManager::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TTreeFormulaManager*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTreeFormulaManager::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TTreeFormulaManager*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSelectorDraw::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSelectorDraw::Class_Name()
{
   return "TSelectorDraw";
}

//______________________________________________________________________________
const char *TSelectorDraw::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSelectorDraw*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSelectorDraw::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSelectorDraw*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSelectorDraw::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSelectorDraw*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSelectorDraw::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSelectorDraw*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSelectorEntries::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSelectorEntries::Class_Name()
{
   return "TSelectorEntries";
}

//______________________________________________________________________________
const char *TSelectorEntries::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSelectorEntries*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSelectorEntries::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSelectorEntries*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSelectorEntries::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSelectorEntries*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSelectorEntries::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSelectorEntries*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TTreeDrawArgsParser::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TTreeDrawArgsParser::Class_Name()
{
   return "TTreeDrawArgsParser";
}

//______________________________________________________________________________
const char *TTreeDrawArgsParser::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TTreeDrawArgsParser*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTreeDrawArgsParser::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TTreeDrawArgsParser*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTreeDrawArgsParser::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TTreeDrawArgsParser*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTreeDrawArgsParser::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TTreeDrawArgsParser*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TTreeIndex::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TTreeIndex::Class_Name()
{
   return "TTreeIndex";
}

//______________________________________________________________________________
const char *TTreeIndex::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TTreeIndex*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTreeIndex::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TTreeIndex*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTreeIndex::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TTreeIndex*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTreeIndex::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TTreeIndex*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TTreePerfStats::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TTreePerfStats::Class_Name()
{
   return "TTreePerfStats";
}

//______________________________________________________________________________
const char *TTreePerfStats::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TTreePerfStats*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTreePerfStats::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TTreePerfStats*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTreePerfStats::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TTreePerfStats*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTreePerfStats::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TTreePerfStats*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TTreePlayer::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TTreePlayer::Class_Name()
{
   return "TTreePlayer";
}

//______________________________________________________________________________
const char *TTreePlayer::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TTreePlayer*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTreePlayer::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TTreePlayer*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTreePlayer::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TTreePlayer*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTreePlayer::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TTreePlayer*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TTreeTableInterface::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TTreeTableInterface::Class_Name()
{
   return "TTreeTableInterface";
}

//______________________________________________________________________________
const char *TTreeTableInterface::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TTreeTableInterface*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTreeTableInterface::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TTreeTableInterface*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTreeTableInterface::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TTreeTableInterface*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTreeTableInterface::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TTreeTableInterface*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TTreePlayer::Streamer(TBuffer &R__b)
{
   // Stream an object of class TTreePlayer.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TTreePlayer::Class(),this);
   } else {
      R__b.WriteClassBuffer(TTreePlayer::Class(),this);
   }
}

//______________________________________________________________________________
void TTreePlayer::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TTreePlayer.
      TClass *R__cl = ::TTreePlayer::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fTree", &fTree);
      R__insp.Inspect(R__cl, R__parent, "fScanRedirect", &fScanRedirect);
      R__insp.Inspect(R__cl, R__parent, "*fScanFileName", &fScanFileName);
      R__insp.Inspect(R__cl, R__parent, "fDimension", &fDimension);
      R__insp.Inspect(R__cl, R__parent, "fSelectedRows", &fSelectedRows);
      R__insp.Inspect(R__cl, R__parent, "*fHistogram", &fHistogram);
      R__insp.Inspect(R__cl, R__parent, "*fSelector", &fSelector);
      R__insp.Inspect(R__cl, R__parent, "*fSelectorFromFile", &fSelectorFromFile);
      R__insp.Inspect(R__cl, R__parent, "*fSelectorClass", &fSelectorClass);
      R__insp.Inspect(R__cl, R__parent, "*fInput", &fInput);
      R__insp.Inspect(R__cl, R__parent, "*fFormulaList", &fFormulaList);
      R__insp.Inspect(R__cl, R__parent, "*fSelectorUpdate", &fSelectorUpdate);
      TVirtualTreePlayer::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TTreePlayer(void *p) {
      return  p ? new(p) ::TTreePlayer : new ::TTreePlayer;
   }
   static void *newArray_TTreePlayer(Long_t nElements, void *p) {
      return p ? new(p) ::TTreePlayer[nElements] : new ::TTreePlayer[nElements];
   }
   // Wrapper around operator delete
   static void delete_TTreePlayer(void *p) {
      delete ((::TTreePlayer*)p);
   }
   static void deleteArray_TTreePlayer(void *p) {
      delete [] ((::TTreePlayer*)p);
   }
   static void destruct_TTreePlayer(void *p) {
      typedef ::TTreePlayer current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TTreePlayer

//______________________________________________________________________________
void TTreeFormula::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TTreeFormula.
      TClass *R__cl = ::TTreeFormula::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fTree", &fTree);
      R__insp.Inspect(R__cl, R__parent, "fCodes[500]", fCodes);
      R__insp.Inspect(R__cl, R__parent, "fNdata[500]", fNdata);
      R__insp.Inspect(R__cl, R__parent, "fNcodes", &fNcodes);
      R__insp.Inspect(R__cl, R__parent, "fHasCast", &fHasCast);
      R__insp.Inspect(R__cl, R__parent, "fMultiplicity", &fMultiplicity);
      R__insp.Inspect(R__cl, R__parent, "fNindex", &fNindex);
      R__insp.Inspect(R__cl, R__parent, "*fLookupType", &fLookupType);
      R__insp.Inspect(R__cl, R__parent, "fLeaves", &fLeaves);
      fLeaves.ShowMembers(R__insp, strcat(R__parent,"fLeaves.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fDataMembers", &fDataMembers);
      fDataMembers.ShowMembers(R__insp, strcat(R__parent,"fDataMembers.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fMethods", &fMethods);
      fMethods.ShowMembers(R__insp, strcat(R__parent,"fMethods.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fExternalCuts", &fExternalCuts);
      fExternalCuts.ShowMembers(R__insp, strcat(R__parent,"fExternalCuts.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fAliases", &fAliases);
      fAliases.ShowMembers(R__insp, strcat(R__parent,"fAliases.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fLeafNames", &fLeafNames);
      fLeafNames.ShowMembers(R__insp, strcat(R__parent,"fLeafNames.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fBranches", &fBranches);
      fBranches.ShowMembers(R__insp, strcat(R__parent,"fBranches.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fQuickLoad", &fQuickLoad);
      R__insp.Inspect(R__cl, R__parent, "fNeedLoading", &fNeedLoading);
      R__insp.Inspect(R__cl, R__parent, "fNdimensions[500]", fNdimensions);
      R__insp.Inspect(R__cl, R__parent, "fFixedSizes[500][5]", fFixedSizes);
      R__insp.Inspect(R__cl, R__parent, "fHasMultipleVarDim[500]", fHasMultipleVarDim);
      R__insp.Inspect(R__cl, R__parent, "fCumulSizes[500][5]", fCumulSizes);
      R__insp.Inspect(R__cl, R__parent, "fIndexes[500][5]", fIndexes);
      R__insp.Inspect(R__cl, R__parent, "*fVarIndexes[500][5]", &fVarIndexes);
      R__insp.Inspect(R__cl, R__parent, "*fAxis", &fAxis);
      R__insp.Inspect(R__cl, R__parent, "fDidBooleanOptimization", &fDidBooleanOptimization);
      R__insp.Inspect(R__cl, R__parent, "*fManager", &fManager);
      R__insp.Inspect(R__cl, R__parent, "*fDimensionSetup", &fDimensionSetup);
      R__insp.Inspect(R__cl, R__parent, "fAliasesUsed", (void*)&fAliasesUsed);
      ::ROOT::GenericShowMembers("vector<std::string>", (void*)&fAliasesUsed, R__insp, strcat(R__parent,"fAliasesUsed."),true);
      R__parent[R__ncp] = 0;
      TFormula::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TTreeFormula(void *p) {
      return  p ? new(p) ::TTreeFormula : new ::TTreeFormula;
   }
   static void *newArray_TTreeFormula(Long_t nElements, void *p) {
      return p ? new(p) ::TTreeFormula[nElements] : new ::TTreeFormula[nElements];
   }
   // Wrapper around operator delete
   static void delete_TTreeFormula(void *p) {
      delete ((::TTreeFormula*)p);
   }
   static void deleteArray_TTreeFormula(void *p) {
      delete [] ((::TTreeFormula*)p);
   }
   static void destruct_TTreeFormula(void *p) {
      typedef ::TTreeFormula current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TTreeFormula

//______________________________________________________________________________
void TSelectorDraw::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSelectorDraw.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TSelector::Streamer(R__b);
      R__b >> fTree;
      R__b >> fSelect;
      R__b >> fManager;
      R__b >> fTreeElist;
      R__b >> fMultiplicity;
      R__b >> fDimension;
      R__b >> fSelectedRows;
      R__b >> fOldEstimate;
      R__b >> fForceRead;
      R__b >> fWeight;
      R__b >> fValSize;
      R__b >> fSelectMultiple;
      R__b >> fCleanElist;
      R__b >> fObjEval;
      R__b.CheckByteCount(R__s, R__c, TSelectorDraw::IsA());
   } else {
      R__c = R__b.WriteVersion(TSelectorDraw::IsA(), kTRUE);
      TSelector::Streamer(R__b);
      R__b << fTree;
      R__b << fSelect;
      R__b << fManager;
      R__b << fTreeElist;
      R__b << fMultiplicity;
      R__b << fDimension;
      R__b << fSelectedRows;
      R__b << fOldEstimate;
      R__b << fForceRead;
      R__b << fWeight;
      R__b << fValSize;
      R__b << fSelectMultiple;
      R__b << fCleanElist;
      R__b << fObjEval;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TSelectorDraw::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TSelectorDraw.
      TClass *R__cl = ::TSelectorDraw::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fTree", &fTree);
      R__insp.Inspect(R__cl, R__parent, "*fVar", &fVar);
      R__insp.Inspect(R__cl, R__parent, "*fSelect", &fSelect);
      R__insp.Inspect(R__cl, R__parent, "*fManager", &fManager);
      R__insp.Inspect(R__cl, R__parent, "*fTreeElist", &fTreeElist);
      R__insp.Inspect(R__cl, R__parent, "*fOldHistogram", &fOldHistogram);
      R__insp.Inspect(R__cl, R__parent, "fAction", &fAction);
      R__insp.Inspect(R__cl, R__parent, "fDraw", &fDraw);
      R__insp.Inspect(R__cl, R__parent, "fNfill", &fNfill);
      R__insp.Inspect(R__cl, R__parent, "fMultiplicity", &fMultiplicity);
      R__insp.Inspect(R__cl, R__parent, "fDimension", &fDimension);
      R__insp.Inspect(R__cl, R__parent, "fSelectedRows", &fSelectedRows);
      R__insp.Inspect(R__cl, R__parent, "fOldEstimate", &fOldEstimate);
      R__insp.Inspect(R__cl, R__parent, "fForceRead", &fForceRead);
      R__insp.Inspect(R__cl, R__parent, "*fNbins", &fNbins);
      R__insp.Inspect(R__cl, R__parent, "*fVmin", &fVmin);
      R__insp.Inspect(R__cl, R__parent, "*fVmax", &fVmax);
      R__insp.Inspect(R__cl, R__parent, "fWeight", &fWeight);
      R__insp.Inspect(R__cl, R__parent, "*fVal", &fVal);
      R__insp.Inspect(R__cl, R__parent, "fValSize", &fValSize);
      R__insp.Inspect(R__cl, R__parent, "*fW", &fW);
      R__insp.Inspect(R__cl, R__parent, "*fVarMultiple", &fVarMultiple);
      R__insp.Inspect(R__cl, R__parent, "fSelectMultiple", &fSelectMultiple);
      R__insp.Inspect(R__cl, R__parent, "fCleanElist", &fCleanElist);
      R__insp.Inspect(R__cl, R__parent, "fObjEval", &fObjEval);
      TSelector::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSelectorDraw(void *p) {
      return  p ? new(p) ::TSelectorDraw : new ::TSelectorDraw;
   }
   static void *newArray_TSelectorDraw(Long_t nElements, void *p) {
      return p ? new(p) ::TSelectorDraw[nElements] : new ::TSelectorDraw[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSelectorDraw(void *p) {
      delete ((::TSelectorDraw*)p);
   }
   static void deleteArray_TSelectorDraw(void *p) {
      delete [] ((::TSelectorDraw*)p);
   }
   static void destruct_TSelectorDraw(void *p) {
      typedef ::TSelectorDraw current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSelectorDraw

//______________________________________________________________________________
void TSelectorEntries::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSelectorEntries.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TSelector::Streamer(R__b);
      R__b >> fSelect;
      R__b >> fSelectedRows;
      R__b >> fSelectMultiple;
      R__b.CheckByteCount(R__s, R__c, TSelectorEntries::IsA());
   } else {
      R__c = R__b.WriteVersion(TSelectorEntries::IsA(), kTRUE);
      TSelector::Streamer(R__b);
      R__b << fSelect;
      R__b << fSelectedRows;
      R__b << fSelectMultiple;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TSelectorEntries::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TSelectorEntries.
      TClass *R__cl = ::TSelectorEntries::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fChain", &fChain);
      R__insp.Inspect(R__cl, R__parent, "*fSelect", &fSelect);
      R__insp.Inspect(R__cl, R__parent, "fSelectedRows", &fSelectedRows);
      R__insp.Inspect(R__cl, R__parent, "fSelectMultiple", &fSelectMultiple);
      TSelector::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSelectorEntries(void *p) {
      return  p ? new(p) ::TSelectorEntries : new ::TSelectorEntries;
   }
   static void *newArray_TSelectorEntries(Long_t nElements, void *p) {
      return p ? new(p) ::TSelectorEntries[nElements] : new ::TSelectorEntries[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSelectorEntries(void *p) {
      delete ((::TSelectorEntries*)p);
   }
   static void deleteArray_TSelectorEntries(void *p) {
      delete [] ((::TSelectorEntries*)p);
   }
   static void destruct_TSelectorEntries(void *p) {
      typedef ::TSelectorEntries current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSelectorEntries

//______________________________________________________________________________
void TFileDrawMap::Streamer(TBuffer &R__b)
{
   // Stream an object of class TFileDrawMap.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TFileDrawMap::Class(),this);
   } else {
      R__b.WriteClassBuffer(TFileDrawMap::Class(),this);
   }
}

//______________________________________________________________________________
void TFileDrawMap::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TFileDrawMap.
      TClass *R__cl = ::TFileDrawMap::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fFile", &fFile);
      R__insp.Inspect(R__cl, R__parent, "*fFrame", &fFrame);
      R__insp.Inspect(R__cl, R__parent, "fKeys", &fKeys);
      fKeys.ShowMembers(R__insp, strcat(R__parent,"fKeys.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fOption", &fOption);
      fOption.ShowMembers(R__insp, strcat(R__parent,"fOption.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fXsize", &fXsize);
      R__insp.Inspect(R__cl, R__parent, "fYsize", &fYsize);
      TNamed::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TFileDrawMap(void *p) {
      return  p ? new(p) ::TFileDrawMap : new ::TFileDrawMap;
   }
   static void *newArray_TFileDrawMap(Long_t nElements, void *p) {
      return p ? new(p) ::TFileDrawMap[nElements] : new ::TFileDrawMap[nElements];
   }
   // Wrapper around operator delete
   static void delete_TFileDrawMap(void *p) {
      delete ((::TFileDrawMap*)p);
   }
   static void deleteArray_TFileDrawMap(void *p) {
      delete [] ((::TFileDrawMap*)p);
   }
   static void destruct_TFileDrawMap(void *p) {
      typedef ::TFileDrawMap current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TFileDrawMap

//______________________________________________________________________________
void TTreeIndex::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TTreeIndex.
      TClass *R__cl = ::TTreeIndex::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fMajorName", &fMajorName);
      fMajorName.ShowMembers(R__insp, strcat(R__parent,"fMajorName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fMinorName", &fMinorName);
      fMinorName.ShowMembers(R__insp, strcat(R__parent,"fMinorName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fN", &fN);
      R__insp.Inspect(R__cl, R__parent, "*fIndexValues", &fIndexValues);
      R__insp.Inspect(R__cl, R__parent, "*fIndex", &fIndex);
      R__insp.Inspect(R__cl, R__parent, "*fMajorFormula", &fMajorFormula);
      R__insp.Inspect(R__cl, R__parent, "*fMinorFormula", &fMinorFormula);
      R__insp.Inspect(R__cl, R__parent, "*fMajorFormulaParent", &fMajorFormulaParent);
      R__insp.Inspect(R__cl, R__parent, "*fMinorFormulaParent", &fMinorFormulaParent);
      TVirtualIndex::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TTreeIndex(void *p) {
      return  p ? new(p) ::TTreeIndex : new ::TTreeIndex;
   }
   static void *newArray_TTreeIndex(Long_t nElements, void *p) {
      return p ? new(p) ::TTreeIndex[nElements] : new ::TTreeIndex[nElements];
   }
   // Wrapper around operator delete
   static void delete_TTreeIndex(void *p) {
      delete ((::TTreeIndex*)p);
   }
   static void deleteArray_TTreeIndex(void *p) {
      delete [] ((::TTreeIndex*)p);
   }
   static void destruct_TTreeIndex(void *p) {
      typedef ::TTreeIndex current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TTreeIndex

//______________________________________________________________________________
void TChainIndex::Streamer(TBuffer &R__b)
{
   // Stream an object of class TChainIndex.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TChainIndex::Class(),this);
   } else {
      R__b.WriteClassBuffer(TChainIndex::Class(),this);
   }
}

//______________________________________________________________________________
void TChainIndex::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TChainIndex.
      TClass *R__cl = ::TChainIndex::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fMajorName", &fMajorName);
      fMajorName.ShowMembers(R__insp, strcat(R__parent,"fMajorName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fMinorName", &fMinorName);
      fMinorName.ShowMembers(R__insp, strcat(R__parent,"fMinorName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fMajorFormulaParent", &fMajorFormulaParent);
      R__insp.Inspect(R__cl, R__parent, "*fMinorFormulaParent", &fMinorFormulaParent);
      R__insp.Inspect(R__cl, R__parent, "fEntries", (void*)&fEntries);
      ::ROOT::GenericShowMembers("vector<TChainIndexEntry>", (void*)&fEntries, R__insp, strcat(R__parent,"fEntries."),false);
      R__parent[R__ncp] = 0;
      TVirtualIndex::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TChainIndex(void *p) {
      return  p ? new(p) ::TChainIndex : new ::TChainIndex;
   }
   static void *newArray_TChainIndex(Long_t nElements, void *p) {
      return p ? new(p) ::TChainIndex[nElements] : new ::TChainIndex[nElements];
   }
   // Wrapper around operator delete
   static void delete_TChainIndex(void *p) {
      delete ((::TChainIndex*)p);
   }
   static void deleteArray_TChainIndex(void *p) {
      delete [] ((::TChainIndex*)p);
   }
   static void destruct_TChainIndex(void *p) {
      typedef ::TChainIndex current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TChainIndex

//______________________________________________________________________________
namespace ROOT {
   void TChainIndexcLcLTChainIndexEntry_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class TChainIndex::TChainIndexEntry.
      typedef ::ROOT::Shadow::TChainIndex::TChainIndexEntry ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::TChainIndex::TChainIndexEntry*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fMinIndexValue", &sobj->fMinIndexValue);
      R__insp.Inspect(R__cl, R__parent, "fMaxIndexValue", &sobj->fMaxIndexValue);
      R__insp.Inspect(R__cl, R__parent, "*fTreeIndex", &sobj->fTreeIndex);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TChainIndexcLcLTChainIndexEntry(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TChainIndex::TChainIndexEntry : new ::TChainIndex::TChainIndexEntry;
   }
   static void *newArray_TChainIndexcLcLTChainIndexEntry(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TChainIndex::TChainIndexEntry[nElements] : new ::TChainIndex::TChainIndexEntry[nElements];
   }
   // Wrapper around operator delete
   static void delete_TChainIndexcLcLTChainIndexEntry(void *p) {
      delete ((::TChainIndex::TChainIndexEntry*)p);
   }
   static void deleteArray_TChainIndexcLcLTChainIndexEntry(void *p) {
      delete [] ((::TChainIndex::TChainIndexEntry*)p);
   }
   static void destruct_TChainIndexcLcLTChainIndexEntry(void *p) {
      typedef ::TChainIndex::TChainIndexEntry current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TChainIndex::TChainIndexEntry

//______________________________________________________________________________
void TTreeFormulaManager::Streamer(TBuffer &R__b)
{
   // Stream an object of class TTreeFormulaManager.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void TTreeFormulaManager::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TTreeFormulaManager.
      TClass *R__cl = ::TTreeFormulaManager::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fFormulas", &fFormulas);
      fFormulas.ShowMembers(R__insp, strcat(R__parent,"fFormulas.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fMultiplicity", &fMultiplicity);
      R__insp.Inspect(R__cl, R__parent, "fMultiVarDim", &fMultiVarDim);
      R__insp.Inspect(R__cl, R__parent, "fNdata", &fNdata);
      R__insp.Inspect(R__cl, R__parent, "fCumulUsedSizes[6]", fCumulUsedSizes);
      R__insp.Inspect(R__cl, R__parent, "*fCumulUsedVarDims", &fCumulUsedVarDims);
      R__insp.Inspect(R__cl, R__parent, "fUsedSizes[6]", fUsedSizes);
      R__insp.Inspect(R__cl, R__parent, "*fVarDims[6]", &fVarDims);
      R__insp.Inspect(R__cl, R__parent, "fVirtUsedSizes[6]", fVirtUsedSizes);
      R__insp.Inspect(R__cl, R__parent, "fNeedSync", &fNeedSync);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TTreeFormulaManager(void *p) {
      return  p ? new(p) ::TTreeFormulaManager : new ::TTreeFormulaManager;
   }
} // end of namespace ROOT for class ::TTreeFormulaManager

//______________________________________________________________________________
void TTreeDrawArgsParser::Streamer(TBuffer &R__b)
{
   // Stream an object of class TTreeDrawArgsParser.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TTreeDrawArgsParser::Class(),this);
   } else {
      R__b.WriteClassBuffer(TTreeDrawArgsParser::Class(),this);
   }
}

//______________________________________________________________________________
void TTreeDrawArgsParser::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TTreeDrawArgsParser.
      TClass *R__cl = ::TTreeDrawArgsParser::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fExp", &fExp);
      fExp.ShowMembers(R__insp, strcat(R__parent,"fExp.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fSelection", &fSelection);
      fSelection.ShowMembers(R__insp, strcat(R__parent,"fSelection.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fOption", &fOption);
      fOption.ShowMembers(R__insp, strcat(R__parent,"fOption.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fDimension", &fDimension);
      R__insp.Inspect(R__cl, R__parent, "fVarExp[4]", fVarExp);
      R__insp.Inspect(R__cl, R__parent, "fAdd", &fAdd);
      R__insp.Inspect(R__cl, R__parent, "fName", &fName);
      fName.ShowMembers(R__insp, strcat(R__parent,"fName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fNoParameters", &fNoParameters);
      R__insp.Inspect(R__cl, R__parent, "fParameterGiven[9]", fParameterGiven);
      R__insp.Inspect(R__cl, R__parent, "fParameters[9]", fParameters);
      R__insp.Inspect(R__cl, R__parent, "fShouldDraw", &fShouldDraw);
      R__insp.Inspect(R__cl, R__parent, "fOptionSame", &fOptionSame);
      R__insp.Inspect(R__cl, R__parent, "fEntryList", &fEntryList);
      R__insp.Inspect(R__cl, R__parent, "*fOriginal", &fOriginal);
      R__insp.Inspect(R__cl, R__parent, "fDrawProfile", &fDrawProfile);
      R__insp.Inspect(R__cl, R__parent, "fOutputType", &fOutputType);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TTreeDrawArgsParser(void *p) {
      return  p ? new(p) ::TTreeDrawArgsParser : new ::TTreeDrawArgsParser;
   }
   static void *newArray_TTreeDrawArgsParser(Long_t nElements, void *p) {
      return p ? new(p) ::TTreeDrawArgsParser[nElements] : new ::TTreeDrawArgsParser[nElements];
   }
   // Wrapper around operator delete
   static void delete_TTreeDrawArgsParser(void *p) {
      delete ((::TTreeDrawArgsParser*)p);
   }
   static void deleteArray_TTreeDrawArgsParser(void *p) {
      delete [] ((::TTreeDrawArgsParser*)p);
   }
   static void destruct_TTreeDrawArgsParser(void *p) {
      typedef ::TTreeDrawArgsParser current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TTreeDrawArgsParser

//______________________________________________________________________________
void TTreePerfStats::Streamer(TBuffer &R__b)
{
   // Stream an object of class TTreePerfStats.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TTreePerfStats::Class(),this);
   } else {
      R__b.WriteClassBuffer(TTreePerfStats::Class(),this);
   }
}

//______________________________________________________________________________
void TTreePerfStats::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TTreePerfStats.
      TClass *R__cl = ::TTreePerfStats::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fTreeCacheSize", &fTreeCacheSize);
      R__insp.Inspect(R__cl, R__parent, "fNleaves", &fNleaves);
      R__insp.Inspect(R__cl, R__parent, "fReadCalls", &fReadCalls);
      R__insp.Inspect(R__cl, R__parent, "fReadaheadSize", &fReadaheadSize);
      R__insp.Inspect(R__cl, R__parent, "fBytesRead", &fBytesRead);
      R__insp.Inspect(R__cl, R__parent, "fBytesReadExtra", &fBytesReadExtra);
      R__insp.Inspect(R__cl, R__parent, "fRealNorm", &fRealNorm);
      R__insp.Inspect(R__cl, R__parent, "fRealTime", &fRealTime);
      R__insp.Inspect(R__cl, R__parent, "fCpuTime", &fCpuTime);
      R__insp.Inspect(R__cl, R__parent, "fDiskTime", &fDiskTime);
      R__insp.Inspect(R__cl, R__parent, "fCompress", &fCompress);
      R__insp.Inspect(R__cl, R__parent, "fName", &fName);
      fName.ShowMembers(R__insp, strcat(R__parent,"fName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fHostInfo", &fHostInfo);
      fHostInfo.ShowMembers(R__insp, strcat(R__parent,"fHostInfo.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fFile", &fFile);
      R__insp.Inspect(R__cl, R__parent, "*fTree", &fTree);
      R__insp.Inspect(R__cl, R__parent, "*fGraphIO", &fGraphIO);
      R__insp.Inspect(R__cl, R__parent, "*fGraphTime", &fGraphTime);
      R__insp.Inspect(R__cl, R__parent, "*fPave", &fPave);
      R__insp.Inspect(R__cl, R__parent, "*fWatch", &fWatch);
      R__insp.Inspect(R__cl, R__parent, "*fRealTimeAxis", &fRealTimeAxis);
      R__insp.Inspect(R__cl, R__parent, "*fHostInfoText", &fHostInfoText);
      TVirtualPerfStats::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TTreePerfStats(void *p) {
      return  p ? new(p) ::TTreePerfStats : new ::TTreePerfStats;
   }
   static void *newArray_TTreePerfStats(Long_t nElements, void *p) {
      return p ? new(p) ::TTreePerfStats[nElements] : new ::TTreePerfStats[nElements];
   }
   // Wrapper around operator delete
   static void delete_TTreePerfStats(void *p) {
      delete ((::TTreePerfStats*)p);
   }
   static void deleteArray_TTreePerfStats(void *p) {
      delete [] ((::TTreePerfStats*)p);
   }
   static void destruct_TTreePerfStats(void *p) {
      typedef ::TTreePerfStats current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TTreePerfStats

//______________________________________________________________________________
void TTreeTableInterface::Streamer(TBuffer &R__b)
{
   // Stream an object of class TTreeTableInterface.

   TVirtualTableInterface::Streamer(R__b);
}

//______________________________________________________________________________
void TTreeTableInterface::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TTreeTableInterface.
      TClass *R__cl = ::TTreeTableInterface::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fTree", &fTree);
      R__insp.Inspect(R__cl, R__parent, "*fFormulas", &fFormulas);
      R__insp.Inspect(R__cl, R__parent, "fEntry", &fEntry);
      R__insp.Inspect(R__cl, R__parent, "fNEntries", &fNEntries);
      R__insp.Inspect(R__cl, R__parent, "fFirstEntry", &fFirstEntry);
      R__insp.Inspect(R__cl, R__parent, "*fManager", &fManager);
      R__insp.Inspect(R__cl, R__parent, "*fSelect", &fSelect);
      R__insp.Inspect(R__cl, R__parent, "*fSelector", &fSelector);
      R__insp.Inspect(R__cl, R__parent, "*fInput", &fInput);
      R__insp.Inspect(R__cl, R__parent, "fForceDim", &fForceDim);
      R__insp.Inspect(R__cl, R__parent, "*fEntries", &fEntries);
      R__insp.Inspect(R__cl, R__parent, "fNRows", &fNRows);
      R__insp.Inspect(R__cl, R__parent, "fNColumns", &fNColumns);
      TVirtualTableInterface::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TTreeTableInterface(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TTreeTableInterface : new ::TTreeTableInterface;
   }
   static void *newArray_TTreeTableInterface(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TTreeTableInterface[nElements] : new ::TTreeTableInterface[nElements];
   }
   // Wrapper around operator delete
   static void delete_TTreeTableInterface(void *p) {
      delete ((::TTreeTableInterface*)p);
   }
   static void deleteArray_TTreeTableInterface(void *p) {
      delete [] ((::TTreeTableInterface*)p);
   }
   static void destruct_TTreeTableInterface(void *p) {
      typedef ::TTreeTableInterface current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TTreeTableInterface

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLTBranchProxyDirector_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::TBranchProxyDirector.
      typedef ::ROOT::Shadow::ROOT::TBranchProxyDirector ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TBranchProxyDirector*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fTree", &sobj->fTree);
      R__insp.Inspect(R__cl, R__parent, "fEntry", &sobj->fEntry);
      R__insp.Inspect(R__cl, R__parent, "fDirected", (void*)&sobj->fDirected);
      ::ROOT::GenericShowMembers("list<TBranchProxy*>", (void*)&sobj->fDirected, R__insp, strcat(R__parent,"fDirected."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fFriends", (void*)&sobj->fFriends);
      ::ROOT::GenericShowMembers("list<TFriendProxy*>", (void*)&sobj->fFriends, R__insp, strcat(R__parent,"fFriends."),false);
      R__parent[R__ncp] = 0;
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLTBranchProxyDirector(void *p) {
      delete ((::ROOT::TBranchProxyDirector*)p);
   }
   static void deleteArray_ROOTcLcLTBranchProxyDirector(void *p) {
      delete [] ((::ROOT::TBranchProxyDirector*)p);
   }
   static void destruct_ROOTcLcLTBranchProxyDirector(void *p) {
      typedef ::ROOT::TBranchProxyDirector current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::TBranchProxyDirector

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLTBranchProxy_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::TBranchProxy.
      typedef ::ROOT::Shadow::ROOT::TBranchProxy ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TBranchProxy*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fDirector", &sobj->fDirector);
      R__insp.Inspect(R__cl, R__parent, "fInitialized", &sobj->fInitialized);
      R__insp.Inspect(R__cl, R__parent, "fBranchName", &sobj->fBranchName);
      const_cast<  TString &>( sobj->fBranchName ).ShowMembers(R__insp, strcat(R__parent,"fBranchName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fParent", &sobj->fParent);
      R__insp.Inspect(R__cl, R__parent, "fDataMember", &sobj->fDataMember);
      const_cast<  TString &>( sobj->fDataMember ).ShowMembers(R__insp, strcat(R__parent,"fDataMember.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fIsMember", &sobj->fIsMember);
      R__insp.Inspect(R__cl, R__parent, "fIsClone", &sobj->fIsClone);
      R__insp.Inspect(R__cl, R__parent, "fIsaPointer", &sobj->fIsaPointer);
      R__insp.Inspect(R__cl, R__parent, "fClassName", &sobj->fClassName);
      sobj->fClassName.ShowMembers(R__insp, strcat(R__parent,"fClassName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fClass", &sobj->fClass);
      R__insp.Inspect(R__cl, R__parent, "*fElement", &sobj->fElement);
      R__insp.Inspect(R__cl, R__parent, "fMemberOffset", &sobj->fMemberOffset);
      R__insp.Inspect(R__cl, R__parent, "fOffset", &sobj->fOffset);
      R__insp.Inspect(R__cl, R__parent, "*fBranch", &sobj->fBranch);
      R__insp.Inspect(R__cl, R__parent, "*fBranchCount", &sobj->fBranchCount);
      R__insp.Inspect(R__cl, R__parent, "*fLastTree", &sobj->fLastTree);
      R__insp.Inspect(R__cl, R__parent, "fRead", &sobj->fRead);
      R__insp.Inspect(R__cl, R__parent, "*fWhere", &sobj->fWhere);
      R__insp.Inspect(R__cl, R__parent, "*fCollection", &sobj->fCollection);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLTBranchProxy(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TBranchProxy : new ::ROOT::TBranchProxy;
   }
   static void *newArray_ROOTcLcLTBranchProxy(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TBranchProxy[nElements] : new ::ROOT::TBranchProxy[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLTBranchProxy(void *p) {
      delete ((::ROOT::TBranchProxy*)p);
   }
   static void deleteArray_ROOTcLcLTBranchProxy(void *p) {
      delete [] ((::ROOT::TBranchProxy*)p);
   }
   static void destruct_ROOTcLcLTBranchProxy(void *p) {
      typedef ::ROOT::TBranchProxy current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::TBranchProxy

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLTFriendProxy_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::TFriendProxy.
      typedef ::ROOT::Shadow::ROOT::TFriendProxy ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TFriendProxy*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fDirector", (void*)&sobj->fDirector);
      ::ROOT::GenericShowMembers("ROOT::TBranchProxyDirector", (void*)&sobj->fDirector, R__insp, strcat(R__parent,"fDirector."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fIndex", &sobj->fIndex);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLTFriendProxy(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TFriendProxy : new ::ROOT::TFriendProxy;
   }
   static void *newArray_ROOTcLcLTFriendProxy(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TFriendProxy[nElements] : new ::ROOT::TFriendProxy[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLTFriendProxy(void *p) {
      delete ((::ROOT::TFriendProxy*)p);
   }
   static void deleteArray_ROOTcLcLTFriendProxy(void *p) {
      delete [] ((::ROOT::TFriendProxy*)p);
   }
   static void destruct_ROOTcLcLTFriendProxy(void *p) {
      typedef ::ROOT::TFriendProxy current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::TFriendProxy

      namespace ROOT {
//______________________________________________________________________________
void TFriendProxyDescriptor::Streamer(TBuffer &R__b)
{
   // Stream an object of class ROOT::TFriendProxyDescriptor.

   TNamed::Streamer(R__b);
}

} // namespace ROOT
//______________________________________________________________________________
      namespace ROOT {
void TFriendProxyDescriptor::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class ROOT::TFriendProxyDescriptor.
      TClass *R__cl = ::ROOT::TFriendProxyDescriptor::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fDuplicate", &fDuplicate);
      R__insp.Inspect(R__cl, R__parent, "fIndex", &fIndex);
      R__insp.Inspect(R__cl, R__parent, "fListOfTopProxies", &fListOfTopProxies);
      fListOfTopProxies.ShowMembers(R__insp, strcat(R__parent,"fListOfTopProxies.")); R__parent[R__ncp] = 0;
      TNamed::ShowMembers(R__insp, R__parent);
}

} // namespace ROOT
namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLTFriendProxyDescriptor(void *p) {
      delete ((::ROOT::TFriendProxyDescriptor*)p);
   }
   static void deleteArray_ROOTcLcLTFriendProxyDescriptor(void *p) {
      delete [] ((::ROOT::TFriendProxyDescriptor*)p);
   }
   static void destruct_ROOTcLcLTFriendProxyDescriptor(void *p) {
      typedef ::ROOT::TFriendProxyDescriptor current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::TFriendProxyDescriptor

      namespace ROOT {
//______________________________________________________________________________
void TBranchProxyDescriptor::Streamer(TBuffer &R__b)
{
   // Stream an object of class ROOT::TBranchProxyDescriptor.

   TNamed::Streamer(R__b);
}

} // namespace ROOT
//______________________________________________________________________________
      namespace ROOT {
void TBranchProxyDescriptor::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class ROOT::TBranchProxyDescriptor.
      TClass *R__cl = ::ROOT::TBranchProxyDescriptor::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fDataName", &fDataName);
      fDataName.ShowMembers(R__insp, strcat(R__parent,"fDataName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fBranchName", &fBranchName);
      fBranchName.ShowMembers(R__insp, strcat(R__parent,"fBranchName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fIsSplit", &fIsSplit);
      R__insp.Inspect(R__cl, R__parent, "fBranchIsSkipped", &fBranchIsSkipped);
      R__insp.Inspect(R__cl, R__parent, "fIsLeafList", &fIsLeafList);
      TNamed::ShowMembers(R__insp, R__parent);
}

} // namespace ROOT
namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLTBranchProxyDescriptor(void *p) {
      delete ((::ROOT::TBranchProxyDescriptor*)p);
   }
   static void deleteArray_ROOTcLcLTBranchProxyDescriptor(void *p) {
      delete [] ((::ROOT::TBranchProxyDescriptor*)p);
   }
   static void destruct_ROOTcLcLTBranchProxyDescriptor(void *p) {
      typedef ::ROOT::TBranchProxyDescriptor current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::TBranchProxyDescriptor

      namespace ROOT {
//______________________________________________________________________________
void TBranchProxyClassDescriptor::Streamer(TBuffer &R__b)
{
   // Stream an object of class ROOT::TBranchProxyClassDescriptor.

   TNamed::Streamer(R__b);
}

} // namespace ROOT
//______________________________________________________________________________
      namespace ROOT {
void TBranchProxyClassDescriptor::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class ROOT::TBranchProxyClassDescriptor.
      TClass *R__cl = ::ROOT::TBranchProxyClassDescriptor::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fListOfSubProxies", &fListOfSubProxies);
      fListOfSubProxies.ShowMembers(R__insp, strcat(R__parent,"fListOfSubProxies.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fListOfBaseProxies", &fListOfBaseProxies);
      fListOfBaseProxies.ShowMembers(R__insp, strcat(R__parent,"fListOfBaseProxies.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fIsClones", &fIsClones);
      R__insp.Inspect(R__cl, R__parent, "fContainerName", &fContainerName);
      fContainerName.ShowMembers(R__insp, strcat(R__parent,"fContainerName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fIsLeafList", &fIsLeafList);
      R__insp.Inspect(R__cl, R__parent, "fSplitLevel", &fSplitLevel);
      R__insp.Inspect(R__cl, R__parent, "fRawSymbol", &fRawSymbol);
      fRawSymbol.ShowMembers(R__insp, strcat(R__parent,"fRawSymbol.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fBranchName", &fBranchName);
      fBranchName.ShowMembers(R__insp, strcat(R__parent,"fBranchName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fSubBranchPrefix", &fSubBranchPrefix);
      fSubBranchPrefix.ShowMembers(R__insp, strcat(R__parent,"fSubBranchPrefix.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fInfo", &fInfo);
      R__insp.Inspect(R__cl, R__parent, "fMaxDatamemberType", &fMaxDatamemberType);
      TNamed::ShowMembers(R__insp, R__parent);
}

} // namespace ROOT
namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLTBranchProxyClassDescriptor(void *p) {
      delete ((::ROOT::TBranchProxyClassDescriptor*)p);
   }
   static void deleteArray_ROOTcLcLTBranchProxyClassDescriptor(void *p) {
      delete [] ((::ROOT::TBranchProxyClassDescriptor*)p);
   }
   static void destruct_ROOTcLcLTBranchProxyClassDescriptor(void *p) {
      typedef ::ROOT::TBranchProxyClassDescriptor current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::TBranchProxyClassDescriptor

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLTImpProxylEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::TImpProxy<double>.
      typedef ::ROOT::Shadow::ROOT::TImpProxylEdoublegR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TImpProxy<double>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      ::ROOT::GenericShowMembers("ROOT::TBranchProxy", ( ::ROOT::TBranchProxy * )( (::ROOT::TImpProxy<double>*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLTImpProxylEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TImpProxy<double> : new ::ROOT::TImpProxy<double>;
   }
   static void *newArray_ROOTcLcLTImpProxylEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TImpProxy<double>[nElements] : new ::ROOT::TImpProxy<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLTImpProxylEdoublegR(void *p) {
      delete ((::ROOT::TImpProxy<double>*)p);
   }
   static void deleteArray_ROOTcLcLTImpProxylEdoublegR(void *p) {
      delete [] ((::ROOT::TImpProxy<double>*)p);
   }
   static void destruct_ROOTcLcLTImpProxylEdoublegR(void *p) {
      typedef ::ROOT::TImpProxy<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::TImpProxy<double>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLTImpProxylEfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::TImpProxy<float>.
      typedef ::ROOT::Shadow::ROOT::TImpProxylEfloatgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TImpProxy<float>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      ::ROOT::GenericShowMembers("ROOT::TBranchProxy", ( ::ROOT::TBranchProxy * )( (::ROOT::TImpProxy<float>*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLTImpProxylEfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TImpProxy<float> : new ::ROOT::TImpProxy<float>;
   }
   static void *newArray_ROOTcLcLTImpProxylEfloatgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TImpProxy<float>[nElements] : new ::ROOT::TImpProxy<float>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLTImpProxylEfloatgR(void *p) {
      delete ((::ROOT::TImpProxy<float>*)p);
   }
   static void deleteArray_ROOTcLcLTImpProxylEfloatgR(void *p) {
      delete [] ((::ROOT::TImpProxy<float>*)p);
   }
   static void destruct_ROOTcLcLTImpProxylEfloatgR(void *p) {
      typedef ::ROOT::TImpProxy<float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::TImpProxy<float>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLTImpProxylEunsignedsPintgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::TImpProxy<unsigned int>.
      typedef ::ROOT::Shadow::ROOT::TImpProxylEunsignedsPintgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TImpProxy<unsigned int>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      ::ROOT::GenericShowMembers("ROOT::TBranchProxy", ( ::ROOT::TBranchProxy * )( (::ROOT::TImpProxy<unsigned int>*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLTImpProxylEunsignedsPintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TImpProxy<unsigned int> : new ::ROOT::TImpProxy<unsigned int>;
   }
   static void *newArray_ROOTcLcLTImpProxylEunsignedsPintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TImpProxy<unsigned int>[nElements] : new ::ROOT::TImpProxy<unsigned int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLTImpProxylEunsignedsPintgR(void *p) {
      delete ((::ROOT::TImpProxy<unsigned int>*)p);
   }
   static void deleteArray_ROOTcLcLTImpProxylEunsignedsPintgR(void *p) {
      delete [] ((::ROOT::TImpProxy<unsigned int>*)p);
   }
   static void destruct_ROOTcLcLTImpProxylEunsignedsPintgR(void *p) {
      typedef ::ROOT::TImpProxy<unsigned int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::TImpProxy<unsigned int>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLTImpProxylEunsignedsPlonggR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::TImpProxy<unsigned long>.
      typedef ::ROOT::Shadow::ROOT::TImpProxylEunsignedsPlonggR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TImpProxy<unsigned long>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      ::ROOT::GenericShowMembers("ROOT::TBranchProxy", ( ::ROOT::TBranchProxy * )( (::ROOT::TImpProxy<unsigned long>*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLTImpProxylEunsignedsPlonggR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TImpProxy<unsigned long> : new ::ROOT::TImpProxy<unsigned long>;
   }
   static void *newArray_ROOTcLcLTImpProxylEunsignedsPlonggR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TImpProxy<unsigned long>[nElements] : new ::ROOT::TImpProxy<unsigned long>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLTImpProxylEunsignedsPlonggR(void *p) {
      delete ((::ROOT::TImpProxy<unsigned long>*)p);
   }
   static void deleteArray_ROOTcLcLTImpProxylEunsignedsPlonggR(void *p) {
      delete [] ((::ROOT::TImpProxy<unsigned long>*)p);
   }
   static void destruct_ROOTcLcLTImpProxylEunsignedsPlonggR(void *p) {
      typedef ::ROOT::TImpProxy<unsigned long> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::TImpProxy<unsigned long>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLTImpProxylEunsignedsPshortgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::TImpProxy<unsigned short>.
      typedef ::ROOT::Shadow::ROOT::TImpProxylEunsignedsPshortgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TImpProxy<unsigned short>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      ::ROOT::GenericShowMembers("ROOT::TBranchProxy", ( ::ROOT::TBranchProxy * )( (::ROOT::TImpProxy<unsigned short>*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLTImpProxylEunsignedsPshortgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TImpProxy<unsigned short> : new ::ROOT::TImpProxy<unsigned short>;
   }
   static void *newArray_ROOTcLcLTImpProxylEunsignedsPshortgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TImpProxy<unsigned short>[nElements] : new ::ROOT::TImpProxy<unsigned short>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLTImpProxylEunsignedsPshortgR(void *p) {
      delete ((::ROOT::TImpProxy<unsigned short>*)p);
   }
   static void deleteArray_ROOTcLcLTImpProxylEunsignedsPshortgR(void *p) {
      delete [] ((::ROOT::TImpProxy<unsigned short>*)p);
   }
   static void destruct_ROOTcLcLTImpProxylEunsignedsPshortgR(void *p) {
      typedef ::ROOT::TImpProxy<unsigned short> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::TImpProxy<unsigned short>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLTImpProxylEunsignedsPchargR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::TImpProxy<unsigned char>.
      typedef ::ROOT::Shadow::ROOT::TImpProxylEunsignedsPchargR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TImpProxy<unsigned char>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      ::ROOT::GenericShowMembers("ROOT::TBranchProxy", ( ::ROOT::TBranchProxy * )( (::ROOT::TImpProxy<unsigned char>*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLTImpProxylEunsignedsPchargR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TImpProxy<unsigned char> : new ::ROOT::TImpProxy<unsigned char>;
   }
   static void *newArray_ROOTcLcLTImpProxylEunsignedsPchargR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TImpProxy<unsigned char>[nElements] : new ::ROOT::TImpProxy<unsigned char>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLTImpProxylEunsignedsPchargR(void *p) {
      delete ((::ROOT::TImpProxy<unsigned char>*)p);
   }
   static void deleteArray_ROOTcLcLTImpProxylEunsignedsPchargR(void *p) {
      delete [] ((::ROOT::TImpProxy<unsigned char>*)p);
   }
   static void destruct_ROOTcLcLTImpProxylEunsignedsPchargR(void *p) {
      typedef ::ROOT::TImpProxy<unsigned char> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::TImpProxy<unsigned char>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLTImpProxylEintgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::TImpProxy<int>.
      typedef ::ROOT::Shadow::ROOT::TImpProxylEintgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TImpProxy<int>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      ::ROOT::GenericShowMembers("ROOT::TBranchProxy", ( ::ROOT::TBranchProxy * )( (::ROOT::TImpProxy<int>*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLTImpProxylEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TImpProxy<int> : new ::ROOT::TImpProxy<int>;
   }
   static void *newArray_ROOTcLcLTImpProxylEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TImpProxy<int>[nElements] : new ::ROOT::TImpProxy<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLTImpProxylEintgR(void *p) {
      delete ((::ROOT::TImpProxy<int>*)p);
   }
   static void deleteArray_ROOTcLcLTImpProxylEintgR(void *p) {
      delete [] ((::ROOT::TImpProxy<int>*)p);
   }
   static void destruct_ROOTcLcLTImpProxylEintgR(void *p) {
      typedef ::ROOT::TImpProxy<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::TImpProxy<int>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLTImpProxylElonggR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::TImpProxy<long>.
      typedef ::ROOT::Shadow::ROOT::TImpProxylElonggR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TImpProxy<long>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      ::ROOT::GenericShowMembers("ROOT::TBranchProxy", ( ::ROOT::TBranchProxy * )( (::ROOT::TImpProxy<long>*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLTImpProxylElonggR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TImpProxy<long> : new ::ROOT::TImpProxy<long>;
   }
   static void *newArray_ROOTcLcLTImpProxylElonggR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TImpProxy<long>[nElements] : new ::ROOT::TImpProxy<long>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLTImpProxylElonggR(void *p) {
      delete ((::ROOT::TImpProxy<long>*)p);
   }
   static void deleteArray_ROOTcLcLTImpProxylElonggR(void *p) {
      delete [] ((::ROOT::TImpProxy<long>*)p);
   }
   static void destruct_ROOTcLcLTImpProxylElonggR(void *p) {
      typedef ::ROOT::TImpProxy<long> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::TImpProxy<long>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLTImpProxylEshortgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::TImpProxy<short>.
      typedef ::ROOT::Shadow::ROOT::TImpProxylEshortgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TImpProxy<short>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      ::ROOT::GenericShowMembers("ROOT::TBranchProxy", ( ::ROOT::TBranchProxy * )( (::ROOT::TImpProxy<short>*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLTImpProxylEshortgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TImpProxy<short> : new ::ROOT::TImpProxy<short>;
   }
   static void *newArray_ROOTcLcLTImpProxylEshortgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TImpProxy<short>[nElements] : new ::ROOT::TImpProxy<short>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLTImpProxylEshortgR(void *p) {
      delete ((::ROOT::TImpProxy<short>*)p);
   }
   static void deleteArray_ROOTcLcLTImpProxylEshortgR(void *p) {
      delete [] ((::ROOT::TImpProxy<short>*)p);
   }
   static void destruct_ROOTcLcLTImpProxylEshortgR(void *p) {
      typedef ::ROOT::TImpProxy<short> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::TImpProxy<short>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLTImpProxylEchargR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::TImpProxy<char>.
      typedef ::ROOT::Shadow::ROOT::TImpProxylEchargR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TImpProxy<char>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      ::ROOT::GenericShowMembers("ROOT::TBranchProxy", ( ::ROOT::TBranchProxy * )( (::ROOT::TImpProxy<char>*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLTImpProxylEchargR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TImpProxy<char> : new ::ROOT::TImpProxy<char>;
   }
   static void *newArray_ROOTcLcLTImpProxylEchargR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TImpProxy<char>[nElements] : new ::ROOT::TImpProxy<char>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLTImpProxylEchargR(void *p) {
      delete ((::ROOT::TImpProxy<char>*)p);
   }
   static void deleteArray_ROOTcLcLTImpProxylEchargR(void *p) {
      delete [] ((::ROOT::TImpProxy<char>*)p);
   }
   static void destruct_ROOTcLcLTImpProxylEchargR(void *p) {
      typedef ::ROOT::TImpProxy<char> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::TImpProxy<char>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLTImpProxylEboolgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::TImpProxy<bool>.
      typedef ::ROOT::Shadow::ROOT::TImpProxylEboolgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TImpProxy<bool>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      ::ROOT::GenericShowMembers("ROOT::TBranchProxy", ( ::ROOT::TBranchProxy * )( (::ROOT::TImpProxy<bool>*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLTImpProxylEboolgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TImpProxy<bool> : new ::ROOT::TImpProxy<bool>;
   }
   static void *newArray_ROOTcLcLTImpProxylEboolgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TImpProxy<bool>[nElements] : new ::ROOT::TImpProxy<bool>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLTImpProxylEboolgR(void *p) {
      delete ((::ROOT::TImpProxy<bool>*)p);
   }
   static void deleteArray_ROOTcLcLTImpProxylEboolgR(void *p) {
      delete [] ((::ROOT::TImpProxy<bool>*)p);
   }
   static void destruct_ROOTcLcLTImpProxylEboolgR(void *p) {
      typedef ::ROOT::TImpProxy<bool> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::TImpProxy<bool>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::TArrayProxy<ROOT::TArrayType<double,0> >.
      typedef ::ROOT::Shadow::ROOT::TArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TArrayProxy<ROOT::TArrayType<double,0> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      ::ROOT::GenericShowMembers("ROOT::TBranchProxy", ( ::ROOT::TBranchProxy * )( (::ROOT::TArrayProxy<ROOT::TArrayType<double,0> >*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TArrayProxy<ROOT::TArrayType<double,0> > : new ::ROOT::TArrayProxy<ROOT::TArrayType<double,0> >;
   }
   static void *newArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TArrayProxy<ROOT::TArrayType<double,0> >[nElements] : new ::ROOT::TArrayProxy<ROOT::TArrayType<double,0> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR(void *p) {
      delete ((::ROOT::TArrayProxy<ROOT::TArrayType<double,0> >*)p);
   }
   static void deleteArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR(void *p) {
      delete [] ((::ROOT::TArrayProxy<ROOT::TArrayType<double,0> >*)p);
   }
   static void destruct_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR(void *p) {
      typedef ::ROOT::TArrayProxy<ROOT::TArrayType<double,0> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::TArrayProxy<ROOT::TArrayType<double,0> >

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::TArrayProxy<ROOT::TArrayType<float,0> >.
      typedef ::ROOT::Shadow::ROOT::TArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TArrayProxy<ROOT::TArrayType<float,0> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      ::ROOT::GenericShowMembers("ROOT::TBranchProxy", ( ::ROOT::TBranchProxy * )( (::ROOT::TArrayProxy<ROOT::TArrayType<float,0> >*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TArrayProxy<ROOT::TArrayType<float,0> > : new ::ROOT::TArrayProxy<ROOT::TArrayType<float,0> >;
   }
   static void *newArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TArrayProxy<ROOT::TArrayType<float,0> >[nElements] : new ::ROOT::TArrayProxy<ROOT::TArrayType<float,0> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR(void *p) {
      delete ((::ROOT::TArrayProxy<ROOT::TArrayType<float,0> >*)p);
   }
   static void deleteArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR(void *p) {
      delete [] ((::ROOT::TArrayProxy<ROOT::TArrayType<float,0> >*)p);
   }
   static void destruct_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR(void *p) {
      typedef ::ROOT::TArrayProxy<ROOT::TArrayType<float,0> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::TArrayProxy<ROOT::TArrayType<float,0> >

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >.
      typedef ::ROOT::Shadow::ROOT::TArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      ::ROOT::GenericShowMembers("ROOT::TBranchProxy", ( ::ROOT::TBranchProxy * )( (::ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> > : new ::ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >;
   }
   static void *newArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >[nElements] : new ::ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR(void *p) {
      delete ((::ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >*)p);
   }
   static void deleteArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR(void *p) {
      delete [] ((::ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >*)p);
   }
   static void destruct_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR(void *p) {
      typedef ::ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >.
      typedef ::ROOT::Shadow::ROOT::TArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      ::ROOT::GenericShowMembers("ROOT::TBranchProxy", ( ::ROOT::TBranchProxy * )( (::ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> > : new ::ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >;
   }
   static void *newArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >[nElements] : new ::ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR(void *p) {
      delete ((::ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >*)p);
   }
   static void deleteArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR(void *p) {
      delete [] ((::ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >*)p);
   }
   static void destruct_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR(void *p) {
      typedef ::ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >.
      typedef ::ROOT::Shadow::ROOT::TArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      ::ROOT::GenericShowMembers("ROOT::TBranchProxy", ( ::ROOT::TBranchProxy * )( (::ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> > : new ::ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >;
   }
   static void *newArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >[nElements] : new ::ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR(void *p) {
      delete ((::ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >*)p);
   }
   static void deleteArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR(void *p) {
      delete [] ((::ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >*)p);
   }
   static void destruct_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR(void *p) {
      typedef ::ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >.
      typedef ::ROOT::Shadow::ROOT::TArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      ::ROOT::GenericShowMembers("ROOT::TBranchProxy", ( ::ROOT::TBranchProxy * )( (::ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> > : new ::ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >;
   }
   static void *newArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >[nElements] : new ::ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR(void *p) {
      delete ((::ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >*)p);
   }
   static void deleteArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR(void *p) {
      delete [] ((::ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >*)p);
   }
   static void destruct_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR(void *p) {
      typedef ::ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::TArrayProxy<ROOT::TArrayType<int,0> >.
      typedef ::ROOT::Shadow::ROOT::TArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TArrayProxy<ROOT::TArrayType<int,0> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      ::ROOT::GenericShowMembers("ROOT::TBranchProxy", ( ::ROOT::TBranchProxy * )( (::ROOT::TArrayProxy<ROOT::TArrayType<int,0> >*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TArrayProxy<ROOT::TArrayType<int,0> > : new ::ROOT::TArrayProxy<ROOT::TArrayType<int,0> >;
   }
   static void *newArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TArrayProxy<ROOT::TArrayType<int,0> >[nElements] : new ::ROOT::TArrayProxy<ROOT::TArrayType<int,0> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR(void *p) {
      delete ((::ROOT::TArrayProxy<ROOT::TArrayType<int,0> >*)p);
   }
   static void deleteArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR(void *p) {
      delete [] ((::ROOT::TArrayProxy<ROOT::TArrayType<int,0> >*)p);
   }
   static void destruct_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR(void *p) {
      typedef ::ROOT::TArrayProxy<ROOT::TArrayType<int,0> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::TArrayProxy<ROOT::TArrayType<int,0> >

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::TArrayProxy<ROOT::TArrayType<long,0> >.
      typedef ::ROOT::Shadow::ROOT::TArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TArrayProxy<ROOT::TArrayType<long,0> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      ::ROOT::GenericShowMembers("ROOT::TBranchProxy", ( ::ROOT::TBranchProxy * )( (::ROOT::TArrayProxy<ROOT::TArrayType<long,0> >*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TArrayProxy<ROOT::TArrayType<long,0> > : new ::ROOT::TArrayProxy<ROOT::TArrayType<long,0> >;
   }
   static void *newArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TArrayProxy<ROOT::TArrayType<long,0> >[nElements] : new ::ROOT::TArrayProxy<ROOT::TArrayType<long,0> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR(void *p) {
      delete ((::ROOT::TArrayProxy<ROOT::TArrayType<long,0> >*)p);
   }
   static void deleteArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR(void *p) {
      delete [] ((::ROOT::TArrayProxy<ROOT::TArrayType<long,0> >*)p);
   }
   static void destruct_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR(void *p) {
      typedef ::ROOT::TArrayProxy<ROOT::TArrayType<long,0> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::TArrayProxy<ROOT::TArrayType<long,0> >

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::TArrayProxy<ROOT::TArrayType<short,0> >.
      typedef ::ROOT::Shadow::ROOT::TArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TArrayProxy<ROOT::TArrayType<short,0> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      ::ROOT::GenericShowMembers("ROOT::TBranchProxy", ( ::ROOT::TBranchProxy * )( (::ROOT::TArrayProxy<ROOT::TArrayType<short,0> >*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TArrayProxy<ROOT::TArrayType<short,0> > : new ::ROOT::TArrayProxy<ROOT::TArrayType<short,0> >;
   }
   static void *newArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TArrayProxy<ROOT::TArrayType<short,0> >[nElements] : new ::ROOT::TArrayProxy<ROOT::TArrayType<short,0> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR(void *p) {
      delete ((::ROOT::TArrayProxy<ROOT::TArrayType<short,0> >*)p);
   }
   static void deleteArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR(void *p) {
      delete [] ((::ROOT::TArrayProxy<ROOT::TArrayType<short,0> >*)p);
   }
   static void destruct_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR(void *p) {
      typedef ::ROOT::TArrayProxy<ROOT::TArrayType<short,0> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::TArrayProxy<ROOT::TArrayType<short,0> >

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::TArrayProxy<ROOT::TArrayType<char,0> >.
      typedef ::ROOT::Shadow::ROOT::TArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TArrayProxy<ROOT::TArrayType<char,0> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      ::ROOT::GenericShowMembers("ROOT::TBranchProxy", ( ::ROOT::TBranchProxy * )( (::ROOT::TArrayProxy<ROOT::TArrayType<char,0> >*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TArrayProxy<ROOT::TArrayType<char,0> > : new ::ROOT::TArrayProxy<ROOT::TArrayType<char,0> >;
   }
   static void *newArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TArrayProxy<ROOT::TArrayType<char,0> >[nElements] : new ::ROOT::TArrayProxy<ROOT::TArrayType<char,0> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR(void *p) {
      delete ((::ROOT::TArrayProxy<ROOT::TArrayType<char,0> >*)p);
   }
   static void deleteArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR(void *p) {
      delete [] ((::ROOT::TArrayProxy<ROOT::TArrayType<char,0> >*)p);
   }
   static void destruct_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR(void *p) {
      typedef ::ROOT::TArrayProxy<ROOT::TArrayType<char,0> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::TArrayProxy<ROOT::TArrayType<char,0> >

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >.
      typedef ::ROOT::Shadow::ROOT::TArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      ::ROOT::GenericShowMembers("ROOT::TBranchProxy", ( ::ROOT::TBranchProxy * )( (::ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TArrayProxy<ROOT::TArrayType<bool,0> > : new ::ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >;
   }
   static void *newArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >[nElements] : new ::ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR(void *p) {
      delete ((::ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >*)p);
   }
   static void deleteArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR(void *p) {
      delete [] ((::ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >*)p);
   }
   static void destruct_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR(void *p) {
      typedef ::ROOT::TArrayProxy<ROOT::TArrayType<bool,0> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLTClaImpProxylEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::TClaImpProxy<double>.
      typedef ::ROOT::Shadow::ROOT::TClaImpProxylEdoublegR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TClaImpProxy<double>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      ::ROOT::GenericShowMembers("ROOT::TBranchProxy", ( ::ROOT::TBranchProxy * )( (::ROOT::TClaImpProxy<double>*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLTClaImpProxylEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TClaImpProxy<double> : new ::ROOT::TClaImpProxy<double>;
   }
   static void *newArray_ROOTcLcLTClaImpProxylEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TClaImpProxy<double>[nElements] : new ::ROOT::TClaImpProxy<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLTClaImpProxylEdoublegR(void *p) {
      delete ((::ROOT::TClaImpProxy<double>*)p);
   }
   static void deleteArray_ROOTcLcLTClaImpProxylEdoublegR(void *p) {
      delete [] ((::ROOT::TClaImpProxy<double>*)p);
   }
   static void destruct_ROOTcLcLTClaImpProxylEdoublegR(void *p) {
      typedef ::ROOT::TClaImpProxy<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::TClaImpProxy<double>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLTClaImpProxylEfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::TClaImpProxy<float>.
      typedef ::ROOT::Shadow::ROOT::TClaImpProxylEfloatgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TClaImpProxy<float>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      ::ROOT::GenericShowMembers("ROOT::TBranchProxy", ( ::ROOT::TBranchProxy * )( (::ROOT::TClaImpProxy<float>*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLTClaImpProxylEfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TClaImpProxy<float> : new ::ROOT::TClaImpProxy<float>;
   }
   static void *newArray_ROOTcLcLTClaImpProxylEfloatgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TClaImpProxy<float>[nElements] : new ::ROOT::TClaImpProxy<float>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLTClaImpProxylEfloatgR(void *p) {
      delete ((::ROOT::TClaImpProxy<float>*)p);
   }
   static void deleteArray_ROOTcLcLTClaImpProxylEfloatgR(void *p) {
      delete [] ((::ROOT::TClaImpProxy<float>*)p);
   }
   static void destruct_ROOTcLcLTClaImpProxylEfloatgR(void *p) {
      typedef ::ROOT::TClaImpProxy<float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::TClaImpProxy<float>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLTClaImpProxylEunsignedsPintgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::TClaImpProxy<unsigned int>.
      typedef ::ROOT::Shadow::ROOT::TClaImpProxylEunsignedsPintgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TClaImpProxy<unsigned int>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      ::ROOT::GenericShowMembers("ROOT::TBranchProxy", ( ::ROOT::TBranchProxy * )( (::ROOT::TClaImpProxy<unsigned int>*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLTClaImpProxylEunsignedsPintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TClaImpProxy<unsigned int> : new ::ROOT::TClaImpProxy<unsigned int>;
   }
   static void *newArray_ROOTcLcLTClaImpProxylEunsignedsPintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TClaImpProxy<unsigned int>[nElements] : new ::ROOT::TClaImpProxy<unsigned int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLTClaImpProxylEunsignedsPintgR(void *p) {
      delete ((::ROOT::TClaImpProxy<unsigned int>*)p);
   }
   static void deleteArray_ROOTcLcLTClaImpProxylEunsignedsPintgR(void *p) {
      delete [] ((::ROOT::TClaImpProxy<unsigned int>*)p);
   }
   static void destruct_ROOTcLcLTClaImpProxylEunsignedsPintgR(void *p) {
      typedef ::ROOT::TClaImpProxy<unsigned int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::TClaImpProxy<unsigned int>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLTClaImpProxylEunsignedsPlonggR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::TClaImpProxy<unsigned long>.
      typedef ::ROOT::Shadow::ROOT::TClaImpProxylEunsignedsPlonggR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TClaImpProxy<unsigned long>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      ::ROOT::GenericShowMembers("ROOT::TBranchProxy", ( ::ROOT::TBranchProxy * )( (::ROOT::TClaImpProxy<unsigned long>*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLTClaImpProxylEunsignedsPlonggR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TClaImpProxy<unsigned long> : new ::ROOT::TClaImpProxy<unsigned long>;
   }
   static void *newArray_ROOTcLcLTClaImpProxylEunsignedsPlonggR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TClaImpProxy<unsigned long>[nElements] : new ::ROOT::TClaImpProxy<unsigned long>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLTClaImpProxylEunsignedsPlonggR(void *p) {
      delete ((::ROOT::TClaImpProxy<unsigned long>*)p);
   }
   static void deleteArray_ROOTcLcLTClaImpProxylEunsignedsPlonggR(void *p) {
      delete [] ((::ROOT::TClaImpProxy<unsigned long>*)p);
   }
   static void destruct_ROOTcLcLTClaImpProxylEunsignedsPlonggR(void *p) {
      typedef ::ROOT::TClaImpProxy<unsigned long> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::TClaImpProxy<unsigned long>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLTClaImpProxylEunsignedsPshortgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::TClaImpProxy<unsigned short>.
      typedef ::ROOT::Shadow::ROOT::TClaImpProxylEunsignedsPshortgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TClaImpProxy<unsigned short>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      ::ROOT::GenericShowMembers("ROOT::TBranchProxy", ( ::ROOT::TBranchProxy * )( (::ROOT::TClaImpProxy<unsigned short>*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLTClaImpProxylEunsignedsPshortgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TClaImpProxy<unsigned short> : new ::ROOT::TClaImpProxy<unsigned short>;
   }
   static void *newArray_ROOTcLcLTClaImpProxylEunsignedsPshortgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TClaImpProxy<unsigned short>[nElements] : new ::ROOT::TClaImpProxy<unsigned short>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLTClaImpProxylEunsignedsPshortgR(void *p) {
      delete ((::ROOT::TClaImpProxy<unsigned short>*)p);
   }
   static void deleteArray_ROOTcLcLTClaImpProxylEunsignedsPshortgR(void *p) {
      delete [] ((::ROOT::TClaImpProxy<unsigned short>*)p);
   }
   static void destruct_ROOTcLcLTClaImpProxylEunsignedsPshortgR(void *p) {
      typedef ::ROOT::TClaImpProxy<unsigned short> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::TClaImpProxy<unsigned short>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLTClaImpProxylEunsignedsPchargR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::TClaImpProxy<unsigned char>.
      typedef ::ROOT::Shadow::ROOT::TClaImpProxylEunsignedsPchargR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TClaImpProxy<unsigned char>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      ::ROOT::GenericShowMembers("ROOT::TBranchProxy", ( ::ROOT::TBranchProxy * )( (::ROOT::TClaImpProxy<unsigned char>*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLTClaImpProxylEunsignedsPchargR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TClaImpProxy<unsigned char> : new ::ROOT::TClaImpProxy<unsigned char>;
   }
   static void *newArray_ROOTcLcLTClaImpProxylEunsignedsPchargR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TClaImpProxy<unsigned char>[nElements] : new ::ROOT::TClaImpProxy<unsigned char>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLTClaImpProxylEunsignedsPchargR(void *p) {
      delete ((::ROOT::TClaImpProxy<unsigned char>*)p);
   }
   static void deleteArray_ROOTcLcLTClaImpProxylEunsignedsPchargR(void *p) {
      delete [] ((::ROOT::TClaImpProxy<unsigned char>*)p);
   }
   static void destruct_ROOTcLcLTClaImpProxylEunsignedsPchargR(void *p) {
      typedef ::ROOT::TClaImpProxy<unsigned char> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::TClaImpProxy<unsigned char>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLTClaImpProxylEintgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::TClaImpProxy<int>.
      typedef ::ROOT::Shadow::ROOT::TClaImpProxylEintgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TClaImpProxy<int>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      ::ROOT::GenericShowMembers("ROOT::TBranchProxy", ( ::ROOT::TBranchProxy * )( (::ROOT::TClaImpProxy<int>*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLTClaImpProxylEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TClaImpProxy<int> : new ::ROOT::TClaImpProxy<int>;
   }
   static void *newArray_ROOTcLcLTClaImpProxylEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TClaImpProxy<int>[nElements] : new ::ROOT::TClaImpProxy<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLTClaImpProxylEintgR(void *p) {
      delete ((::ROOT::TClaImpProxy<int>*)p);
   }
   static void deleteArray_ROOTcLcLTClaImpProxylEintgR(void *p) {
      delete [] ((::ROOT::TClaImpProxy<int>*)p);
   }
   static void destruct_ROOTcLcLTClaImpProxylEintgR(void *p) {
      typedef ::ROOT::TClaImpProxy<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::TClaImpProxy<int>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLTClaImpProxylElonggR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::TClaImpProxy<long>.
      typedef ::ROOT::Shadow::ROOT::TClaImpProxylElonggR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TClaImpProxy<long>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      ::ROOT::GenericShowMembers("ROOT::TBranchProxy", ( ::ROOT::TBranchProxy * )( (::ROOT::TClaImpProxy<long>*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLTClaImpProxylElonggR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TClaImpProxy<long> : new ::ROOT::TClaImpProxy<long>;
   }
   static void *newArray_ROOTcLcLTClaImpProxylElonggR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TClaImpProxy<long>[nElements] : new ::ROOT::TClaImpProxy<long>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLTClaImpProxylElonggR(void *p) {
      delete ((::ROOT::TClaImpProxy<long>*)p);
   }
   static void deleteArray_ROOTcLcLTClaImpProxylElonggR(void *p) {
      delete [] ((::ROOT::TClaImpProxy<long>*)p);
   }
   static void destruct_ROOTcLcLTClaImpProxylElonggR(void *p) {
      typedef ::ROOT::TClaImpProxy<long> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::TClaImpProxy<long>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLTClaImpProxylEshortgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::TClaImpProxy<short>.
      typedef ::ROOT::Shadow::ROOT::TClaImpProxylEshortgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TClaImpProxy<short>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      ::ROOT::GenericShowMembers("ROOT::TBranchProxy", ( ::ROOT::TBranchProxy * )( (::ROOT::TClaImpProxy<short>*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLTClaImpProxylEshortgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TClaImpProxy<short> : new ::ROOT::TClaImpProxy<short>;
   }
   static void *newArray_ROOTcLcLTClaImpProxylEshortgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TClaImpProxy<short>[nElements] : new ::ROOT::TClaImpProxy<short>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLTClaImpProxylEshortgR(void *p) {
      delete ((::ROOT::TClaImpProxy<short>*)p);
   }
   static void deleteArray_ROOTcLcLTClaImpProxylEshortgR(void *p) {
      delete [] ((::ROOT::TClaImpProxy<short>*)p);
   }
   static void destruct_ROOTcLcLTClaImpProxylEshortgR(void *p) {
      typedef ::ROOT::TClaImpProxy<short> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::TClaImpProxy<short>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLTClaImpProxylEchargR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::TClaImpProxy<char>.
      typedef ::ROOT::Shadow::ROOT::TClaImpProxylEchargR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TClaImpProxy<char>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      ::ROOT::GenericShowMembers("ROOT::TBranchProxy", ( ::ROOT::TBranchProxy * )( (::ROOT::TClaImpProxy<char>*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLTClaImpProxylEchargR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TClaImpProxy<char> : new ::ROOT::TClaImpProxy<char>;
   }
   static void *newArray_ROOTcLcLTClaImpProxylEchargR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TClaImpProxy<char>[nElements] : new ::ROOT::TClaImpProxy<char>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLTClaImpProxylEchargR(void *p) {
      delete ((::ROOT::TClaImpProxy<char>*)p);
   }
   static void deleteArray_ROOTcLcLTClaImpProxylEchargR(void *p) {
      delete [] ((::ROOT::TClaImpProxy<char>*)p);
   }
   static void destruct_ROOTcLcLTClaImpProxylEchargR(void *p) {
      typedef ::ROOT::TClaImpProxy<char> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::TClaImpProxy<char>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLTClaImpProxylEboolgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::TClaImpProxy<bool>.
      typedef ::ROOT::Shadow::ROOT::TClaImpProxylEboolgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TClaImpProxy<bool>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      ::ROOT::GenericShowMembers("ROOT::TBranchProxy", ( ::ROOT::TBranchProxy * )( (::ROOT::TClaImpProxy<bool>*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLTClaImpProxylEboolgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TClaImpProxy<bool> : new ::ROOT::TClaImpProxy<bool>;
   }
   static void *newArray_ROOTcLcLTClaImpProxylEboolgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TClaImpProxy<bool>[nElements] : new ::ROOT::TClaImpProxy<bool>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLTClaImpProxylEboolgR(void *p) {
      delete ((::ROOT::TClaImpProxy<bool>*)p);
   }
   static void deleteArray_ROOTcLcLTClaImpProxylEboolgR(void *p) {
      delete [] ((::ROOT::TClaImpProxy<bool>*)p);
   }
   static void destruct_ROOTcLcLTClaImpProxylEboolgR(void *p) {
      typedef ::ROOT::TClaImpProxy<bool> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::TClaImpProxy<bool>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> >.
      typedef ::ROOT::Shadow::ROOT::TClaArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      ::ROOT::GenericShowMembers("ROOT::TBranchProxy", ( ::ROOT::TBranchProxy * )( (::ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> >*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> > : new ::ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> >;
   }
   static void *newArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> >[nElements] : new ::ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR(void *p) {
      delete ((::ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> >*)p);
   }
   static void deleteArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR(void *p) {
      delete [] ((::ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> >*)p);
   }
   static void destruct_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR(void *p) {
      typedef ::ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> >

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> >.
      typedef ::ROOT::Shadow::ROOT::TClaArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      ::ROOT::GenericShowMembers("ROOT::TBranchProxy", ( ::ROOT::TBranchProxy * )( (::ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> >*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> > : new ::ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> >;
   }
   static void *newArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> >[nElements] : new ::ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR(void *p) {
      delete ((::ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> >*)p);
   }
   static void deleteArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR(void *p) {
      delete [] ((::ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> >*)p);
   }
   static void destruct_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR(void *p) {
      typedef ::ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> >

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >.
      typedef ::ROOT::Shadow::ROOT::TClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      ::ROOT::GenericShowMembers("ROOT::TBranchProxy", ( ::ROOT::TBranchProxy * )( (::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> > : new ::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >;
   }
   static void *newArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >[nElements] : new ::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR(void *p) {
      delete ((::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >*)p);
   }
   static void deleteArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR(void *p) {
      delete [] ((::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >*)p);
   }
   static void destruct_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR(void *p) {
      typedef ::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >.
      typedef ::ROOT::Shadow::ROOT::TClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      ::ROOT::GenericShowMembers("ROOT::TBranchProxy", ( ::ROOT::TBranchProxy * )( (::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> > : new ::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >;
   }
   static void *newArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >[nElements] : new ::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR(void *p) {
      delete ((::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >*)p);
   }
   static void deleteArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR(void *p) {
      delete [] ((::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >*)p);
   }
   static void destruct_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR(void *p) {
      typedef ::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >.
      typedef ::ROOT::Shadow::ROOT::TClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      ::ROOT::GenericShowMembers("ROOT::TBranchProxy", ( ::ROOT::TBranchProxy * )( (::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> > : new ::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >;
   }
   static void *newArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >[nElements] : new ::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR(void *p) {
      delete ((::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >*)p);
   }
   static void deleteArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR(void *p) {
      delete [] ((::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >*)p);
   }
   static void destruct_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR(void *p) {
      typedef ::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >.
      typedef ::ROOT::Shadow::ROOT::TClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      ::ROOT::GenericShowMembers("ROOT::TBranchProxy", ( ::ROOT::TBranchProxy * )( (::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> > : new ::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >;
   }
   static void *newArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >[nElements] : new ::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR(void *p) {
      delete ((::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >*)p);
   }
   static void deleteArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR(void *p) {
      delete [] ((::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >*)p);
   }
   static void destruct_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR(void *p) {
      typedef ::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >.
      typedef ::ROOT::Shadow::ROOT::TClaArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      ::ROOT::GenericShowMembers("ROOT::TBranchProxy", ( ::ROOT::TBranchProxy * )( (::ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> > : new ::ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >;
   }
   static void *newArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >[nElements] : new ::ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR(void *p) {
      delete ((::ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >*)p);
   }
   static void deleteArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR(void *p) {
      delete [] ((::ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >*)p);
   }
   static void destruct_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR(void *p) {
      typedef ::ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >.
      typedef ::ROOT::Shadow::ROOT::TClaArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      ::ROOT::GenericShowMembers("ROOT::TBranchProxy", ( ::ROOT::TBranchProxy * )( (::ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> > : new ::ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >;
   }
   static void *newArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >[nElements] : new ::ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR(void *p) {
      delete ((::ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >*)p);
   }
   static void deleteArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR(void *p) {
      delete [] ((::ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >*)p);
   }
   static void destruct_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR(void *p) {
      typedef ::ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> >.
      typedef ::ROOT::Shadow::ROOT::TClaArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      ::ROOT::GenericShowMembers("ROOT::TBranchProxy", ( ::ROOT::TBranchProxy * )( (::ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> >*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> > : new ::ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> >;
   }
   static void *newArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> >[nElements] : new ::ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR(void *p) {
      delete ((::ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> >*)p);
   }
   static void deleteArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR(void *p) {
      delete [] ((::ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> >*)p);
   }
   static void destruct_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR(void *p) {
      typedef ::ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> >

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >.
      typedef ::ROOT::Shadow::ROOT::TClaArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      ::ROOT::GenericShowMembers("ROOT::TBranchProxy", ( ::ROOT::TBranchProxy * )( (::ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> > : new ::ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >;
   }
   static void *newArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >[nElements] : new ::ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR(void *p) {
      delete ((::ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >*)p);
   }
   static void deleteArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR(void *p) {
      delete [] ((::ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >*)p);
   }
   static void destruct_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR(void *p) {
      typedef ::ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >.
      typedef ::ROOT::Shadow::ROOT::TClaArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      ::ROOT::GenericShowMembers("ROOT::TBranchProxy", ( ::ROOT::TBranchProxy * )( (::ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> > : new ::ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >;
   }
   static void *newArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >[nElements] : new ::ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR(void *p) {
      delete ((::ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >*)p);
   }
   static void deleteArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR(void *p) {
      delete [] ((::ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >*)p);
   }
   static void destruct_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR(void *p) {
      typedef ::ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLTImpProxylELong64_tgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::TImpProxy<long long>.
      typedef ::ROOT::Shadow::ROOT::TImpProxylElongsPlonggR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TImpProxy<long long>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      ::ROOT::GenericShowMembers("ROOT::TBranchProxy", ( ::ROOT::TBranchProxy * )( (::ROOT::TImpProxy<long long>*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLTImpProxylELong64_tgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TImpProxy<Long64_t> : new ::ROOT::TImpProxy<Long64_t>;
   }
   static void *newArray_ROOTcLcLTImpProxylELong64_tgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TImpProxy<Long64_t>[nElements] : new ::ROOT::TImpProxy<Long64_t>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLTImpProxylELong64_tgR(void *p) {
      delete ((::ROOT::TImpProxy<Long64_t>*)p);
   }
   static void deleteArray_ROOTcLcLTImpProxylELong64_tgR(void *p) {
      delete [] ((::ROOT::TImpProxy<Long64_t>*)p);
   }
   static void destruct_ROOTcLcLTImpProxylELong64_tgR(void *p) {
      typedef ::ROOT::TImpProxy<Long64_t> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::TImpProxy<Long64_t>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLTImpProxylEULong64_tgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::TImpProxy<unsigned long long>.
      typedef ::ROOT::Shadow::ROOT::TImpProxylEunsignedsPlongsPlonggR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TImpProxy<unsigned long long>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      ::ROOT::GenericShowMembers("ROOT::TBranchProxy", ( ::ROOT::TBranchProxy * )( (::ROOT::TImpProxy<unsigned long long>*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLTImpProxylEULong64_tgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TImpProxy<ULong64_t> : new ::ROOT::TImpProxy<ULong64_t>;
   }
   static void *newArray_ROOTcLcLTImpProxylEULong64_tgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TImpProxy<ULong64_t>[nElements] : new ::ROOT::TImpProxy<ULong64_t>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLTImpProxylEULong64_tgR(void *p) {
      delete ((::ROOT::TImpProxy<ULong64_t>*)p);
   }
   static void deleteArray_ROOTcLcLTImpProxylEULong64_tgR(void *p) {
      delete [] ((::ROOT::TImpProxy<ULong64_t>*)p);
   }
   static void destruct_ROOTcLcLTImpProxylEULong64_tgR(void *p) {
      typedef ::ROOT::TImpProxy<ULong64_t> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::TImpProxy<ULong64_t>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelELong64_tcO0gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::TArrayProxy<ROOT::TArrayType<long long,0> >.
      typedef ::ROOT::Shadow::ROOT::TArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TArrayProxy<ROOT::TArrayType<long long,0> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      ::ROOT::GenericShowMembers("ROOT::TBranchProxy", ( ::ROOT::TBranchProxy * )( (::ROOT::TArrayProxy<ROOT::TArrayType<long long,0> >*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelELong64_tcO0gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TArrayProxy<ROOT::TArrayType<Long64_t,0> > : new ::ROOT::TArrayProxy<ROOT::TArrayType<Long64_t,0> >;
   }
   static void *newArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelELong64_tcO0gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TArrayProxy<ROOT::TArrayType<Long64_t,0> >[nElements] : new ::ROOT::TArrayProxy<ROOT::TArrayType<Long64_t,0> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelELong64_tcO0gRsPgR(void *p) {
      delete ((::ROOT::TArrayProxy<ROOT::TArrayType<Long64_t,0> >*)p);
   }
   static void deleteArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelELong64_tcO0gRsPgR(void *p) {
      delete [] ((::ROOT::TArrayProxy<ROOT::TArrayType<Long64_t,0> >*)p);
   }
   static void destruct_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelELong64_tcO0gRsPgR(void *p) {
      typedef ::ROOT::TArrayProxy<ROOT::TArrayType<Long64_t,0> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::TArrayProxy<ROOT::TArrayType<Long64_t,0> >

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEULong64_tcO0gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::TArrayProxy<ROOT::TArrayType<unsigned long long,0> >.
      typedef ::ROOT::Shadow::ROOT::TArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TArrayProxy<ROOT::TArrayType<unsigned long long,0> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      ::ROOT::GenericShowMembers("ROOT::TBranchProxy", ( ::ROOT::TBranchProxy * )( (::ROOT::TArrayProxy<ROOT::TArrayType<unsigned long long,0> >*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEULong64_tcO0gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TArrayProxy<ROOT::TArrayType<ULong64_t,0> > : new ::ROOT::TArrayProxy<ROOT::TArrayType<ULong64_t,0> >;
   }
   static void *newArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEULong64_tcO0gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TArrayProxy<ROOT::TArrayType<ULong64_t,0> >[nElements] : new ::ROOT::TArrayProxy<ROOT::TArrayType<ULong64_t,0> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEULong64_tcO0gRsPgR(void *p) {
      delete ((::ROOT::TArrayProxy<ROOT::TArrayType<ULong64_t,0> >*)p);
   }
   static void deleteArray_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEULong64_tcO0gRsPgR(void *p) {
      delete [] ((::ROOT::TArrayProxy<ROOT::TArrayType<ULong64_t,0> >*)p);
   }
   static void destruct_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEULong64_tcO0gRsPgR(void *p) {
      typedef ::ROOT::TArrayProxy<ROOT::TArrayType<ULong64_t,0> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::TArrayProxy<ROOT::TArrayType<ULong64_t,0> >

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLTClaImpProxylELong64_tgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::TClaImpProxy<long long>.
      typedef ::ROOT::Shadow::ROOT::TClaImpProxylElongsPlonggR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TClaImpProxy<long long>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      ::ROOT::GenericShowMembers("ROOT::TBranchProxy", ( ::ROOT::TBranchProxy * )( (::ROOT::TClaImpProxy<long long>*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLTClaImpProxylELong64_tgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TClaImpProxy<Long64_t> : new ::ROOT::TClaImpProxy<Long64_t>;
   }
   static void *newArray_ROOTcLcLTClaImpProxylELong64_tgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TClaImpProxy<Long64_t>[nElements] : new ::ROOT::TClaImpProxy<Long64_t>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLTClaImpProxylELong64_tgR(void *p) {
      delete ((::ROOT::TClaImpProxy<Long64_t>*)p);
   }
   static void deleteArray_ROOTcLcLTClaImpProxylELong64_tgR(void *p) {
      delete [] ((::ROOT::TClaImpProxy<Long64_t>*)p);
   }
   static void destruct_ROOTcLcLTClaImpProxylELong64_tgR(void *p) {
      typedef ::ROOT::TClaImpProxy<Long64_t> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::TClaImpProxy<Long64_t>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLTClaImpProxylEULong64_tgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::TClaImpProxy<unsigned long long>.
      typedef ::ROOT::Shadow::ROOT::TClaImpProxylEunsignedsPlongsPlonggR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TClaImpProxy<unsigned long long>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      ::ROOT::GenericShowMembers("ROOT::TBranchProxy", ( ::ROOT::TBranchProxy * )( (::ROOT::TClaImpProxy<unsigned long long>*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLTClaImpProxylEULong64_tgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TClaImpProxy<ULong64_t> : new ::ROOT::TClaImpProxy<ULong64_t>;
   }
   static void *newArray_ROOTcLcLTClaImpProxylEULong64_tgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TClaImpProxy<ULong64_t>[nElements] : new ::ROOT::TClaImpProxy<ULong64_t>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLTClaImpProxylEULong64_tgR(void *p) {
      delete ((::ROOT::TClaImpProxy<ULong64_t>*)p);
   }
   static void deleteArray_ROOTcLcLTClaImpProxylEULong64_tgR(void *p) {
      delete [] ((::ROOT::TClaImpProxy<ULong64_t>*)p);
   }
   static void destruct_ROOTcLcLTClaImpProxylEULong64_tgR(void *p) {
      typedef ::ROOT::TClaImpProxy<ULong64_t> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::TClaImpProxy<ULong64_t>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEULong64_tcO0gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long long,0> >.
      typedef ::ROOT::Shadow::ROOT::TClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long long,0> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      ::ROOT::GenericShowMembers("ROOT::TBranchProxy", ( ::ROOT::TBranchProxy * )( (::ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long long,0> >*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEULong64_tcO0gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TClaArrayProxy<ROOT::TArrayType<ULong64_t,0> > : new ::ROOT::TClaArrayProxy<ROOT::TArrayType<ULong64_t,0> >;
   }
   static void *newArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEULong64_tcO0gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TClaArrayProxy<ROOT::TArrayType<ULong64_t,0> >[nElements] : new ::ROOT::TClaArrayProxy<ROOT::TArrayType<ULong64_t,0> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEULong64_tcO0gRsPgR(void *p) {
      delete ((::ROOT::TClaArrayProxy<ROOT::TArrayType<ULong64_t,0> >*)p);
   }
   static void deleteArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEULong64_tcO0gRsPgR(void *p) {
      delete [] ((::ROOT::TClaArrayProxy<ROOT::TArrayType<ULong64_t,0> >*)p);
   }
   static void destruct_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEULong64_tcO0gRsPgR(void *p) {
      typedef ::ROOT::TClaArrayProxy<ROOT::TArrayType<ULong64_t,0> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::TClaArrayProxy<ROOT::TArrayType<ULong64_t,0> >

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelELong64_tcO0gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::TClaArrayProxy<ROOT::TArrayType<long long,0> >.
      typedef ::ROOT::Shadow::ROOT::TClaArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::TClaArrayProxy<ROOT::TArrayType<long long,0> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      ::ROOT::GenericShowMembers("ROOT::TBranchProxy", ( ::ROOT::TBranchProxy * )( (::ROOT::TClaArrayProxy<ROOT::TArrayType<long long,0> >*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelELong64_tcO0gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TClaArrayProxy<ROOT::TArrayType<Long64_t,0> > : new ::ROOT::TClaArrayProxy<ROOT::TArrayType<Long64_t,0> >;
   }
   static void *newArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelELong64_tcO0gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::TClaArrayProxy<ROOT::TArrayType<Long64_t,0> >[nElements] : new ::ROOT::TClaArrayProxy<ROOT::TArrayType<Long64_t,0> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelELong64_tcO0gRsPgR(void *p) {
      delete ((::ROOT::TClaArrayProxy<ROOT::TArrayType<Long64_t,0> >*)p);
   }
   static void deleteArray_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelELong64_tcO0gRsPgR(void *p) {
      delete [] ((::ROOT::TClaArrayProxy<ROOT::TArrayType<Long64_t,0> >*)p);
   }
   static void destruct_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelELong64_tcO0gRsPgR(void *p) {
      typedef ::ROOT::TClaArrayProxy<ROOT::TArrayType<Long64_t,0> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::TClaArrayProxy<ROOT::TArrayType<Long64_t,0> >

namespace ROOT {
   void listlEROOTcLcLTBranchProxymUgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void listlEROOTcLcLTBranchProxymUgR_Dictionary();
   static void *new_listlEROOTcLcLTBranchProxymUgR(void *p = 0);
   static void *newArray_listlEROOTcLcLTBranchProxymUgR(Long_t size, void *p);
   static void delete_listlEROOTcLcLTBranchProxymUgR(void *p);
   static void deleteArray_listlEROOTcLcLTBranchProxymUgR(void *p);
   static void destruct_listlEROOTcLcLTBranchProxymUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const list<ROOT::TBranchProxy*>*)
   {
      list<ROOT::TBranchProxy*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(list<ROOT::TBranchProxy*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("list<ROOT::TBranchProxy*>", -2, "prec_stl/list", 44,
                  typeid(list<ROOT::TBranchProxy*>), DefineBehavior(ptr, ptr),
                  0, &listlEROOTcLcLTBranchProxymUgR_Dictionary, isa_proxy, 0,
                  sizeof(list<ROOT::TBranchProxy*>) );
      instance.SetNew(&new_listlEROOTcLcLTBranchProxymUgR);
      instance.SetNewArray(&newArray_listlEROOTcLcLTBranchProxymUgR);
      instance.SetDelete(&delete_listlEROOTcLcLTBranchProxymUgR);
      instance.SetDeleteArray(&deleteArray_listlEROOTcLcLTBranchProxymUgR);
      instance.SetDestructor(&destruct_listlEROOTcLcLTBranchProxymUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< list<ROOT::TBranchProxy*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const list<ROOT::TBranchProxy*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void listlEROOTcLcLTBranchProxymUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const list<ROOT::TBranchProxy*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_listlEROOTcLcLTBranchProxymUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) list<ROOT::TBranchProxy*> : new list<ROOT::TBranchProxy*>;
   }
   static void *newArray_listlEROOTcLcLTBranchProxymUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) list<ROOT::TBranchProxy*>[nElements] : new list<ROOT::TBranchProxy*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_listlEROOTcLcLTBranchProxymUgR(void *p) {
      delete ((list<ROOT::TBranchProxy*>*)p);
   }
   static void deleteArray_listlEROOTcLcLTBranchProxymUgR(void *p) {
      delete [] ((list<ROOT::TBranchProxy*>*)p);
   }
   static void destruct_listlEROOTcLcLTBranchProxymUgR(void *p) {
      typedef list<ROOT::TBranchProxy*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class list<ROOT::TBranchProxy*>

namespace ROOT {
   void listlEROOTcLcLTFriendProxymUgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void listlEROOTcLcLTFriendProxymUgR_Dictionary();
   static void *new_listlEROOTcLcLTFriendProxymUgR(void *p = 0);
   static void *newArray_listlEROOTcLcLTFriendProxymUgR(Long_t size, void *p);
   static void delete_listlEROOTcLcLTFriendProxymUgR(void *p);
   static void deleteArray_listlEROOTcLcLTFriendProxymUgR(void *p);
   static void destruct_listlEROOTcLcLTFriendProxymUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const list<ROOT::TFriendProxy*>*)
   {
      list<ROOT::TFriendProxy*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(list<ROOT::TFriendProxy*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("list<ROOT::TFriendProxy*>", -2, "prec_stl/list", 44,
                  typeid(list<ROOT::TFriendProxy*>), DefineBehavior(ptr, ptr),
                  0, &listlEROOTcLcLTFriendProxymUgR_Dictionary, isa_proxy, 0,
                  sizeof(list<ROOT::TFriendProxy*>) );
      instance.SetNew(&new_listlEROOTcLcLTFriendProxymUgR);
      instance.SetNewArray(&newArray_listlEROOTcLcLTFriendProxymUgR);
      instance.SetDelete(&delete_listlEROOTcLcLTFriendProxymUgR);
      instance.SetDeleteArray(&deleteArray_listlEROOTcLcLTFriendProxymUgR);
      instance.SetDestructor(&destruct_listlEROOTcLcLTFriendProxymUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< list<ROOT::TFriendProxy*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const list<ROOT::TFriendProxy*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void listlEROOTcLcLTFriendProxymUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const list<ROOT::TFriendProxy*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_listlEROOTcLcLTFriendProxymUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) list<ROOT::TFriendProxy*> : new list<ROOT::TFriendProxy*>;
   }
   static void *newArray_listlEROOTcLcLTFriendProxymUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) list<ROOT::TFriendProxy*>[nElements] : new list<ROOT::TFriendProxy*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_listlEROOTcLcLTFriendProxymUgR(void *p) {
      delete ((list<ROOT::TFriendProxy*>*)p);
   }
   static void deleteArray_listlEROOTcLcLTFriendProxymUgR(void *p) {
      delete [] ((list<ROOT::TFriendProxy*>*)p);
   }
   static void destruct_listlEROOTcLcLTFriendProxymUgR(void *p) {
      typedef list<ROOT::TFriendProxy*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class list<ROOT::TFriendProxy*>

namespace ROOT {
   void vectorlETChainIndexcLcLTChainIndexEntrygR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void vectorlETChainIndexcLcLTChainIndexEntrygR_Dictionary();
   static void *new_vectorlETChainIndexcLcLTChainIndexEntrygR(void *p = 0);
   static void *newArray_vectorlETChainIndexcLcLTChainIndexEntrygR(Long_t size, void *p);
   static void delete_vectorlETChainIndexcLcLTChainIndexEntrygR(void *p);
   static void deleteArray_vectorlETChainIndexcLcLTChainIndexEntrygR(void *p);
   static void destruct_vectorlETChainIndexcLcLTChainIndexEntrygR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<TChainIndex::TChainIndexEntry>*)
   {
      vector<TChainIndex::TChainIndexEntry> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TChainIndex::TChainIndexEntry>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TChainIndex::TChainIndexEntry>", -2, "prec_stl/vector", 49,
                  typeid(vector<TChainIndex::TChainIndexEntry>), DefineBehavior(ptr, ptr),
                  0, &vectorlETChainIndexcLcLTChainIndexEntrygR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TChainIndex::TChainIndexEntry>) );
      instance.SetNew(&new_vectorlETChainIndexcLcLTChainIndexEntrygR);
      instance.SetNewArray(&newArray_vectorlETChainIndexcLcLTChainIndexEntrygR);
      instance.SetDelete(&delete_vectorlETChainIndexcLcLTChainIndexEntrygR);
      instance.SetDeleteArray(&deleteArray_vectorlETChainIndexcLcLTChainIndexEntrygR);
      instance.SetDestructor(&destruct_vectorlETChainIndexcLcLTChainIndexEntrygR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<TChainIndex::TChainIndexEntry> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TChainIndex::TChainIndexEntry>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETChainIndexcLcLTChainIndexEntrygR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<TChainIndex::TChainIndexEntry>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlETChainIndexcLcLTChainIndexEntrygR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TChainIndex::TChainIndexEntry> : new vector<TChainIndex::TChainIndexEntry>;
   }
   static void *newArray_vectorlETChainIndexcLcLTChainIndexEntrygR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TChainIndex::TChainIndexEntry>[nElements] : new vector<TChainIndex::TChainIndexEntry>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETChainIndexcLcLTChainIndexEntrygR(void *p) {
      delete ((vector<TChainIndex::TChainIndexEntry>*)p);
   }
   static void deleteArray_vectorlETChainIndexcLcLTChainIndexEntrygR(void *p) {
      delete [] ((vector<TChainIndex::TChainIndexEntry>*)p);
   }
   static void destruct_vectorlETChainIndexcLcLTChainIndexEntrygR(void *p) {
      typedef vector<TChainIndex::TChainIndexEntry> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<TChainIndex::TChainIndexEntry>

/********************************************************
* tree/treeplayer/src/G__TreePlayer.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__TreePlayer();

extern "C" void G__set_cpp_environmentG__TreePlayer() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("TBranchProxyClassDescriptor.h");
  G__add_compiledheader("TBranchProxyDescriptor.h");
  G__add_compiledheader("TBranchProxyDirector.h");
  G__add_compiledheader("TBranchProxy.h");
  G__add_compiledheader("TBranchProxyTemplate.h");
  G__add_compiledheader("TChainIndex.h");
  G__add_compiledheader("TFileDrawMap.h");
  G__add_compiledheader("TFormLeafInfo.h");
  G__add_compiledheader("TFormLeafInfoReference.h");
  G__add_compiledheader("TFriendProxyDescriptor.h");
  G__add_compiledheader("TFriendProxy.h");
  G__add_compiledheader("TRefArrayProxy.h");
  G__add_compiledheader("TRefProxy.h");
  G__add_compiledheader("TSelectorDraw.h");
  G__add_compiledheader("TSelectorEntries.h");
  G__add_compiledheader("TTreeDrawArgsParser.h");
  G__add_compiledheader("TTreeFormula.h");
  G__add_compiledheader("TTreeFormulaManager.h");
  G__add_compiledheader("TTreeIndex.h");
  G__add_compiledheader("TTreePerfStats.h");
  G__add_compiledheader("TTreePlayer.h");
  G__add_compiledheader("TTreeProxyGenerator.h");
  G__add_compiledheader("TTreeTableInterface.h");
  G__cpp_reset_tagtableG__TreePlayer();
}
#include <new>
extern "C" int G__cpp_dllrevG__TreePlayer() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* ROOT */
static int G__G__TreePlayer_18_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ROOT::CreateClass(
(const char*) G__int(libp->para[0]), (Version_t) G__int(libp->para[1])
, *(type_info*) libp->para[2].ref, (TVirtualIsAProxy*) G__int(libp->para[3])
, (ShowMembersFunc_t) G__int(libp->para[4]), (const char*) G__int(libp->para[5])
, (const char*) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_18_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ROOT::AddClass((const char*) G__int(libp->para[0]), (Version_t) G__int(libp->para[1])
, *(type_info*) libp->para[2].ref, (VoidFuncPtr_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_18_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ROOT::RemoveClass((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_18_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ROOT::ResetClassVersion((TClass*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Short_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_18_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ROOT::RegisterClassTemplate((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_18_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ROOT::DefineBehavior((void*) G__int(libp->para[0]), (void*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_18_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ROOT::CreateClass((const char*) G__int(libp->para[0]), (Version_t) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::TBranchProxyDescriptor */
static int G__G__TreePlayer_117_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TBranchProxyDescriptor* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TBranchProxyDescriptor(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]), (Bool_t) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) ROOT::TBranchProxyDescriptor(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]), (Bool_t) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TBranchProxyDescriptor(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) ROOT::TBranchProxyDescriptor(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TBranchProxyDescriptor(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) ROOT::TBranchProxyDescriptor(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TBranchProxyDescriptor(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ROOT::TBranchProxyDescriptor(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxyDescriptor));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_117_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((ROOT::TBranchProxyDescriptor*) G__getstructoffset())->GetDataName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_117_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((ROOT::TBranchProxyDescriptor*) G__getstructoffset())->GetTypeName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_117_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((ROOT::TBranchProxyDescriptor*) G__getstructoffset())->GetBranchName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_117_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((ROOT::TBranchProxyDescriptor*) G__getstructoffset())->IsEquivalent((const ROOT::TBranchProxyDescriptor*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((ROOT::TBranchProxyDescriptor*) G__getstructoffset())->IsEquivalent((const ROOT::TBranchProxyDescriptor*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_117_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::TBranchProxyDescriptor*) G__getstructoffset())->IsSplit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_117_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::TBranchProxyDescriptor*) G__getstructoffset())->OutputDecl((FILE*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_117_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::TBranchProxyDescriptor*) G__getstructoffset())->OutputInit((FILE*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_117_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ROOT::TBranchProxyDescriptor::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_117_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ROOT::TBranchProxyDescriptor::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_117_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ROOT::TBranchProxyDescriptor::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_117_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ROOT::TBranchProxyDescriptor::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_117_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::TBranchProxyDescriptor*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_117_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ROOT::TBranchProxyDescriptor::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_117_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ROOT::TBranchProxyDescriptor::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_117_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ROOT::TBranchProxyDescriptor::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_117_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ROOT::TBranchProxyDescriptor::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_117_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::TBranchProxyDescriptor* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::TBranchProxyDescriptor(*(ROOT::TBranchProxyDescriptor*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxyDescriptor));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::TBranchProxyDescriptor G__TROOTcLcLTBranchProxyDescriptor;
static int G__G__TreePlayer_117_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::TBranchProxyDescriptor*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::TBranchProxyDescriptor*) (soff+(sizeof(ROOT::TBranchProxyDescriptor)*i)))->~G__TROOTcLcLTBranchProxyDescriptor();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::TBranchProxyDescriptor*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::TBranchProxyDescriptor*) (soff))->~G__TROOTcLcLTBranchProxyDescriptor();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__TreePlayer_117_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TBranchProxyDescriptor* dest = (ROOT::TBranchProxyDescriptor*) G__getstructoffset();
   *dest = *(ROOT::TBranchProxyDescriptor*) libp->para[0].ref;
   const ROOT::TBranchProxyDescriptor& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::TBranchProxyClassDescriptor */
static int G__G__TreePlayer_118_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TBranchProxyClassDescriptor* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TBranchProxyClassDescriptor(
(const char*) G__int(libp->para[0]), (TVirtualStreamerInfo*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (ROOT::TBranchProxyClassDescriptor::ELocation) G__int(libp->para[3])
, (UInt_t) G__int(libp->para[4]), *(TString*) libp->para[5].ref);
   } else {
     p = new((void*) gvp) ROOT::TBranchProxyClassDescriptor(
(const char*) G__int(libp->para[0]), (TVirtualStreamerInfo*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (ROOT::TBranchProxyClassDescriptor::ELocation) G__int(libp->para[3])
, (UInt_t) G__int(libp->para[4]), *(TString*) libp->para[5].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxyClassDescriptor));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_118_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TBranchProxyClassDescriptor* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TBranchProxyClassDescriptor((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) ROOT::TBranchProxyClassDescriptor((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxyClassDescriptor));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_118_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TBranchProxyClassDescriptor* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TBranchProxyClassDescriptor(
(const char*) G__int(libp->para[0]), (TVirtualStreamerInfo*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (ROOT::TBranchProxyClassDescriptor::ELocation) G__int(libp->para[4]), (UInt_t) G__int(libp->para[5])
, *(TString*) libp->para[6].ref);
   } else {
     p = new((void*) gvp) ROOT::TBranchProxyClassDescriptor(
(const char*) G__int(libp->para[0]), (TVirtualStreamerInfo*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (ROOT::TBranchProxyClassDescriptor::ELocation) G__int(libp->para[4]), (UInt_t) G__int(libp->para[5])
, *(TString*) libp->para[6].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxyClassDescriptor));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_118_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const ROOT::TBranchProxyClassDescriptor*) G__getstructoffset())->GetBranchName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_118_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const ROOT::TBranchProxyClassDescriptor*) G__getstructoffset())->GetSubBranchPrefix());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_118_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const ROOT::TBranchProxyClassDescriptor*) G__getstructoffset())->GetRawSymbol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_118_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const ROOT::TBranchProxyClassDescriptor*) G__getstructoffset())->GetInfo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_118_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const ROOT::TBranchProxyClassDescriptor*) G__getstructoffset())->GetSplitLevel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_118_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::TBranchProxyClassDescriptor*) G__getstructoffset())->IsEquivalent((const ROOT::TBranchProxyClassDescriptor*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_118_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::TBranchProxyClassDescriptor*) G__getstructoffset())->AddDescriptor((ROOT::TBranchProxyDescriptor*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_118_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::TBranchProxyClassDescriptor*) G__getstructoffset())->IsLoaded());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_118_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ROOT::TBranchProxyClassDescriptor::IsLoaded((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_118_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::TBranchProxyClassDescriptor*) G__getstructoffset())->IsClones());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_118_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::TBranchProxyClassDescriptor*) G__getstructoffset())->IsSTL());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_118_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const ROOT::TBranchProxyClassDescriptor*) G__getstructoffset())->GetIsClones());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_118_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const ROOT::TBranchProxyClassDescriptor*) G__getstructoffset())->GetContainerName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_118_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::TBranchProxyClassDescriptor*) G__getstructoffset())->OutputDecl((FILE*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_118_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ROOT::TBranchProxyClassDescriptor::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_118_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ROOT::TBranchProxyClassDescriptor::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_118_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ROOT::TBranchProxyClassDescriptor::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_118_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ROOT::TBranchProxyClassDescriptor::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_118_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::TBranchProxyClassDescriptor*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_118_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ROOT::TBranchProxyClassDescriptor::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_118_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ROOT::TBranchProxyClassDescriptor::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_118_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ROOT::TBranchProxyClassDescriptor::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_118_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ROOT::TBranchProxyClassDescriptor::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::TBranchProxyClassDescriptor G__TROOTcLcLTBranchProxyClassDescriptor;
static int G__G__TreePlayer_118_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::TBranchProxyClassDescriptor*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::TBranchProxyClassDescriptor*) (soff+(sizeof(ROOT::TBranchProxyClassDescriptor)*i)))->~G__TROOTcLcLTBranchProxyClassDescriptor();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::TBranchProxyClassDescriptor*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::TBranchProxyClassDescriptor*) (soff))->~G__TROOTcLcLTBranchProxyClassDescriptor();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TTreeFormula */
static int G__G__TreePlayer_163_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TTreeFormula* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TTreeFormula[n];
     } else {
       p = new((void*) gvp) TTreeFormula[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TTreeFormula;
     } else {
       p = new((void*) gvp) TTreeFormula;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormula));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_163_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TTreeFormula* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TTreeFormula(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (TTree*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) TTreeFormula(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (TTree*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormula));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_163_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TTreeFormula*) G__getstructoffset())->EvalClass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_163_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((TTreeFormula*) G__getstructoffset())->EvalInstance((Int_t) G__int(libp->para[0]), (const char**) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((TTreeFormula*) G__getstructoffset())->EvalInstance((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((TTreeFormula*) G__getstructoffset())->EvalInstance());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_163_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 67, (long) ((TTreeFormula*) G__getstructoffset())->EvalStringInstance((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 67, (long) ((TTreeFormula*) G__getstructoffset())->EvalStringInstance());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_163_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 89, (long) ((TTreeFormula*) G__getstructoffset())->EvalObject((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 89, (long) ((TTreeFormula*) G__getstructoffset())->EvalObject());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_163_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TTreeFormula*) G__getstructoffset())->GetLeafInfo((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_163_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TTreeFormula*) G__getstructoffset())->GetManager());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_163_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TTreeFormula*) G__getstructoffset())->GetMethodCall((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_163_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TTreeFormula*) G__getstructoffset())->GetMultiplicity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_163_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TTreeFormula*) G__getstructoffset())->GetLeaf((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_163_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TTreeFormula*) G__getstructoffset())->GetNcodes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_163_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TTreeFormula*) G__getstructoffset())->GetNdata());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_163_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((const TTreeFormula*) G__getstructoffset())->IsInteger((Bool_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((const TTreeFormula*) G__getstructoffset())->IsInteger());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_163_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TTreeFormula*) G__getstructoffset())->IsQuickLoad());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_163_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TTreeFormula*) G__getstructoffset())->IsString());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_163_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 67, (long) ((const TTreeFormula*) G__getstructoffset())->PrintValue((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 67, (long) ((const TTreeFormula*) G__getstructoffset())->PrintValue());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_163_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 67, (long) ((const TTreeFormula*) G__getstructoffset())->PrintValue((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 67, (long) ((const TTreeFormula*) G__getstructoffset())->PrintValue((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_163_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TTreeFormula*) G__getstructoffset())->SetAxis((TAxis*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TTreeFormula*) G__getstructoffset())->SetAxis();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_163_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTreeFormula*) G__getstructoffset())->SetQuickLoad((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_163_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTreeFormula*) G__getstructoffset())->SetTree((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_163_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTreeFormula*) G__getstructoffset())->ResetLoading();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_163_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TTreeFormula*) G__getstructoffset())->GetTree());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_163_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTreeFormula*) G__getstructoffset())->UpdateFormulaLeaves();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_163_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TTreeFormula::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_163_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TTreeFormula::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_163_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TTreeFormula::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_163_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TTreeFormula::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_163_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTreeFormula*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_163_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TTreeFormula::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_163_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TTreeFormula::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_163_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TTreeFormula::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_163_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TTreeFormula::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TTreeFormula G__TTTreeFormula;
static int G__G__TreePlayer_163_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TTreeFormula*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TTreeFormula*) (soff+(sizeof(TTreeFormula)*i)))->~G__TTTreeFormula();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TTreeFormula*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TTreeFormula*) (soff))->~G__TTTreeFormula();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::TBranchProxy */
static int G__G__TreePlayer_181_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::TBranchProxy*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_181_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TBranchProxy* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TBranchProxy[n];
     } else {
       p = new((void*) gvp) ROOT::TBranchProxy[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TBranchProxy;
     } else {
       p = new((void*) gvp) ROOT::TBranchProxy;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_181_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TBranchProxy* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TBranchProxy(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ROOT::TBranchProxy(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TBranchProxy((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) ROOT::TBranchProxy((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_181_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TBranchProxy* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TBranchProxy(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::TBranchProxy(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_181_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TBranchProxy* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TBranchProxy(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) ROOT::TBranchProxy(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TBranchProxy(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) ROOT::TBranchProxy(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TBranchProxy(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ROOT::TBranchProxy(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_181_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ROOT::TBranchProxy*) G__getstructoffset())->GetProxy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_181_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::TBranchProxy*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_181_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::TBranchProxy*) G__getstructoffset())->Setup());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_181_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::TBranchProxy*) G__getstructoffset())->IsInitialized());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_181_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::TBranchProxy*) G__getstructoffset())->IsaPointer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_181_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::TBranchProxy*) G__getstructoffset())->Read());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_181_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::TBranchProxy*) G__getstructoffset())->ReadEntries());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_181_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ROOT::TBranchProxy*) G__getstructoffset())->GetClass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_181_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 89, (long) ((const ROOT::TBranchProxy*) G__getstructoffset())->GetWhere());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_181_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ROOT::TBranchProxy*) G__getstructoffset())->GetCollection());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_181_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 89, (long) ((ROOT::TBranchProxy*) G__getstructoffset())->GetStart((UInt_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 89, (long) ((ROOT::TBranchProxy*) G__getstructoffset())->GetStart());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_181_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 89, (long) ((ROOT::TBranchProxy*) G__getstructoffset())->GetClaStart((UInt_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 89, (long) ((ROOT::TBranchProxy*) G__getstructoffset())->GetClaStart());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_181_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 89, (long) ((ROOT::TBranchProxy*) G__getstructoffset())->GetStlStart((UInt_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 89, (long) ((ROOT::TBranchProxy*) G__getstructoffset())->GetStlStart());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_181_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::TBranchProxy* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::TBranchProxy(*(ROOT::TBranchProxy*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::TBranchProxy G__TROOTcLcLTBranchProxy;
static int G__G__TreePlayer_181_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::TBranchProxy*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::TBranchProxy*) (soff+(sizeof(ROOT::TBranchProxy)*i)))->~G__TROOTcLcLTBranchProxy();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::TBranchProxy*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::TBranchProxy*) (soff))->~G__TROOTcLcLTBranchProxy();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::TFriendProxy */
static int G__G__TreePlayer_182_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TFriendProxy* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TFriendProxy[n];
     } else {
       p = new((void*) gvp) ROOT::TFriendProxy[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TFriendProxy;
     } else {
       p = new((void*) gvp) ROOT::TFriendProxy;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTFriendProxy));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_182_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TFriendProxy* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TFriendProxy(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (TTree*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::TFriendProxy(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (TTree*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTFriendProxy));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_182_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((const ROOT::TFriendProxy*) G__getstructoffset())->GetReadEntry());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_182_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::TFriendProxy*) G__getstructoffset())->ResetReadEntry();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_182_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::TFriendProxy*) G__getstructoffset())->Update((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_182_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::TFriendProxy* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::TFriendProxy(*(ROOT::TFriendProxy*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTFriendProxy));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::TFriendProxy G__TROOTcLcLTFriendProxy;
static int G__G__TreePlayer_182_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::TFriendProxy*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::TFriendProxy*) (soff+(sizeof(ROOT::TFriendProxy)*i)))->~G__TROOTcLcLTFriendProxy();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::TFriendProxy*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::TFriendProxy*) (soff))->~G__TROOTcLcLTFriendProxy();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__TreePlayer_182_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TFriendProxy* dest = (ROOT::TFriendProxy*) G__getstructoffset();
   *dest = *(ROOT::TFriendProxy*) libp->para[0].ref;
   const ROOT::TFriendProxy& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::TBranchProxyDirector */
static int G__G__TreePlayer_183_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TBranchProxyDirector* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TBranchProxyDirector((TTree*) G__int(libp->para[0]), (Long64_t) G__Longlong(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::TBranchProxyDirector((TTree*) G__int(libp->para[0]), (Long64_t) G__Longlong(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxyDirector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_183_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TBranchProxyDirector* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TBranchProxyDirector((TTree*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::TBranchProxyDirector((TTree*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxyDirector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_183_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TBranchProxyDirector* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TBranchProxyDirector(*(ROOT::TBranchProxyDirector*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::TBranchProxyDirector(*(ROOT::TBranchProxyDirector*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxyDirector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_183_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::TBranchProxyDirector& obj = ((ROOT::TBranchProxyDirector*) G__getstructoffset())->operator=(*(ROOT::TBranchProxyDirector*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_183_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::TBranchProxyDirector*) G__getstructoffset())->Attach((ROOT::TBranchProxy*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_183_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::TBranchProxyDirector*) G__getstructoffset())->Attach((ROOT::TFriendProxy*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_183_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((const ROOT::TBranchProxyDirector*) G__getstructoffset())->GetReadEntry());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_183_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const ROOT::TBranchProxyDirector*) G__getstructoffset())->GetTree());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_183_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::TBranchProxyDirector*) G__getstructoffset())->SetReadEntry((Long64_t) G__Longlong(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_183_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ROOT::TBranchProxyDirector*) G__getstructoffset())->SetTree((TTree*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::TBranchProxyDirector G__TROOTcLcLTBranchProxyDirector;
static int G__G__TreePlayer_183_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::TBranchProxyDirector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::TBranchProxyDirector*) (soff+(sizeof(ROOT::TBranchProxyDirector)*i)))->~G__TROOTcLcLTBranchProxyDirector();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::TBranchProxyDirector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::TBranchProxyDirector*) (soff))->~G__TROOTcLcLTBranchProxyDirector();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::TImpProxy<double> */
static int G__G__TreePlayer_207_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<double>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<double>[n];
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<double>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<double>;
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<double>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEdoublegR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_207_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<double>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TImpProxy<double>((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::TImpProxy<double>((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEdoublegR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_207_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<double>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TImpProxy<double>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::TImpProxy<double>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEdoublegR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_207_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<double>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TImpProxy<double>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::TImpProxy<double>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEdoublegR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_207_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<double>* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<double>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<double>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<double>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<double>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<double>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<double>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEdoublegR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_207_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ROOT::TImpProxy<double>*) G__getstructoffset())->operator double());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_207_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::TImpProxy<double>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::TImpProxy<double>(*(ROOT::TImpProxy<double>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEdoublegR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::TImpProxy<double> G__TROOTcLcLTImpProxylEdoublegR;
static int G__G__TreePlayer_207_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::TImpProxy<double>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::TImpProxy<double>*) (soff+(sizeof(ROOT::TImpProxy<double>)*i)))->~G__TROOTcLcLTImpProxylEdoublegR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::TImpProxy<double>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::TImpProxy<double>*) (soff))->~G__TROOTcLcLTImpProxylEdoublegR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::TImpProxy<float> */
static int G__G__TreePlayer_209_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<float>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<float>[n];
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<float>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<float>;
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<float>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_209_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<float>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TImpProxy<float>((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::TImpProxy<float>((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_209_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<float>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TImpProxy<float>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::TImpProxy<float>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_209_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<float>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TImpProxy<float>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::TImpProxy<float>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_209_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<float>* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<float>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<float>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<float>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<float>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<float>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<float>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_209_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((ROOT::TImpProxy<float>*) G__getstructoffset())->operator float());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_209_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::TImpProxy<float>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::TImpProxy<float>(*(ROOT::TImpProxy<float>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::TImpProxy<float> G__TROOTcLcLTImpProxylEfloatgR;
static int G__G__TreePlayer_209_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::TImpProxy<float>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::TImpProxy<float>*) (soff+(sizeof(ROOT::TImpProxy<float>)*i)))->~G__TROOTcLcLTImpProxylEfloatgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::TImpProxy<float>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::TImpProxy<float>*) (soff))->~G__TROOTcLcLTImpProxylEfloatgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::TImpProxy<unsigned int> */
static int G__G__TreePlayer_211_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<unsigned int>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<unsigned int>[n];
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<unsigned int>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<unsigned int>;
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<unsigned int>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPintgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_211_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<unsigned int>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TImpProxy<unsigned int>((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::TImpProxy<unsigned int>((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPintgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_211_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<unsigned int>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TImpProxy<unsigned int>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::TImpProxy<unsigned int>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPintgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_211_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<unsigned int>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TImpProxy<unsigned int>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::TImpProxy<unsigned int>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPintgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_211_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<unsigned int>* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<unsigned int>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<unsigned int>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<unsigned int>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<unsigned int>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<unsigned int>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<unsigned int>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPintgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_211_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((ROOT::TImpProxy<unsigned int>*) G__getstructoffset())->operator unsigned int());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_211_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::TImpProxy<unsigned int>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::TImpProxy<unsigned int>(*(ROOT::TImpProxy<unsigned int>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPintgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::TImpProxy<unsigned int> G__TROOTcLcLTImpProxylEunsignedsPintgR;
static int G__G__TreePlayer_211_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::TImpProxy<unsigned int>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::TImpProxy<unsigned int>*) (soff+(sizeof(ROOT::TImpProxy<unsigned int>)*i)))->~G__TROOTcLcLTImpProxylEunsignedsPintgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::TImpProxy<unsigned int>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::TImpProxy<unsigned int>*) (soff))->~G__TROOTcLcLTImpProxylEunsignedsPintgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::TImpProxy<unsigned long> */
static int G__G__TreePlayer_212_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<unsigned long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<unsigned long>[n];
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<unsigned long>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<unsigned long>;
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<unsigned long>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPlonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_212_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<unsigned long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TImpProxy<unsigned long>((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::TImpProxy<unsigned long>((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPlonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_212_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<unsigned long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TImpProxy<unsigned long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::TImpProxy<unsigned long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPlonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_212_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<unsigned long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TImpProxy<unsigned long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::TImpProxy<unsigned long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPlonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_212_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<unsigned long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<unsigned long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<unsigned long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<unsigned long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<unsigned long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<unsigned long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<unsigned long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPlonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_212_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((ROOT::TImpProxy<unsigned long>*) G__getstructoffset())->operator unsigned long());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_212_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::TImpProxy<unsigned long>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::TImpProxy<unsigned long>(*(ROOT::TImpProxy<unsigned long>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPlonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::TImpProxy<unsigned long> G__TROOTcLcLTImpProxylEunsignedsPlonggR;
static int G__G__TreePlayer_212_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::TImpProxy<unsigned long>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::TImpProxy<unsigned long>*) (soff+(sizeof(ROOT::TImpProxy<unsigned long>)*i)))->~G__TROOTcLcLTImpProxylEunsignedsPlonggR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::TImpProxy<unsigned long>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::TImpProxy<unsigned long>*) (soff))->~G__TROOTcLcLTImpProxylEunsignedsPlonggR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::TImpProxy<unsigned long long> */
static int G__G__TreePlayer_213_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<unsigned long long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<unsigned long long>[n];
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<unsigned long long>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<unsigned long long>;
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<unsigned long long>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPlongsPlonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_213_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<unsigned long long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TImpProxy<unsigned long long>((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::TImpProxy<unsigned long long>((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPlongsPlonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_213_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<unsigned long long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TImpProxy<unsigned long long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::TImpProxy<unsigned long long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPlongsPlonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_213_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<unsigned long long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TImpProxy<unsigned long long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::TImpProxy<unsigned long long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPlongsPlonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_213_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<unsigned long long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<unsigned long long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<unsigned long long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<unsigned long long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<unsigned long long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<unsigned long long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<unsigned long long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPlongsPlonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_213_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letULonglong(result7, 109, (G__uint64) ((ROOT::TImpProxy<unsigned long long>*) G__getstructoffset())->operator unsigned long long());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_213_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::TImpProxy<unsigned long long>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::TImpProxy<unsigned long long>(*(ROOT::TImpProxy<unsigned long long>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPlongsPlonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::TImpProxy<unsigned long long> G__TROOTcLcLTImpProxylEunsignedsPlongsPlonggR;
static int G__G__TreePlayer_213_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::TImpProxy<unsigned long long>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::TImpProxy<unsigned long long>*) (soff+(sizeof(ROOT::TImpProxy<unsigned long long>)*i)))->~G__TROOTcLcLTImpProxylEunsignedsPlongsPlonggR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::TImpProxy<unsigned long long>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::TImpProxy<unsigned long long>*) (soff))->~G__TROOTcLcLTImpProxylEunsignedsPlongsPlonggR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::TImpProxy<unsigned short> */
static int G__G__TreePlayer_214_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<unsigned short>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<unsigned short>[n];
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<unsigned short>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<unsigned short>;
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<unsigned short>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPshortgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_214_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<unsigned short>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TImpProxy<unsigned short>((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::TImpProxy<unsigned short>((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPshortgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_214_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<unsigned short>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TImpProxy<unsigned short>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::TImpProxy<unsigned short>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPshortgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_214_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<unsigned short>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TImpProxy<unsigned short>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::TImpProxy<unsigned short>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPshortgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_214_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<unsigned short>* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<unsigned short>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<unsigned short>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<unsigned short>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<unsigned short>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<unsigned short>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<unsigned short>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPshortgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_214_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((ROOT::TImpProxy<unsigned short>*) G__getstructoffset())->operator unsigned short());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_214_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::TImpProxy<unsigned short>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::TImpProxy<unsigned short>(*(ROOT::TImpProxy<unsigned short>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPshortgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::TImpProxy<unsigned short> G__TROOTcLcLTImpProxylEunsignedsPshortgR;
static int G__G__TreePlayer_214_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::TImpProxy<unsigned short>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::TImpProxy<unsigned short>*) (soff+(sizeof(ROOT::TImpProxy<unsigned short>)*i)))->~G__TROOTcLcLTImpProxylEunsignedsPshortgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::TImpProxy<unsigned short>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::TImpProxy<unsigned short>*) (soff))->~G__TROOTcLcLTImpProxylEunsignedsPshortgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::TImpProxy<unsigned char> */
static int G__G__TreePlayer_215_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<unsigned char>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<unsigned char>[n];
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<unsigned char>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<unsigned char>;
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<unsigned char>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPchargR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_215_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<unsigned char>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TImpProxy<unsigned char>((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::TImpProxy<unsigned char>((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPchargR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_215_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<unsigned char>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TImpProxy<unsigned char>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::TImpProxy<unsigned char>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPchargR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_215_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<unsigned char>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TImpProxy<unsigned char>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::TImpProxy<unsigned char>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPchargR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_215_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<unsigned char>* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<unsigned char>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<unsigned char>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<unsigned char>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<unsigned char>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<unsigned char>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<unsigned char>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPchargR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_215_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 98, (long) ((ROOT::TImpProxy<unsigned char>*) G__getstructoffset())->operator unsigned char());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_215_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::TImpProxy<unsigned char>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::TImpProxy<unsigned char>(*(ROOT::TImpProxy<unsigned char>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPchargR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::TImpProxy<unsigned char> G__TROOTcLcLTImpProxylEunsignedsPchargR;
static int G__G__TreePlayer_215_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::TImpProxy<unsigned char>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::TImpProxy<unsigned char>*) (soff+(sizeof(ROOT::TImpProxy<unsigned char>)*i)))->~G__TROOTcLcLTImpProxylEunsignedsPchargR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::TImpProxy<unsigned char>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::TImpProxy<unsigned char>*) (soff))->~G__TROOTcLcLTImpProxylEunsignedsPchargR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::TImpProxy<int> */
static int G__G__TreePlayer_216_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<int>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<int>[n];
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<int>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<int>;
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<int>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEintgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_216_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<int>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TImpProxy<int>((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::TImpProxy<int>((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEintgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_216_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<int>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TImpProxy<int>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::TImpProxy<int>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEintgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_216_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<int>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TImpProxy<int>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::TImpProxy<int>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEintgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_216_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<int>* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<int>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<int>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<int>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<int>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<int>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<int>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEintgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_216_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ROOT::TImpProxy<int>*) G__getstructoffset())->operator int());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_216_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::TImpProxy<int>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::TImpProxy<int>(*(ROOT::TImpProxy<int>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEintgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::TImpProxy<int> G__TROOTcLcLTImpProxylEintgR;
static int G__G__TreePlayer_216_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::TImpProxy<int>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::TImpProxy<int>*) (soff+(sizeof(ROOT::TImpProxy<int>)*i)))->~G__TROOTcLcLTImpProxylEintgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::TImpProxy<int>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::TImpProxy<int>*) (soff))->~G__TROOTcLcLTImpProxylEintgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::TImpProxy<long> */
static int G__G__TreePlayer_217_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<long>[n];
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<long>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<long>;
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<long>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylElonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_217_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TImpProxy<long>((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::TImpProxy<long>((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylElonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_217_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TImpProxy<long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::TImpProxy<long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylElonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_217_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TImpProxy<long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::TImpProxy<long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylElonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_217_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylElonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_217_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) ((ROOT::TImpProxy<long>*) G__getstructoffset())->operator long());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_217_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::TImpProxy<long>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::TImpProxy<long>(*(ROOT::TImpProxy<long>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylElonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::TImpProxy<long> G__TROOTcLcLTImpProxylElonggR;
static int G__G__TreePlayer_217_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::TImpProxy<long>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::TImpProxy<long>*) (soff+(sizeof(ROOT::TImpProxy<long>)*i)))->~G__TROOTcLcLTImpProxylElonggR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::TImpProxy<long>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::TImpProxy<long>*) (soff))->~G__TROOTcLcLTImpProxylElonggR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::TImpProxy<long long> */
static int G__G__TreePlayer_218_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<long long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<long long>[n];
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<long long>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<long long>;
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<long long>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylElongsPlonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_218_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<long long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TImpProxy<long long>((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::TImpProxy<long long>((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylElongsPlonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_218_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<long long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TImpProxy<long long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::TImpProxy<long long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylElongsPlonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_218_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<long long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TImpProxy<long long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::TImpProxy<long long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylElongsPlonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_218_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<long long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<long long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<long long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<long long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<long long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<long long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<long long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylElongsPlonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_218_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((ROOT::TImpProxy<long long>*) G__getstructoffset())->operator long long());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_218_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::TImpProxy<long long>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::TImpProxy<long long>(*(ROOT::TImpProxy<long long>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylElongsPlonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::TImpProxy<long long> G__TROOTcLcLTImpProxylElongsPlonggR;
static int G__G__TreePlayer_218_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::TImpProxy<long long>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::TImpProxy<long long>*) (soff+(sizeof(ROOT::TImpProxy<long long>)*i)))->~G__TROOTcLcLTImpProxylElongsPlonggR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::TImpProxy<long long>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::TImpProxy<long long>*) (soff))->~G__TROOTcLcLTImpProxylElongsPlonggR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::TImpProxy<short> */
static int G__G__TreePlayer_219_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<short>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<short>[n];
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<short>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<short>;
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<short>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEshortgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_219_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<short>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TImpProxy<short>((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::TImpProxy<short>((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEshortgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_219_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<short>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TImpProxy<short>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::TImpProxy<short>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEshortgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_219_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<short>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TImpProxy<short>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::TImpProxy<short>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEshortgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_219_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<short>* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<short>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<short>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<short>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<short>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<short>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<short>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEshortgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_219_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((ROOT::TImpProxy<short>*) G__getstructoffset())->operator short());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_219_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::TImpProxy<short>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::TImpProxy<short>(*(ROOT::TImpProxy<short>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEshortgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::TImpProxy<short> G__TROOTcLcLTImpProxylEshortgR;
static int G__G__TreePlayer_219_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::TImpProxy<short>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::TImpProxy<short>*) (soff+(sizeof(ROOT::TImpProxy<short>)*i)))->~G__TROOTcLcLTImpProxylEshortgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::TImpProxy<short>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::TImpProxy<short>*) (soff))->~G__TROOTcLcLTImpProxylEshortgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::TImpProxy<char> */
static int G__G__TreePlayer_220_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<char>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<char>[n];
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<char>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<char>;
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<char>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEchargR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_220_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<char>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TImpProxy<char>((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::TImpProxy<char>((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEchargR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_220_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<char>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TImpProxy<char>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::TImpProxy<char>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEchargR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_220_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<char>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TImpProxy<char>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::TImpProxy<char>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEchargR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_220_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<char>* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<char>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<char>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<char>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<char>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<char>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<char>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEchargR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_220_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 99, (long) ((ROOT::TImpProxy<char>*) G__getstructoffset())->operator char());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_220_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::TImpProxy<char>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::TImpProxy<char>(*(ROOT::TImpProxy<char>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEchargR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::TImpProxy<char> G__TROOTcLcLTImpProxylEchargR;
static int G__G__TreePlayer_220_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::TImpProxy<char>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::TImpProxy<char>*) (soff+(sizeof(ROOT::TImpProxy<char>)*i)))->~G__TROOTcLcLTImpProxylEchargR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::TImpProxy<char>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::TImpProxy<char>*) (soff))->~G__TROOTcLcLTImpProxylEchargR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::TImpProxy<bool> */
static int G__G__TreePlayer_221_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<bool>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<bool>[n];
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<bool>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<bool>;
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<bool>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEboolgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_221_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<bool>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TImpProxy<bool>((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::TImpProxy<bool>((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEboolgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_221_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<bool>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TImpProxy<bool>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::TImpProxy<bool>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEboolgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_221_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<bool>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TImpProxy<bool>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::TImpProxy<bool>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEboolgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_221_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TImpProxy<bool>* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<bool>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<bool>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<bool>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<bool>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TImpProxy<bool>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ROOT::TImpProxy<bool>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEboolgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_221_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::TImpProxy<bool>*) G__getstructoffset())->operator bool());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_221_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::TImpProxy<bool>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::TImpProxy<bool>(*(ROOT::TImpProxy<bool>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEboolgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::TImpProxy<bool> G__TROOTcLcLTImpProxylEboolgR;
static int G__G__TreePlayer_221_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::TImpProxy<bool>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::TImpProxy<bool>*) (soff+(sizeof(ROOT::TImpProxy<bool>)*i)))->~G__TROOTcLcLTImpProxylEboolgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::TImpProxy<bool>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::TImpProxy<bool>*) (soff))->~G__TROOTcLcLTImpProxylEboolgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::TArrayProxy<ROOT::TArrayType<double,0> > */
static int G__G__TreePlayer_223_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<double,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<double,0> >[n];
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<double,0> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<double,0> >;
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<double,0> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_223_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<double,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TArrayProxy<ROOT::TArrayType<double,0> >((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<double,0> >((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_223_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<double,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TArrayProxy<ROOT::TArrayType<double,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<double,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_223_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<double,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TArrayProxy<ROOT::TArrayType<double,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<double,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_223_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<double,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<double,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<double,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<double,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<double,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<double,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<double,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_223_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::TArrayProxy<ROOT::TArrayType<double,0> >::array_t& obj = ((ROOT::TArrayProxy<ROOT::TArrayType<double,0> >*) G__getstructoffset())->At((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_223_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::TArrayProxy<ROOT::TArrayType<double,0> >::array_t& obj = ((ROOT::TArrayProxy<ROOT::TArrayType<double,0> >*) G__getstructoffset())->operator[]((Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_223_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::TArrayProxy<ROOT::TArrayType<double,0> >::array_t& obj = ((ROOT::TArrayProxy<ROOT::TArrayType<double,0> >*) G__getstructoffset())->operator[]((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_223_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::TArrayProxy<ROOT::TArrayType<double,0> >* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::TArrayProxy<ROOT::TArrayType<double,0> >(*(ROOT::TArrayProxy<ROOT::TArrayType<double,0> >*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::TArrayProxy<ROOT::TArrayType<double,0> > G__TROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR;
static int G__G__TreePlayer_223_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::TArrayProxy<ROOT::TArrayType<double,0> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::TArrayProxy<ROOT::TArrayType<double,0> >*) (soff+(sizeof(ROOT::TArrayProxy<ROOT::TArrayType<double,0> >)*i)))->~G__TROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::TArrayProxy<ROOT::TArrayType<double,0> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::TArrayProxy<ROOT::TArrayType<double,0> >*) (soff))->~G__TROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::TArrayProxy<ROOT::TArrayType<float,0> > */
static int G__G__TreePlayer_227_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<float,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<float,0> >[n];
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<float,0> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<float,0> >;
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<float,0> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_227_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<float,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TArrayProxy<ROOT::TArrayType<float,0> >((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<float,0> >((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_227_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<float,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TArrayProxy<ROOT::TArrayType<float,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<float,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_227_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<float,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TArrayProxy<ROOT::TArrayType<float,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<float,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_227_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<float,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<float,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<float,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<float,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<float,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<float,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<float,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_227_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::TArrayProxy<ROOT::TArrayType<float,0> >::array_t& obj = ((ROOT::TArrayProxy<ROOT::TArrayType<float,0> >*) G__getstructoffset())->At((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_227_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::TArrayProxy<ROOT::TArrayType<float,0> >::array_t& obj = ((ROOT::TArrayProxy<ROOT::TArrayType<float,0> >*) G__getstructoffset())->operator[]((Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_227_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::TArrayProxy<ROOT::TArrayType<float,0> >::array_t& obj = ((ROOT::TArrayProxy<ROOT::TArrayType<float,0> >*) G__getstructoffset())->operator[]((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_227_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::TArrayProxy<ROOT::TArrayType<float,0> >* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::TArrayProxy<ROOT::TArrayType<float,0> >(*(ROOT::TArrayProxy<ROOT::TArrayType<float,0> >*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::TArrayProxy<ROOT::TArrayType<float,0> > G__TROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR;
static int G__G__TreePlayer_227_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::TArrayProxy<ROOT::TArrayType<float,0> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::TArrayProxy<ROOT::TArrayType<float,0> >*) (soff+(sizeof(ROOT::TArrayProxy<ROOT::TArrayType<float,0> >)*i)))->~G__TROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::TArrayProxy<ROOT::TArrayType<float,0> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::TArrayProxy<ROOT::TArrayType<float,0> >*) (soff))->~G__TROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> > */
static int G__G__TreePlayer_231_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >[n];
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >;
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_231_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_231_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_231_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_231_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_231_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >::array_t& obj = ((ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >*) G__getstructoffset())->At((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'h', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_231_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >::array_t& obj = ((ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >*) G__getstructoffset())->operator[]((Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'h', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_231_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >::array_t& obj = ((ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >*) G__getstructoffset())->operator[]((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'h', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_231_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >(*(ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> > G__TROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR;
static int G__G__TreePlayer_231_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >*) (soff+(sizeof(ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >)*i)))->~G__TROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >*) (soff))->~G__TROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> > */
static int G__G__TreePlayer_233_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >[n];
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >;
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_233_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_233_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_233_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_233_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_233_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >::array_t& obj = ((ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >*) G__getstructoffset())->At((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'k', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_233_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >::array_t& obj = ((ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >*) G__getstructoffset())->operator[]((Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'k', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_233_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >::array_t& obj = ((ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >*) G__getstructoffset())->operator[]((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'k', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_233_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >(*(ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> > G__TROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR;
static int G__G__TreePlayer_233_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >*) (soff+(sizeof(ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >)*i)))->~G__TROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >*) (soff))->~G__TROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::TArrayProxy<ROOT::TArrayType<unsigned long long,0> > */
static int G__G__TreePlayer_235_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<unsigned long long,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<unsigned long long,0> >[n];
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<unsigned long long,0> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<unsigned long long,0> >;
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<unsigned long long,0> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_235_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<unsigned long long,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TArrayProxy<ROOT::TArrayType<unsigned long long,0> >((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<unsigned long long,0> >((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_235_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<unsigned long long,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TArrayProxy<ROOT::TArrayType<unsigned long long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<unsigned long long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_235_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<unsigned long long,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TArrayProxy<ROOT::TArrayType<unsigned long long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<unsigned long long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_235_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<unsigned long long,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<unsigned long long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<unsigned long long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<unsigned long long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<unsigned long long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<unsigned long long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<unsigned long long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_235_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::TArrayProxy<ROOT::TArrayType<unsigned long long,0> >::array_t& obj = ((ROOT::TArrayProxy<ROOT::TArrayType<unsigned long long,0> >*) G__getstructoffset())->At((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'm', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_235_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::TArrayProxy<ROOT::TArrayType<unsigned long long,0> >::array_t& obj = ((ROOT::TArrayProxy<ROOT::TArrayType<unsigned long long,0> >*) G__getstructoffset())->operator[]((Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'm', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_235_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::TArrayProxy<ROOT::TArrayType<unsigned long long,0> >::array_t& obj = ((ROOT::TArrayProxy<ROOT::TArrayType<unsigned long long,0> >*) G__getstructoffset())->operator[]((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'm', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_235_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::TArrayProxy<ROOT::TArrayType<unsigned long long,0> >* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::TArrayProxy<ROOT::TArrayType<unsigned long long,0> >(*(ROOT::TArrayProxy<ROOT::TArrayType<unsigned long long,0> >*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::TArrayProxy<ROOT::TArrayType<unsigned long long,0> > G__TROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR;
static int G__G__TreePlayer_235_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::TArrayProxy<ROOT::TArrayType<unsigned long long,0> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::TArrayProxy<ROOT::TArrayType<unsigned long long,0> >*) (soff+(sizeof(ROOT::TArrayProxy<ROOT::TArrayType<unsigned long long,0> >)*i)))->~G__TROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::TArrayProxy<ROOT::TArrayType<unsigned long long,0> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::TArrayProxy<ROOT::TArrayType<unsigned long long,0> >*) (soff))->~G__TROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> > */
static int G__G__TreePlayer_237_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >[n];
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >;
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_237_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_237_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_237_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_237_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_237_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >::array_t& obj = ((ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >*) G__getstructoffset())->At((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'r', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_237_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >::array_t& obj = ((ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >*) G__getstructoffset())->operator[]((Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'r', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_237_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >::array_t& obj = ((ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >*) G__getstructoffset())->operator[]((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'r', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_237_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >(*(ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> > G__TROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR;
static int G__G__TreePlayer_237_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >*) (soff+(sizeof(ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >)*i)))->~G__TROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >*) (soff))->~G__TROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> > */
static int G__G__TreePlayer_239_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >[n];
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >;
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_239_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_239_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_239_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_239_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_239_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >::array_t& obj = ((ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >*) G__getstructoffset())->At((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'b', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_239_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >::array_t& obj = ((ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >*) G__getstructoffset())->operator[]((Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'b', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_239_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >::array_t& obj = ((ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >*) G__getstructoffset())->operator[]((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'b', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_239_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >(*(ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> > G__TROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR;
static int G__G__TreePlayer_239_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >*) (soff+(sizeof(ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >)*i)))->~G__TROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >*) (soff))->~G__TROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::TArrayProxy<ROOT::TArrayType<int,0> > */
static int G__G__TreePlayer_241_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<int,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<int,0> >[n];
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<int,0> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<int,0> >;
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<int,0> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_241_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<int,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TArrayProxy<ROOT::TArrayType<int,0> >((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<int,0> >((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_241_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<int,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TArrayProxy<ROOT::TArrayType<int,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<int,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_241_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<int,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TArrayProxy<ROOT::TArrayType<int,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<int,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_241_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<int,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<int,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<int,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<int,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<int,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<int,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<int,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_241_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::TArrayProxy<ROOT::TArrayType<int,0> >::array_t& obj = ((ROOT::TArrayProxy<ROOT::TArrayType<int,0> >*) G__getstructoffset())->At((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'i', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_241_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::TArrayProxy<ROOT::TArrayType<int,0> >::array_t& obj = ((ROOT::TArrayProxy<ROOT::TArrayType<int,0> >*) G__getstructoffset())->operator[]((Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'i', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_241_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::TArrayProxy<ROOT::TArrayType<int,0> >::array_t& obj = ((ROOT::TArrayProxy<ROOT::TArrayType<int,0> >*) G__getstructoffset())->operator[]((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'i', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_241_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::TArrayProxy<ROOT::TArrayType<int,0> >* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::TArrayProxy<ROOT::TArrayType<int,0> >(*(ROOT::TArrayProxy<ROOT::TArrayType<int,0> >*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::TArrayProxy<ROOT::TArrayType<int,0> > G__TROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR;
static int G__G__TreePlayer_241_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::TArrayProxy<ROOT::TArrayType<int,0> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::TArrayProxy<ROOT::TArrayType<int,0> >*) (soff+(sizeof(ROOT::TArrayProxy<ROOT::TArrayType<int,0> >)*i)))->~G__TROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::TArrayProxy<ROOT::TArrayType<int,0> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::TArrayProxy<ROOT::TArrayType<int,0> >*) (soff))->~G__TROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::TArrayProxy<ROOT::TArrayType<long,0> > */
static int G__G__TreePlayer_243_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<long,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<long,0> >[n];
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<long,0> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<long,0> >;
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<long,0> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_243_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<long,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TArrayProxy<ROOT::TArrayType<long,0> >((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<long,0> >((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_243_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<long,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TArrayProxy<ROOT::TArrayType<long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_243_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<long,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TArrayProxy<ROOT::TArrayType<long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_243_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<long,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_243_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::TArrayProxy<ROOT::TArrayType<long,0> >::array_t& obj = ((ROOT::TArrayProxy<ROOT::TArrayType<long,0> >*) G__getstructoffset())->At((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'l', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_243_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::TArrayProxy<ROOT::TArrayType<long,0> >::array_t& obj = ((ROOT::TArrayProxy<ROOT::TArrayType<long,0> >*) G__getstructoffset())->operator[]((Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'l', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_243_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::TArrayProxy<ROOT::TArrayType<long,0> >::array_t& obj = ((ROOT::TArrayProxy<ROOT::TArrayType<long,0> >*) G__getstructoffset())->operator[]((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'l', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_243_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::TArrayProxy<ROOT::TArrayType<long,0> >* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::TArrayProxy<ROOT::TArrayType<long,0> >(*(ROOT::TArrayProxy<ROOT::TArrayType<long,0> >*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::TArrayProxy<ROOT::TArrayType<long,0> > G__TROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR;
static int G__G__TreePlayer_243_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::TArrayProxy<ROOT::TArrayType<long,0> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::TArrayProxy<ROOT::TArrayType<long,0> >*) (soff+(sizeof(ROOT::TArrayProxy<ROOT::TArrayType<long,0> >)*i)))->~G__TROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::TArrayProxy<ROOT::TArrayType<long,0> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::TArrayProxy<ROOT::TArrayType<long,0> >*) (soff))->~G__TROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::TArrayProxy<ROOT::TArrayType<long long,0> > */
static int G__G__TreePlayer_245_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<long long,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<long long,0> >[n];
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<long long,0> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<long long,0> >;
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<long long,0> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_245_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<long long,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TArrayProxy<ROOT::TArrayType<long long,0> >((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<long long,0> >((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_245_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<long long,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TArrayProxy<ROOT::TArrayType<long long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<long long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_245_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<long long,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TArrayProxy<ROOT::TArrayType<long long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<long long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_245_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<long long,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<long long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<long long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<long long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<long long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<long long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<long long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_245_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::TArrayProxy<ROOT::TArrayType<long long,0> >::array_t& obj = ((ROOT::TArrayProxy<ROOT::TArrayType<long long,0> >*) G__getstructoffset())->At((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'n', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_245_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::TArrayProxy<ROOT::TArrayType<long long,0> >::array_t& obj = ((ROOT::TArrayProxy<ROOT::TArrayType<long long,0> >*) G__getstructoffset())->operator[]((Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'n', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_245_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::TArrayProxy<ROOT::TArrayType<long long,0> >::array_t& obj = ((ROOT::TArrayProxy<ROOT::TArrayType<long long,0> >*) G__getstructoffset())->operator[]((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'n', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_245_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::TArrayProxy<ROOT::TArrayType<long long,0> >* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::TArrayProxy<ROOT::TArrayType<long long,0> >(*(ROOT::TArrayProxy<ROOT::TArrayType<long long,0> >*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::TArrayProxy<ROOT::TArrayType<long long,0> > G__TROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR;
static int G__G__TreePlayer_245_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::TArrayProxy<ROOT::TArrayType<long long,0> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::TArrayProxy<ROOT::TArrayType<long long,0> >*) (soff+(sizeof(ROOT::TArrayProxy<ROOT::TArrayType<long long,0> >)*i)))->~G__TROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::TArrayProxy<ROOT::TArrayType<long long,0> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::TArrayProxy<ROOT::TArrayType<long long,0> >*) (soff))->~G__TROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::TArrayProxy<ROOT::TArrayType<bool,0> > */
static int G__G__TreePlayer_247_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >[n];
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >;
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_247_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_247_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_247_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_247_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_247_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >::array_t& obj = ((ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >*) G__getstructoffset())->At((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'g', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_247_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >::array_t& obj = ((ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >*) G__getstructoffset())->operator[]((Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'g', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_247_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >::array_t& obj = ((ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >*) G__getstructoffset())->operator[]((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'g', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_247_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >(*(ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::TArrayProxy<ROOT::TArrayType<bool,0> > G__TROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR;
static int G__G__TreePlayer_247_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >*) (soff+(sizeof(ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >)*i)))->~G__TROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >*) (soff))->~G__TROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::TClaImpProxy<double> */
static int G__G__TreePlayer_248_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<double>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<double>[n];
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<double>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<double>;
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<double>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEdoublegR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_248_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<double>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaImpProxy<double>((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::TClaImpProxy<double>((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEdoublegR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_248_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<double>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaImpProxy<double>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::TClaImpProxy<double>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEdoublegR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_248_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<double>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaImpProxy<double>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::TClaImpProxy<double>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEdoublegR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_248_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<double>* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<double>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<double>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<double>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<double>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<double>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<double>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEdoublegR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_248_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::TClaImpProxy<double>*) G__getstructoffset())->At((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_248_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::TClaImpProxy<double>*) G__getstructoffset())->operator[]((Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_248_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::TClaImpProxy<double>*) G__getstructoffset())->operator[]((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_248_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::TClaImpProxy<double>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::TClaImpProxy<double>(*(ROOT::TClaImpProxy<double>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEdoublegR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::TClaImpProxy<double> G__TROOTcLcLTClaImpProxylEdoublegR;
static int G__G__TreePlayer_248_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::TClaImpProxy<double>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::TClaImpProxy<double>*) (soff+(sizeof(ROOT::TClaImpProxy<double>)*i)))->~G__TROOTcLcLTClaImpProxylEdoublegR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::TClaImpProxy<double>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::TClaImpProxy<double>*) (soff))->~G__TROOTcLcLTClaImpProxylEdoublegR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::TClaImpProxy<float> */
static int G__G__TreePlayer_250_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<float>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<float>[n];
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<float>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<float>;
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<float>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_250_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<float>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaImpProxy<float>((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::TClaImpProxy<float>((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_250_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<float>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaImpProxy<float>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::TClaImpProxy<float>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_250_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<float>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaImpProxy<float>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::TClaImpProxy<float>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_250_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<float>* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<float>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<float>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<float>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<float>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<float>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<float>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_250_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::TClaImpProxy<float>*) G__getstructoffset())->At((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_250_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::TClaImpProxy<float>*) G__getstructoffset())->operator[]((Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_250_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::TClaImpProxy<float>*) G__getstructoffset())->operator[]((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_250_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::TClaImpProxy<float>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::TClaImpProxy<float>(*(ROOT::TClaImpProxy<float>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::TClaImpProxy<float> G__TROOTcLcLTClaImpProxylEfloatgR;
static int G__G__TreePlayer_250_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::TClaImpProxy<float>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::TClaImpProxy<float>*) (soff+(sizeof(ROOT::TClaImpProxy<float>)*i)))->~G__TROOTcLcLTClaImpProxylEfloatgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::TClaImpProxy<float>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::TClaImpProxy<float>*) (soff))->~G__TROOTcLcLTClaImpProxylEfloatgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::TClaImpProxy<unsigned int> */
static int G__G__TreePlayer_252_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<unsigned int>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<unsigned int>[n];
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<unsigned int>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<unsigned int>;
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<unsigned int>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPintgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_252_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<unsigned int>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaImpProxy<unsigned int>((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::TClaImpProxy<unsigned int>((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPintgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_252_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<unsigned int>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaImpProxy<unsigned int>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::TClaImpProxy<unsigned int>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPintgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_252_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<unsigned int>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaImpProxy<unsigned int>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::TClaImpProxy<unsigned int>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPintgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_252_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<unsigned int>* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<unsigned int>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<unsigned int>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<unsigned int>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<unsigned int>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<unsigned int>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<unsigned int>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPintgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_252_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const unsigned int& obj = ((ROOT::TClaImpProxy<unsigned int>*) G__getstructoffset())->At((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'h', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_252_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const unsigned int& obj = ((ROOT::TClaImpProxy<unsigned int>*) G__getstructoffset())->operator[]((Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'h', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_252_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const unsigned int& obj = ((ROOT::TClaImpProxy<unsigned int>*) G__getstructoffset())->operator[]((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'h', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_252_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::TClaImpProxy<unsigned int>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::TClaImpProxy<unsigned int>(*(ROOT::TClaImpProxy<unsigned int>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPintgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::TClaImpProxy<unsigned int> G__TROOTcLcLTClaImpProxylEunsignedsPintgR;
static int G__G__TreePlayer_252_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::TClaImpProxy<unsigned int>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::TClaImpProxy<unsigned int>*) (soff+(sizeof(ROOT::TClaImpProxy<unsigned int>)*i)))->~G__TROOTcLcLTClaImpProxylEunsignedsPintgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::TClaImpProxy<unsigned int>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::TClaImpProxy<unsigned int>*) (soff))->~G__TROOTcLcLTClaImpProxylEunsignedsPintgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::TClaImpProxy<unsigned long> */
static int G__G__TreePlayer_253_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<unsigned long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<unsigned long>[n];
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<unsigned long>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<unsigned long>;
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<unsigned long>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPlonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_253_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<unsigned long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaImpProxy<unsigned long>((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::TClaImpProxy<unsigned long>((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPlonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_253_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<unsigned long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaImpProxy<unsigned long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::TClaImpProxy<unsigned long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPlonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_253_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<unsigned long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaImpProxy<unsigned long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::TClaImpProxy<unsigned long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPlonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_253_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<unsigned long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<unsigned long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<unsigned long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<unsigned long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<unsigned long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<unsigned long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<unsigned long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPlonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_253_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const unsigned long& obj = ((ROOT::TClaImpProxy<unsigned long>*) G__getstructoffset())->At((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'k', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_253_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const unsigned long& obj = ((ROOT::TClaImpProxy<unsigned long>*) G__getstructoffset())->operator[]((Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'k', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_253_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const unsigned long& obj = ((ROOT::TClaImpProxy<unsigned long>*) G__getstructoffset())->operator[]((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'k', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_253_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::TClaImpProxy<unsigned long>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::TClaImpProxy<unsigned long>(*(ROOT::TClaImpProxy<unsigned long>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPlonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::TClaImpProxy<unsigned long> G__TROOTcLcLTClaImpProxylEunsignedsPlonggR;
static int G__G__TreePlayer_253_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::TClaImpProxy<unsigned long>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::TClaImpProxy<unsigned long>*) (soff+(sizeof(ROOT::TClaImpProxy<unsigned long>)*i)))->~G__TROOTcLcLTClaImpProxylEunsignedsPlonggR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::TClaImpProxy<unsigned long>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::TClaImpProxy<unsigned long>*) (soff))->~G__TROOTcLcLTClaImpProxylEunsignedsPlonggR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::TClaImpProxy<unsigned long long> */
static int G__G__TreePlayer_254_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<unsigned long long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<unsigned long long>[n];
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<unsigned long long>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<unsigned long long>;
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<unsigned long long>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPlongsPlonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_254_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<unsigned long long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaImpProxy<unsigned long long>((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::TClaImpProxy<unsigned long long>((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPlongsPlonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_254_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<unsigned long long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaImpProxy<unsigned long long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::TClaImpProxy<unsigned long long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPlongsPlonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_254_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<unsigned long long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaImpProxy<unsigned long long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::TClaImpProxy<unsigned long long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPlongsPlonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_254_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<unsigned long long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<unsigned long long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<unsigned long long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<unsigned long long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<unsigned long long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<unsigned long long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<unsigned long long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPlongsPlonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_254_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const unsigned long long& obj = ((ROOT::TClaImpProxy<unsigned long long>*) G__getstructoffset())->At((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'm', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_254_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const unsigned long long& obj = ((ROOT::TClaImpProxy<unsigned long long>*) G__getstructoffset())->operator[]((Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'm', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_254_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const unsigned long long& obj = ((ROOT::TClaImpProxy<unsigned long long>*) G__getstructoffset())->operator[]((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'm', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_254_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::TClaImpProxy<unsigned long long>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::TClaImpProxy<unsigned long long>(*(ROOT::TClaImpProxy<unsigned long long>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPlongsPlonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::TClaImpProxy<unsigned long long> G__TROOTcLcLTClaImpProxylEunsignedsPlongsPlonggR;
static int G__G__TreePlayer_254_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::TClaImpProxy<unsigned long long>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::TClaImpProxy<unsigned long long>*) (soff+(sizeof(ROOT::TClaImpProxy<unsigned long long>)*i)))->~G__TROOTcLcLTClaImpProxylEunsignedsPlongsPlonggR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::TClaImpProxy<unsigned long long>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::TClaImpProxy<unsigned long long>*) (soff))->~G__TROOTcLcLTClaImpProxylEunsignedsPlongsPlonggR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::TClaImpProxy<unsigned short> */
static int G__G__TreePlayer_255_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<unsigned short>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<unsigned short>[n];
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<unsigned short>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<unsigned short>;
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<unsigned short>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPshortgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_255_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<unsigned short>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaImpProxy<unsigned short>((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::TClaImpProxy<unsigned short>((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPshortgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_255_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<unsigned short>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaImpProxy<unsigned short>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::TClaImpProxy<unsigned short>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPshortgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_255_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<unsigned short>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaImpProxy<unsigned short>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::TClaImpProxy<unsigned short>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPshortgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_255_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<unsigned short>* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<unsigned short>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<unsigned short>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<unsigned short>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<unsigned short>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<unsigned short>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<unsigned short>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPshortgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_255_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const unsigned short& obj = ((ROOT::TClaImpProxy<unsigned short>*) G__getstructoffset())->At((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'r', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_255_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const unsigned short& obj = ((ROOT::TClaImpProxy<unsigned short>*) G__getstructoffset())->operator[]((Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'r', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_255_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const unsigned short& obj = ((ROOT::TClaImpProxy<unsigned short>*) G__getstructoffset())->operator[]((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'r', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_255_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::TClaImpProxy<unsigned short>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::TClaImpProxy<unsigned short>(*(ROOT::TClaImpProxy<unsigned short>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPshortgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::TClaImpProxy<unsigned short> G__TROOTcLcLTClaImpProxylEunsignedsPshortgR;
static int G__G__TreePlayer_255_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::TClaImpProxy<unsigned short>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::TClaImpProxy<unsigned short>*) (soff+(sizeof(ROOT::TClaImpProxy<unsigned short>)*i)))->~G__TROOTcLcLTClaImpProxylEunsignedsPshortgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::TClaImpProxy<unsigned short>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::TClaImpProxy<unsigned short>*) (soff))->~G__TROOTcLcLTClaImpProxylEunsignedsPshortgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::TClaImpProxy<unsigned char> */
static int G__G__TreePlayer_256_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<unsigned char>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<unsigned char>[n];
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<unsigned char>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<unsigned char>;
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<unsigned char>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPchargR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_256_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<unsigned char>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaImpProxy<unsigned char>((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::TClaImpProxy<unsigned char>((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPchargR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_256_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<unsigned char>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaImpProxy<unsigned char>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::TClaImpProxy<unsigned char>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPchargR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_256_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<unsigned char>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaImpProxy<unsigned char>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::TClaImpProxy<unsigned char>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPchargR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_256_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<unsigned char>* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<unsigned char>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<unsigned char>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<unsigned char>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<unsigned char>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<unsigned char>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<unsigned char>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPchargR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_256_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const unsigned char& obj = ((ROOT::TClaImpProxy<unsigned char>*) G__getstructoffset())->At((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'b', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_256_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const unsigned char& obj = ((ROOT::TClaImpProxy<unsigned char>*) G__getstructoffset())->operator[]((Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'b', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_256_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const unsigned char& obj = ((ROOT::TClaImpProxy<unsigned char>*) G__getstructoffset())->operator[]((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'b', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_256_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::TClaImpProxy<unsigned char>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::TClaImpProxy<unsigned char>(*(ROOT::TClaImpProxy<unsigned char>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPchargR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::TClaImpProxy<unsigned char> G__TROOTcLcLTClaImpProxylEunsignedsPchargR;
static int G__G__TreePlayer_256_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::TClaImpProxy<unsigned char>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::TClaImpProxy<unsigned char>*) (soff+(sizeof(ROOT::TClaImpProxy<unsigned char>)*i)))->~G__TROOTcLcLTClaImpProxylEunsignedsPchargR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::TClaImpProxy<unsigned char>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::TClaImpProxy<unsigned char>*) (soff))->~G__TROOTcLcLTClaImpProxylEunsignedsPchargR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::TClaImpProxy<int> */
static int G__G__TreePlayer_257_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<int>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<int>[n];
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<int>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<int>;
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<int>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEintgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_257_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<int>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaImpProxy<int>((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::TClaImpProxy<int>((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEintgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_257_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<int>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaImpProxy<int>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::TClaImpProxy<int>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEintgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_257_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<int>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaImpProxy<int>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::TClaImpProxy<int>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEintgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_257_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<int>* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<int>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<int>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<int>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<int>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<int>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<int>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEintgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_257_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const int& obj = ((ROOT::TClaImpProxy<int>*) G__getstructoffset())->At((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'i', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_257_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const int& obj = ((ROOT::TClaImpProxy<int>*) G__getstructoffset())->operator[]((Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'i', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_257_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const int& obj = ((ROOT::TClaImpProxy<int>*) G__getstructoffset())->operator[]((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'i', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_257_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::TClaImpProxy<int>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::TClaImpProxy<int>(*(ROOT::TClaImpProxy<int>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEintgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::TClaImpProxy<int> G__TROOTcLcLTClaImpProxylEintgR;
static int G__G__TreePlayer_257_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::TClaImpProxy<int>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::TClaImpProxy<int>*) (soff+(sizeof(ROOT::TClaImpProxy<int>)*i)))->~G__TROOTcLcLTClaImpProxylEintgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::TClaImpProxy<int>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::TClaImpProxy<int>*) (soff))->~G__TROOTcLcLTClaImpProxylEintgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::TClaImpProxy<long> */
static int G__G__TreePlayer_258_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<long>[n];
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<long>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<long>;
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<long>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylElonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_258_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaImpProxy<long>((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::TClaImpProxy<long>((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylElonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_258_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaImpProxy<long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::TClaImpProxy<long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylElonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_258_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaImpProxy<long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::TClaImpProxy<long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylElonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_258_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylElonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_258_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const long& obj = ((ROOT::TClaImpProxy<long>*) G__getstructoffset())->At((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'l', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_258_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const long& obj = ((ROOT::TClaImpProxy<long>*) G__getstructoffset())->operator[]((Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'l', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_258_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const long& obj = ((ROOT::TClaImpProxy<long>*) G__getstructoffset())->operator[]((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'l', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_258_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::TClaImpProxy<long>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::TClaImpProxy<long>(*(ROOT::TClaImpProxy<long>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylElonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::TClaImpProxy<long> G__TROOTcLcLTClaImpProxylElonggR;
static int G__G__TreePlayer_258_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::TClaImpProxy<long>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::TClaImpProxy<long>*) (soff+(sizeof(ROOT::TClaImpProxy<long>)*i)))->~G__TROOTcLcLTClaImpProxylElonggR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::TClaImpProxy<long>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::TClaImpProxy<long>*) (soff))->~G__TROOTcLcLTClaImpProxylElonggR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::TClaImpProxy<long long> */
static int G__G__TreePlayer_259_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<long long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<long long>[n];
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<long long>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<long long>;
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<long long>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylElongsPlonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_259_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<long long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaImpProxy<long long>((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::TClaImpProxy<long long>((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylElongsPlonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_259_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<long long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaImpProxy<long long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::TClaImpProxy<long long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylElongsPlonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_259_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<long long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaImpProxy<long long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::TClaImpProxy<long long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylElongsPlonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_259_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<long long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<long long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<long long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<long long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<long long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<long long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<long long>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylElongsPlonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_259_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const long long& obj = ((ROOT::TClaImpProxy<long long>*) G__getstructoffset())->At((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'n', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_259_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const long long& obj = ((ROOT::TClaImpProxy<long long>*) G__getstructoffset())->operator[]((Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'n', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_259_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const long long& obj = ((ROOT::TClaImpProxy<long long>*) G__getstructoffset())->operator[]((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'n', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_259_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::TClaImpProxy<long long>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::TClaImpProxy<long long>(*(ROOT::TClaImpProxy<long long>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylElongsPlonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::TClaImpProxy<long long> G__TROOTcLcLTClaImpProxylElongsPlonggR;
static int G__G__TreePlayer_259_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::TClaImpProxy<long long>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::TClaImpProxy<long long>*) (soff+(sizeof(ROOT::TClaImpProxy<long long>)*i)))->~G__TROOTcLcLTClaImpProxylElongsPlonggR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::TClaImpProxy<long long>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::TClaImpProxy<long long>*) (soff))->~G__TROOTcLcLTClaImpProxylElongsPlonggR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::TClaImpProxy<short> */
static int G__G__TreePlayer_260_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<short>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<short>[n];
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<short>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<short>;
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<short>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEshortgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_260_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<short>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaImpProxy<short>((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::TClaImpProxy<short>((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEshortgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_260_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<short>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaImpProxy<short>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::TClaImpProxy<short>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEshortgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_260_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<short>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaImpProxy<short>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::TClaImpProxy<short>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEshortgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_260_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<short>* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<short>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<short>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<short>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<short>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<short>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<short>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEshortgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_260_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const short& obj = ((ROOT::TClaImpProxy<short>*) G__getstructoffset())->At((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 's', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_260_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const short& obj = ((ROOT::TClaImpProxy<short>*) G__getstructoffset())->operator[]((Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 's', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_260_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const short& obj = ((ROOT::TClaImpProxy<short>*) G__getstructoffset())->operator[]((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 's', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_260_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::TClaImpProxy<short>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::TClaImpProxy<short>(*(ROOT::TClaImpProxy<short>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEshortgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::TClaImpProxy<short> G__TROOTcLcLTClaImpProxylEshortgR;
static int G__G__TreePlayer_260_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::TClaImpProxy<short>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::TClaImpProxy<short>*) (soff+(sizeof(ROOT::TClaImpProxy<short>)*i)))->~G__TROOTcLcLTClaImpProxylEshortgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::TClaImpProxy<short>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::TClaImpProxy<short>*) (soff))->~G__TROOTcLcLTClaImpProxylEshortgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::TClaImpProxy<char> */
static int G__G__TreePlayer_261_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<char>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<char>[n];
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<char>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<char>;
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<char>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEchargR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_261_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<char>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaImpProxy<char>((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::TClaImpProxy<char>((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEchargR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_261_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<char>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaImpProxy<char>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::TClaImpProxy<char>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEchargR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_261_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<char>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaImpProxy<char>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::TClaImpProxy<char>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEchargR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_261_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<char>* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<char>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<char>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<char>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<char>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<char>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<char>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEchargR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_261_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const char& obj = ((ROOT::TClaImpProxy<char>*) G__getstructoffset())->At((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'c', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_261_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const char& obj = ((ROOT::TClaImpProxy<char>*) G__getstructoffset())->operator[]((Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'c', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_261_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const char& obj = ((ROOT::TClaImpProxy<char>*) G__getstructoffset())->operator[]((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'c', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_261_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::TClaImpProxy<char>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::TClaImpProxy<char>(*(ROOT::TClaImpProxy<char>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEchargR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::TClaImpProxy<char> G__TROOTcLcLTClaImpProxylEchargR;
static int G__G__TreePlayer_261_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::TClaImpProxy<char>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::TClaImpProxy<char>*) (soff+(sizeof(ROOT::TClaImpProxy<char>)*i)))->~G__TROOTcLcLTClaImpProxylEchargR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::TClaImpProxy<char>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::TClaImpProxy<char>*) (soff))->~G__TROOTcLcLTClaImpProxylEchargR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::TClaImpProxy<bool> */
static int G__G__TreePlayer_262_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<bool>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<bool>[n];
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<bool>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<bool>;
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<bool>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEboolgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_262_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<bool>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaImpProxy<bool>((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::TClaImpProxy<bool>((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEboolgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_262_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<bool>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaImpProxy<bool>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::TClaImpProxy<bool>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEboolgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_262_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<bool>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaImpProxy<bool>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::TClaImpProxy<bool>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEboolgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_262_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaImpProxy<bool>* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<bool>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<bool>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<bool>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<bool>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaImpProxy<bool>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ROOT::TClaImpProxy<bool>(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEboolgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_262_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const bool& obj = ((ROOT::TClaImpProxy<bool>*) G__getstructoffset())->At((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'g', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_262_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const bool& obj = ((ROOT::TClaImpProxy<bool>*) G__getstructoffset())->operator[]((Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'g', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_262_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const bool& obj = ((ROOT::TClaImpProxy<bool>*) G__getstructoffset())->operator[]((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'g', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_262_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::TClaImpProxy<bool>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::TClaImpProxy<bool>(*(ROOT::TClaImpProxy<bool>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEboolgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::TClaImpProxy<bool> G__TROOTcLcLTClaImpProxylEboolgR;
static int G__G__TreePlayer_262_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::TClaImpProxy<bool>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::TClaImpProxy<bool>*) (soff+(sizeof(ROOT::TClaImpProxy<bool>)*i)))->~G__TROOTcLcLTClaImpProxylEboolgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::TClaImpProxy<bool>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::TClaImpProxy<bool>*) (soff))->~G__TROOTcLcLTClaImpProxylEboolgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> > */
static int G__G__TreePlayer_263_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> >[n];
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> >;
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_263_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> >((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> >((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_263_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_263_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_263_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_263_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> >*) G__getstructoffset())->At((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_263_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> >*) G__getstructoffset())->operator[]((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_263_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> >*) G__getstructoffset())->operator[]((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_263_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> >* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> >(*(ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> >*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> > G__TROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR;
static int G__G__TreePlayer_263_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> >*) (soff+(sizeof(ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> >)*i)))->~G__TROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> >*) (soff))->~G__TROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> > */
static int G__G__TreePlayer_265_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> >[n];
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> >;
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_265_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> >((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> >((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_265_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_265_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_265_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_265_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> >*) G__getstructoffset())->At((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_265_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> >*) G__getstructoffset())->operator[]((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_265_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> >*) G__getstructoffset())->operator[]((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_265_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> >* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> >(*(ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> >*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> > G__TROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR;
static int G__G__TreePlayer_265_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> >*) (soff+(sizeof(ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> >)*i)))->~G__TROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> >*) (soff))->~G__TROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> > */
static int G__G__TreePlayer_267_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >[n];
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >;
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_267_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_267_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_267_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_267_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_267_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 72, (long) ((ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >*) G__getstructoffset())->At((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_267_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 72, (long) ((ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >*) G__getstructoffset())->operator[]((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_267_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 72, (long) ((ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >*) G__getstructoffset())->operator[]((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_267_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >(*(ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> > G__TROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR;
static int G__G__TreePlayer_267_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >*) (soff+(sizeof(ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >)*i)))->~G__TROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >*) (soff))->~G__TROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> > */
static int G__G__TreePlayer_268_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >[n];
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >;
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_268_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_268_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_268_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_268_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_268_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 75, (long) ((ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >*) G__getstructoffset())->At((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_268_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 75, (long) ((ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >*) G__getstructoffset())->operator[]((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_268_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 75, (long) ((ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >*) G__getstructoffset())->operator[]((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_268_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >(*(ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> > G__TROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR;
static int G__G__TreePlayer_268_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >*) (soff+(sizeof(ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >)*i)))->~G__TROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >*) (soff))->~G__TROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long long,0> > */
static int G__G__TreePlayer_269_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long long,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long long,0> >[n];
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long long,0> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long long,0> >;
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long long,0> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_269_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long long,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long long,0> >((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long long,0> >((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_269_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long long,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_269_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long long,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_269_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long long,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_269_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 77, (long) ((ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long long,0> >*) G__getstructoffset())->At((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_269_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 77, (long) ((ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long long,0> >*) G__getstructoffset())->operator[]((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_269_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 77, (long) ((ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long long,0> >*) G__getstructoffset())->operator[]((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_269_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long long,0> >* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long long,0> >(*(ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long long,0> >*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long long,0> > G__TROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR;
static int G__G__TreePlayer_269_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long long,0> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long long,0> >*) (soff+(sizeof(ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long long,0> >)*i)))->~G__TROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long long,0> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long long,0> >*) (soff))->~G__TROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> > */
static int G__G__TreePlayer_270_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >[n];
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >;
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_270_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_270_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_270_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_270_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_270_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 82, (long) ((ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >*) G__getstructoffset())->At((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_270_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 82, (long) ((ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >*) G__getstructoffset())->operator[]((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_270_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 82, (long) ((ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >*) G__getstructoffset())->operator[]((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_270_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >(*(ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> > G__TROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR;
static int G__G__TreePlayer_270_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >*) (soff+(sizeof(ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >)*i)))->~G__TROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >*) (soff))->~G__TROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> > */
static int G__G__TreePlayer_271_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >[n];
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >;
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_271_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_271_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_271_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_271_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_271_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 66, (long) ((ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >*) G__getstructoffset())->At((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_271_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 66, (long) ((ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >*) G__getstructoffset())->operator[]((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_271_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 66, (long) ((ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >*) G__getstructoffset())->operator[]((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_271_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >(*(ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> > G__TROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR;
static int G__G__TreePlayer_271_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >*) (soff+(sizeof(ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >)*i)))->~G__TROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >*) (soff))->~G__TROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> > */
static int G__G__TreePlayer_272_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >[n];
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >;
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_272_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_272_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_272_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_272_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_272_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >*) G__getstructoffset())->At((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_272_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >*) G__getstructoffset())->operator[]((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_272_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >*) G__getstructoffset())->operator[]((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_272_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >(*(ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> > G__TROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR;
static int G__G__TreePlayer_272_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >*) (soff+(sizeof(ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >)*i)))->~G__TROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >*) (soff))->~G__TROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> > */
static int G__G__TreePlayer_273_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >[n];
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >;
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_273_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_273_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_273_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_273_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_273_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 76, (long) ((ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >*) G__getstructoffset())->At((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_273_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 76, (long) ((ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >*) G__getstructoffset())->operator[]((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_273_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 76, (long) ((ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >*) G__getstructoffset())->operator[]((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_273_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >(*(ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> > G__TROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR;
static int G__G__TreePlayer_273_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >*) (soff+(sizeof(ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >)*i)))->~G__TROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >*) (soff))->~G__TROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::TClaArrayProxy<ROOT::TArrayType<long long,0> > */
static int G__G__TreePlayer_274_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<long long,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<long long,0> >[n];
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<long long,0> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<long long,0> >;
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<long long,0> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_274_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<long long,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaArrayProxy<ROOT::TArrayType<long long,0> >((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<long long,0> >((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_274_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<long long,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaArrayProxy<ROOT::TArrayType<long long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<long long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_274_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<long long,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaArrayProxy<ROOT::TArrayType<long long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<long long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_274_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<long long,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<long long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<long long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<long long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<long long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<long long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<long long,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_274_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 78, (long) ((ROOT::TClaArrayProxy<ROOT::TArrayType<long long,0> >*) G__getstructoffset())->At((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_274_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 78, (long) ((ROOT::TClaArrayProxy<ROOT::TArrayType<long long,0> >*) G__getstructoffset())->operator[]((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_274_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 78, (long) ((ROOT::TClaArrayProxy<ROOT::TArrayType<long long,0> >*) G__getstructoffset())->operator[]((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_274_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::TClaArrayProxy<ROOT::TArrayType<long long,0> >* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::TClaArrayProxy<ROOT::TArrayType<long long,0> >(*(ROOT::TClaArrayProxy<ROOT::TArrayType<long long,0> >*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::TClaArrayProxy<ROOT::TArrayType<long long,0> > G__TROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR;
static int G__G__TreePlayer_274_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::TClaArrayProxy<ROOT::TArrayType<long long,0> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::TClaArrayProxy<ROOT::TArrayType<long long,0> >*) (soff+(sizeof(ROOT::TClaArrayProxy<ROOT::TArrayType<long long,0> >)*i)))->~G__TROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::TClaArrayProxy<ROOT::TArrayType<long long,0> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::TClaArrayProxy<ROOT::TArrayType<long long,0> >*) (soff))->~G__TROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> > */
static int G__G__TreePlayer_276_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >[n];
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >;
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_276_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_276_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_276_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_276_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_276_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >*) G__getstructoffset())->At((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_276_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >*) G__getstructoffset())->operator[]((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_276_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >*) G__getstructoffset())->operator[]((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_276_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >(*(ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> > G__TROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR;
static int G__G__TreePlayer_276_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >*) (soff+(sizeof(ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >)*i)))->~G__TROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >*) (soff))->~G__TROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> > */
static int G__G__TreePlayer_277_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >[n];
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >;
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_277_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_277_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_277_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_277_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_277_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 71, (long) ((ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >*) G__getstructoffset())->At((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_277_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 71, (long) ((ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >*) G__getstructoffset())->operator[]((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_277_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 71, (long) ((ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >*) G__getstructoffset())->operator[]((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_277_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >(*(ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> > G__TROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR;
static int G__G__TreePlayer_277_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >*) (soff+(sizeof(ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >)*i)))->~G__TROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >*) (soff))->~G__TROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TChainIndex */
static int G__G__TreePlayer_308_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TChainIndex* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TChainIndex[n];
     } else {
       p = new((void*) gvp) TChainIndex[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TChainIndex;
     } else {
       p = new((void*) gvp) TChainIndex;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_TChainIndex));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_308_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TChainIndex* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TChainIndex(
(const TTree*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) TChainIndex(
(const TTree*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_TChainIndex));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_308_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TChainIndex*) G__getstructoffset())->GetMajorFormulaParent((const TTree*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_308_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TChainIndex*) G__getstructoffset())->GetMinorFormulaParent((const TTree*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_308_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TChainIndex::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_308_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TChainIndex::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_308_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TChainIndex::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_308_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TChainIndex::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_308_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TChainIndex*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_308_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TChainIndex::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_308_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TChainIndex::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_308_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TChainIndex::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_308_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TChainIndex::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_308_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TChainIndex* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TChainIndex(*(TChainIndex*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_TChainIndex));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TChainIndex G__TTChainIndex;
static int G__G__TreePlayer_308_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TChainIndex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TChainIndex*) (soff+(sizeof(TChainIndex)*i)))->~G__TTChainIndex();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TChainIndex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TChainIndex*) (soff))->~G__TTChainIndex();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__TreePlayer_308_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TChainIndex* dest = (TChainIndex*) G__getstructoffset();
   *dest = *(TChainIndex*) libp->para[0].ref;
   const TChainIndex& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TChainIndex::TChainIndexEntry */
static int G__G__TreePlayer_309_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TChainIndex::TChainIndexEntry* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TChainIndex::TChainIndexEntry[n];
     } else {
       p = new((void*) gvp) TChainIndex::TChainIndexEntry[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TChainIndex::TChainIndexEntry;
     } else {
       p = new((void*) gvp) TChainIndex::TChainIndexEntry;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_TChainIndexcLcLTChainIndexEntry));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_309_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TChainIndex::TChainIndexEntry* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TChainIndex::TChainIndexEntry(*(TChainIndex::TChainIndexEntry*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_TChainIndexcLcLTChainIndexEntry));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TChainIndex::TChainIndexEntry G__TTChainIndexcLcLTChainIndexEntry;
static int G__G__TreePlayer_309_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TChainIndex::TChainIndexEntry*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TChainIndex::TChainIndexEntry*) (soff+(sizeof(TChainIndex::TChainIndexEntry)*i)))->~G__TTChainIndexcLcLTChainIndexEntry();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TChainIndex::TChainIndexEntry*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TChainIndex::TChainIndexEntry*) (soff))->~G__TTChainIndexcLcLTChainIndexEntry();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__TreePlayer_309_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TChainIndex::TChainIndexEntry* dest = (TChainIndex::TChainIndexEntry*) G__getstructoffset();
   *dest = *(TChainIndex::TChainIndexEntry*) libp->para[0].ref;
   const TChainIndex::TChainIndexEntry& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TFileDrawMap */
static int G__G__TreePlayer_316_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TFileDrawMap* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TFileDrawMap[n];
     } else {
       p = new((void*) gvp) TFileDrawMap[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TFileDrawMap;
     } else {
       p = new((void*) gvp) TFileDrawMap;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_TFileDrawMap));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_316_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TFileDrawMap* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TFileDrawMap(
(const TFile*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) TFileDrawMap(
(const TFile*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_TFileDrawMap));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_316_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TFileDrawMap*) G__getstructoffset())->AnimateTree((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TFileDrawMap*) G__getstructoffset())->AnimateTree();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_316_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFileDrawMap*) G__getstructoffset())->DrawObject();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_316_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFileDrawMap*) G__getstructoffset())->DumpObject();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_316_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFileDrawMap*) G__getstructoffset())->InspectObject();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_316_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TFileDrawMap::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_316_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TFileDrawMap::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_316_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TFileDrawMap::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_316_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TFileDrawMap::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_316_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFileDrawMap*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_316_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TFileDrawMap::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_316_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TFileDrawMap::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_316_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TFileDrawMap::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_316_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TFileDrawMap::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_316_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TFileDrawMap* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TFileDrawMap(*(TFileDrawMap*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_TFileDrawMap));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TFileDrawMap G__TTFileDrawMap;
static int G__G__TreePlayer_316_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TFileDrawMap*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TFileDrawMap*) (soff+(sizeof(TFileDrawMap)*i)))->~G__TTFileDrawMap();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TFileDrawMap*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TFileDrawMap*) (soff))->~G__TTFileDrawMap();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__TreePlayer_316_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TFileDrawMap* dest = (TFileDrawMap*) G__getstructoffset();
   *dest = *(TFileDrawMap*) libp->para[0].ref;
   const TFileDrawMap& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::TFriendProxyDescriptor */
static int G__G__TreePlayer_377_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TFriendProxyDescriptor* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TFriendProxyDescriptor(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::TFriendProxyDescriptor(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTFriendProxyDescriptor));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_377_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TFriendProxyDescriptor* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TFriendProxyDescriptor(*(ROOT::TFriendProxyDescriptor*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::TFriendProxyDescriptor(*(ROOT::TFriendProxyDescriptor*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTFriendProxyDescriptor));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_377_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::TFriendProxyDescriptor& obj = ((ROOT::TFriendProxyDescriptor*) G__getstructoffset())->operator=(*(ROOT::TFriendProxyDescriptor*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_377_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const ROOT::TFriendProxyDescriptor*) G__getstructoffset())->GetIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_377_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ROOT::TFriendProxyDescriptor*) G__getstructoffset())->GetListOfTopProxies());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_377_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::TFriendProxyDescriptor*) G__getstructoffset())->IsEquivalent((const ROOT::TFriendProxyDescriptor*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_377_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::TFriendProxyDescriptor*) G__getstructoffset())->OutputClassDecl((FILE*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_377_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::TFriendProxyDescriptor*) G__getstructoffset())->OutputDecl((FILE*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_377_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::TFriendProxyDescriptor*) G__getstructoffset())->IsDuplicate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_377_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::TFriendProxyDescriptor*) G__getstructoffset())->SetDuplicate();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_377_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ROOT::TFriendProxyDescriptor::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_377_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ROOT::TFriendProxyDescriptor::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_377_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ROOT::TFriendProxyDescriptor::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_377_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ROOT::TFriendProxyDescriptor::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_377_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::TFriendProxyDescriptor*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_377_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ROOT::TFriendProxyDescriptor::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_377_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ROOT::TFriendProxyDescriptor::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_377_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ROOT::TFriendProxyDescriptor::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_377_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ROOT::TFriendProxyDescriptor::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::TFriendProxyDescriptor G__TROOTcLcLTFriendProxyDescriptor;
static int G__G__TreePlayer_377_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::TFriendProxyDescriptor*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::TFriendProxyDescriptor*) (soff+(sizeof(ROOT::TFriendProxyDescriptor)*i)))->~G__TROOTcLcLTFriendProxyDescriptor();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::TFriendProxyDescriptor*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::TFriendProxyDescriptor*) (soff))->~G__TROOTcLcLTFriendProxyDescriptor();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TTreeFormulaManager */
static int G__G__TreePlayer_382_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TTreeFormulaManager* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     p = 0;
     G__genericerror("Error: Array construction with private/protected destructor is illegal");
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TTreeFormulaManager;
     } else {
       p = new((void*) gvp) TTreeFormulaManager;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormulaManager));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_382_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTreeFormulaManager*) G__getstructoffset())->Add((TTreeFormula*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_382_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TTreeFormulaManager*) G__getstructoffset())->GetMultiplicity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_382_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((TTreeFormulaManager*) G__getstructoffset())->GetNdata((Bool_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((TTreeFormulaManager*) G__getstructoffset())->GetNdata());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_382_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTreeFormulaManager*) G__getstructoffset())->Remove((TTreeFormula*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_382_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TTreeFormulaManager*) G__getstructoffset())->Sync());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_382_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTreeFormulaManager*) G__getstructoffset())->UpdateFormulaLeaves();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_382_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TTreeFormulaManager::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_382_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TTreeFormulaManager::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_382_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TTreeFormulaManager::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_382_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TTreeFormulaManager::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_382_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTreeFormulaManager*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_382_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TTreeFormulaManager::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_382_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TTreeFormulaManager::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_382_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TTreeFormulaManager::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_382_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TTreeFormulaManager::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSelectorDraw */
static int G__G__TreePlayer_383_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSelectorDraw* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSelectorDraw[n];
     } else {
       p = new((void*) gvp) TSelectorDraw[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSelectorDraw;
     } else {
       p = new((void*) gvp) TSelectorDraw;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_TSelectorDraw));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_383_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSelectorDraw*) G__getstructoffset())->GetAction());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_383_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TSelectorDraw*) G__getstructoffset())->GetCleanElist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_383_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSelectorDraw*) G__getstructoffset())->GetDimension());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_383_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((const TSelectorDraw*) G__getstructoffset())->GetDrawFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_383_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSelectorDraw*) G__getstructoffset())->GetObject());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_383_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSelectorDraw*) G__getstructoffset())->GetMultiplicity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_383_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSelectorDraw*) G__getstructoffset())->GetNfill());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_383_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSelectorDraw*) G__getstructoffset())->GetOldHistogram());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_383_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSelectorDraw*) G__getstructoffset())->GetSelect());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_383_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((const TSelectorDraw*) G__getstructoffset())->GetSelectedRows());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_383_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSelectorDraw*) G__getstructoffset())->GetTree());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_383_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSelectorDraw*) G__getstructoffset())->GetVar((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_383_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSelectorDraw*) G__getstructoffset())->GetVar1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_383_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSelectorDraw*) G__getstructoffset())->GetVar2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_383_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSelectorDraw*) G__getstructoffset())->GetVar3());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_383_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSelectorDraw*) G__getstructoffset())->GetVar4());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_383_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const TSelectorDraw*) G__getstructoffset())->GetVal((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_383_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const TSelectorDraw*) G__getstructoffset())->GetV1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_383_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const TSelectorDraw*) G__getstructoffset())->GetV2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_383_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const TSelectorDraw*) G__getstructoffset())->GetV3());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_383_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const TSelectorDraw*) G__getstructoffset())->GetV4());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_383_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const TSelectorDraw*) G__getstructoffset())->GetW());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_383_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSelectorDraw*) G__getstructoffset())->ProcessFillMultiple((Long64_t) G__Longlong(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_383_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSelectorDraw*) G__getstructoffset())->ProcessFillObject((Long64_t) G__Longlong(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_383_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSelectorDraw*) G__getstructoffset())->SetEstimate((Long64_t) G__Longlong(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_383_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TSelectorDraw*) G__getstructoffset())->SplitNames(*(TString*) libp->para[0].ref, *(vector<TString>*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_383_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSelectorDraw*) G__getstructoffset())->TakeAction();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_383_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSelectorDraw*) G__getstructoffset())->TakeEstimate();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_383_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSelectorDraw::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_383_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSelectorDraw::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_383_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSelectorDraw::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_383_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSelectorDraw::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_383_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSelectorDraw*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_383_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSelectorDraw::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_383_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSelectorDraw::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_383_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSelectorDraw::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_383_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSelectorDraw::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSelectorDraw G__TTSelectorDraw;
static int G__G__TreePlayer_383_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSelectorDraw*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSelectorDraw*) (soff+(sizeof(TSelectorDraw)*i)))->~G__TTSelectorDraw();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSelectorDraw*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSelectorDraw*) (soff))->~G__TTSelectorDraw();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSelectorEntries */
static int G__G__TreePlayer_389_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSelectorEntries* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSelectorEntries((TTree*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TSelectorEntries((TTree*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSelectorEntries((TTree*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TSelectorEntries((TTree*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TSelectorEntries[n];
       } else {
         p = new((void*) gvp) TSelectorEntries[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TSelectorEntries;
       } else {
         p = new((void*) gvp) TSelectorEntries;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_TSelectorEntries));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_389_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSelectorEntries* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSelectorEntries((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TSelectorEntries((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_TSelectorEntries));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_389_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((const TSelectorEntries*) G__getstructoffset())->GetSelectedRows());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_389_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSelectorEntries*) G__getstructoffset())->SetSelection((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_389_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSelectorEntries::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_389_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSelectorEntries::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_389_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSelectorEntries::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_389_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSelectorEntries::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_389_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSelectorEntries*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_389_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSelectorEntries::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_389_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSelectorEntries::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_389_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSelectorEntries::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_389_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSelectorEntries::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSelectorEntries G__TTSelectorEntries;
static int G__G__TreePlayer_389_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSelectorEntries*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSelectorEntries*) (soff+(sizeof(TSelectorEntries)*i)))->~G__TTSelectorEntries();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSelectorEntries*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSelectorEntries*) (soff))->~G__TTSelectorEntries();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TTreeDrawArgsParser */
static int G__G__TreePlayer_390_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TTreeDrawArgsParser* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TTreeDrawArgsParser[n];
     } else {
       p = new((void*) gvp) TTreeDrawArgsParser[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TTreeDrawArgsParser;
     } else {
       p = new((void*) gvp) TTreeDrawArgsParser;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeDrawArgsParser));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_390_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TTreeDrawArgsParser*) G__getstructoffset())->Parse((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_390_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TTreeDrawArgsParser*) G__getstructoffset())->GetAdd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_390_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TTreeDrawArgsParser*) G__getstructoffset())->GetDimension());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_390_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TTreeDrawArgsParser*) G__getstructoffset())->GetShouldDraw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_390_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const TTreeDrawArgsParser*) G__getstructoffset())->GetExp();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_390_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TTreeDrawArgsParser*) G__getstructoffset())->GetIfSpecified((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_390_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TTreeDrawArgsParser*) G__getstructoffset())->GetNoParameters());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_390_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TTreeDrawArgsParser*) G__getstructoffset())->GetParameter((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_390_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const TTreeDrawArgsParser*) G__getstructoffset())->GetProofSelectorName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_390_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const TTreeDrawArgsParser*) G__getstructoffset())->GetObjectName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_390_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const TTreeDrawArgsParser*) G__getstructoffset())->GetObjectTitle();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_390_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TTreeDrawArgsParser*) G__getstructoffset())->GetOptionSame());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_390_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TTreeDrawArgsParser*) G__getstructoffset())->GetOriginal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_390_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const TTreeDrawArgsParser*) G__getstructoffset())->GetSelection();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_390_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const TTreeDrawArgsParser*) G__getstructoffset())->GetVarExp((Int_t) G__int(libp->para[0]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_390_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const TTreeDrawArgsParser*) G__getstructoffset())->GetVarExp();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_390_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TTreeDrawArgsParser*) G__getstructoffset())->IsSpecified((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_390_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTreeDrawArgsParser*) G__getstructoffset())->SetObjectName((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_390_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTreeDrawArgsParser*) G__getstructoffset())->SetOriginal((TObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_390_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TTreeDrawArgsParser::GetMaxDimension());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_390_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TTreeDrawArgsParser::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_390_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TTreeDrawArgsParser::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_390_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TTreeDrawArgsParser::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_390_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TTreeDrawArgsParser::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_390_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTreeDrawArgsParser*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_390_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TTreeDrawArgsParser::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_390_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TTreeDrawArgsParser::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_390_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TTreeDrawArgsParser::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_390_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TTreeDrawArgsParser::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_390_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TTreeDrawArgsParser* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TTreeDrawArgsParser(*(TTreeDrawArgsParser*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeDrawArgsParser));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TTreeDrawArgsParser G__TTTreeDrawArgsParser;
static int G__G__TreePlayer_390_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TTreeDrawArgsParser*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TTreeDrawArgsParser*) (soff+(sizeof(TTreeDrawArgsParser)*i)))->~G__TTTreeDrawArgsParser();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TTreeDrawArgsParser*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TTreeDrawArgsParser*) (soff))->~G__TTTreeDrawArgsParser();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__TreePlayer_390_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TTreeDrawArgsParser* dest = (TTreeDrawArgsParser*) G__getstructoffset();
   *dest = *(TTreeDrawArgsParser*) libp->para[0].ref;
   const TTreeDrawArgsParser& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TTreeIndex */
static int G__G__TreePlayer_406_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TTreeIndex* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TTreeIndex[n];
     } else {
       p = new((void*) gvp) TTreeIndex[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TTreeIndex;
     } else {
       p = new((void*) gvp) TTreeIndex;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeIndex));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_406_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TTreeIndex* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TTreeIndex(
(const TTree*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) TTreeIndex(
(const TTree*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeIndex));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_406_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 78, (long) ((const TTreeIndex*) G__getstructoffset())->GetIndexValues());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_406_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 78, (long) ((const TTreeIndex*) G__getstructoffset())->GetIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_406_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TTreeIndex*) G__getstructoffset())->GetMajorFormula());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_406_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TTreeIndex*) G__getstructoffset())->GetMinorFormula());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_406_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TTreeIndex*) G__getstructoffset())->GetMajorFormulaParent((const TTree*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_406_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TTreeIndex*) G__getstructoffset())->GetMinorFormulaParent((const TTree*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_406_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TTreeIndex::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_406_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TTreeIndex::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_406_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TTreeIndex::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_406_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TTreeIndex::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_406_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTreeIndex*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_406_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TTreeIndex::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_406_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TTreeIndex::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_406_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TTreeIndex::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_406_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TTreeIndex::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_406_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TTreeIndex* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TTreeIndex(*(TTreeIndex*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeIndex));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TTreeIndex G__TTTreeIndex;
static int G__G__TreePlayer_406_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TTreeIndex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TTreeIndex*) (soff+(sizeof(TTreeIndex)*i)))->~G__TTTreeIndex();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TTreeIndex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TTreeIndex*) (soff))->~G__TTTreeIndex();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__TreePlayer_406_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TTreeIndex* dest = (TTreeIndex*) G__getstructoffset();
   *dest = *(TTreeIndex*) libp->para[0].ref;
   const TTreeIndex& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TTreePerfStats */
static int G__G__TreePlayer_414_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TTreePerfStats* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TTreePerfStats[n];
     } else {
       p = new((void*) gvp) TTreePerfStats[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TTreePerfStats;
     } else {
       p = new((void*) gvp) TTreePerfStats;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreePerfStats));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_414_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TTreePerfStats* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TTreePerfStats((const char*) G__int(libp->para[0]), (TTree*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TTreePerfStats((const char*) G__int(libp->para[0]), (TTree*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreePerfStats));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_414_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTreePerfStats*) G__getstructoffset())->Finish();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_414_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((const TTreePerfStats*) G__getstructoffset())->GetBytesReadExtra());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_414_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TTreePerfStats*) G__getstructoffset())->GetCpuTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_414_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TTreePerfStats*) G__getstructoffset())->GetDiskTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_414_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TTreePerfStats*) G__getstructoffset())->GetGraphIO());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_414_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TTreePerfStats*) G__getstructoffset())->GetGraphTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_414_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TTreePerfStats*) G__getstructoffset())->GetHostInfo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_414_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TTreePerfStats*) G__getstructoffset())->GetNleaves());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_414_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TTreePerfStats*) G__getstructoffset())->GetPave());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_414_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TTreePerfStats*) G__getstructoffset())->GetReadaheadSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_414_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TTreePerfStats*) G__getstructoffset())->GetReadCalls());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_414_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TTreePerfStats*) G__getstructoffset())->GetRealTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_414_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TTreePerfStats*) G__getstructoffset())->GetStopwatch());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_414_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TTreePerfStats*) G__getstructoffset())->GetTreeCacheSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_414_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTreePerfStats*) G__getstructoffset())->SetBytesReadExtra((Long64_t) G__Longlong(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_414_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTreePerfStats*) G__getstructoffset())->SetCompress((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_414_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTreePerfStats*) G__getstructoffset())->SetDiskTime((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_414_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTreePerfStats*) G__getstructoffset())->SetCpuTime((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_414_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTreePerfStats*) G__getstructoffset())->SetGraphIO((TGraphErrors*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_414_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTreePerfStats*) G__getstructoffset())->SetGraphTime((TGraphErrors*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_414_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTreePerfStats*) G__getstructoffset())->SetHostInfo((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_414_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTreePerfStats*) G__getstructoffset())->SetName((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_414_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTreePerfStats*) G__getstructoffset())->SetNleaves((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_414_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTreePerfStats*) G__getstructoffset())->SetReadaheadSize((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_414_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTreePerfStats*) G__getstructoffset())->SetReadCalls((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_414_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTreePerfStats*) G__getstructoffset())->SetRealNorm((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_414_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTreePerfStats*) G__getstructoffset())->SetRealTime((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_414_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTreePerfStats*) G__getstructoffset())->SetTreeCacheSize((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_414_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TTreePerfStats::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_414_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TTreePerfStats::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_414_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TTreePerfStats::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_414_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TTreePerfStats::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_414_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTreePerfStats*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_414_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TTreePerfStats::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_414_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TTreePerfStats::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_414_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TTreePerfStats::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_414_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TTreePerfStats::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_414_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TTreePerfStats* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TTreePerfStats(*(TTreePerfStats*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreePerfStats));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TTreePerfStats G__TTTreePerfStats;
static int G__G__TreePlayer_414_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TTreePerfStats*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TTreePerfStats*) (soff+(sizeof(TTreePerfStats)*i)))->~G__TTTreePerfStats();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TTreePerfStats*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TTreePerfStats*) (soff))->~G__TTTreePerfStats();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__TreePlayer_414_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TTreePerfStats* dest = (TTreePerfStats*) G__getstructoffset();
   *dest = *(TTreePerfStats*) libp->para[0].ref;
   const TTreePerfStats& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TTreePlayer */
static int G__G__TreePlayer_415_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TTreePlayer* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TTreePlayer[n];
     } else {
       p = new((void*) gvp) TTreePlayer[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TTreePlayer;
     } else {
       p = new((void*) gvp) TTreePlayer;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreePlayer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_415_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((const TTreePlayer*) G__getstructoffset())->GetEntriesToProcess((Long64_t) G__Longlong(libp->para[0]), (Long64_t) G__Longlong(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_415_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TTreePlayer*) G__getstructoffset())->GetScanFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_415_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TTreePlayer*) G__getstructoffset())->GetSelector());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_415_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TTreePlayer*) G__getstructoffset())->GetSelectorFromFile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_415_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TTreePlayer*) G__getstructoffset())->ScanRedirected());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_415_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TTreePlayer*) G__getstructoffset())->SetScanRedirect((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TTreePlayer*) G__getstructoffset())->SetScanRedirect();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_415_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTreePlayer*) G__getstructoffset())->SetScanFileName((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_415_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TTreePlayer::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_415_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TTreePlayer::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_415_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TTreePlayer::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_415_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TTreePlayer::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_415_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTreePlayer*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_415_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TTreePlayer::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_415_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TTreePlayer::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_415_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TTreePlayer::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_415_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TTreePlayer::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TTreePlayer G__TTTreePlayer;
static int G__G__TreePlayer_415_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TTreePlayer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TTreePlayer*) (soff+(sizeof(TTreePlayer)*i)))->~G__TTTreePlayer();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TTreePlayer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TTreePlayer*) (soff))->~G__TTTreePlayer();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TTreeTableInterface */
static int G__G__TreePlayer_420_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TTreeTableInterface* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TTreeTableInterface(
(TTree*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Option_t*) G__int(libp->para[3])
, (Long64_t) G__Longlong(libp->para[4]), (Long64_t) G__Longlong(libp->para[5]));
     } else {
       p = new((void*) gvp) TTreeTableInterface(
(TTree*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Option_t*) G__int(libp->para[3])
, (Long64_t) G__Longlong(libp->para[4]), (Long64_t) G__Longlong(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TTreeTableInterface(
(TTree*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Option_t*) G__int(libp->para[3])
, (Long64_t) G__Longlong(libp->para[4]));
     } else {
       p = new((void*) gvp) TTreeTableInterface(
(TTree*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Option_t*) G__int(libp->para[3])
, (Long64_t) G__Longlong(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TTreeTableInterface(
(TTree*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Option_t*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TTreeTableInterface(
(TTree*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Option_t*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TTreeTableInterface(
(TTree*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TTreeTableInterface(
(TTree*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TTreeTableInterface((TTree*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TTreeTableInterface((TTree*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TTreeTableInterface((TTree*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TTreeTableInterface((TTree*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TTreeTableInterface[n];
       } else {
         p = new((void*) gvp) TTreeTableInterface[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TTreeTableInterface;
       } else {
         p = new((void*) gvp) TTreeTableInterface;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeTableInterface));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_420_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TTreeTableInterface*) G__getstructoffset())->GetEntryList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_420_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTreeTableInterface*) G__getstructoffset())->AddColumn((const char*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_420_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTreeTableInterface*) G__getstructoffset())->AddColumn((TTreeFormula*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_420_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTreeTableInterface*) G__getstructoffset())->RemoveColumn((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_420_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTreeTableInterface*) G__getstructoffset())->SetFormula((TTreeFormula*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_420_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTreeTableInterface*) G__getstructoffset())->SetSelection((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_420_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TTreeTableInterface*) G__getstructoffset())->SetEntryList((TEntryList*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TTreeTableInterface*) G__getstructoffset())->SetEntryList();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_420_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TTreeTableInterface::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_420_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TTreeTableInterface::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_420_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TTreeTableInterface::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_420_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TTreeTableInterface::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_420_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTreeTableInterface*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_420_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TTreeTableInterface::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_420_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TTreeTableInterface::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_420_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TTreeTableInterface::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_420_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TTreeTableInterface::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_420_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TTreeTableInterface* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TTreeTableInterface(*(TTreeTableInterface*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeTableInterface));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TTreeTableInterface G__TTTreeTableInterface;
static int G__G__TreePlayer_420_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TTreeTableInterface*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TTreeTableInterface*) (soff+(sizeof(TTreeTableInterface)*i)))->~G__TTTreeTableInterface();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TTreeTableInterface*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TTreeTableInterface*) (soff))->~G__TTTreeTableInterface();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__TreePlayer_420_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TTreeTableInterface* dest = (TTreeTableInterface*) G__getstructoffset();
   *dest = *(TTreeTableInterface*) libp->para[0].ref;
   const TTreeTableInterface& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::TArrayProxy<ROOT::TArrayType<short,0> > */
static int G__G__TreePlayer_422_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<short,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<short,0> >[n];
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<short,0> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<short,0> >;
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<short,0> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_422_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<short,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TArrayProxy<ROOT::TArrayType<short,0> >((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<short,0> >((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_422_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<short,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TArrayProxy<ROOT::TArrayType<short,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<short,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_422_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<short,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TArrayProxy<ROOT::TArrayType<short,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<short,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_422_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<short,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<short,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<short,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<short,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<short,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<short,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<short,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_422_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::TArrayProxy<ROOT::TArrayType<short,0> >::array_t& obj = ((ROOT::TArrayProxy<ROOT::TArrayType<short,0> >*) G__getstructoffset())->At((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 's', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_422_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::TArrayProxy<ROOT::TArrayType<short,0> >::array_t& obj = ((ROOT::TArrayProxy<ROOT::TArrayType<short,0> >*) G__getstructoffset())->operator[]((Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 's', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_422_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::TArrayProxy<ROOT::TArrayType<short,0> >::array_t& obj = ((ROOT::TArrayProxy<ROOT::TArrayType<short,0> >*) G__getstructoffset())->operator[]((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 's', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_422_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::TArrayProxy<ROOT::TArrayType<short,0> >* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::TArrayProxy<ROOT::TArrayType<short,0> >(*(ROOT::TArrayProxy<ROOT::TArrayType<short,0> >*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::TArrayProxy<ROOT::TArrayType<short,0> > G__TROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR;
static int G__G__TreePlayer_422_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::TArrayProxy<ROOT::TArrayType<short,0> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::TArrayProxy<ROOT::TArrayType<short,0> >*) (soff+(sizeof(ROOT::TArrayProxy<ROOT::TArrayType<short,0> >)*i)))->~G__TROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::TArrayProxy<ROOT::TArrayType<short,0> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::TArrayProxy<ROOT::TArrayType<short,0> >*) (soff))->~G__TROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::TArrayProxy<ROOT::TArrayType<char,0> > */
static int G__G__TreePlayer_423_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<char,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<char,0> >[n];
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<char,0> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<char,0> >;
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<char,0> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_423_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<char,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TArrayProxy<ROOT::TArrayType<char,0> >((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<char,0> >((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_423_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<char,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TArrayProxy<ROOT::TArrayType<char,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<char,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_423_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<char,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TArrayProxy<ROOT::TArrayType<char,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<char,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_423_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TArrayProxy<ROOT::TArrayType<char,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<char,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<char,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<char,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<char,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TArrayProxy<ROOT::TArrayType<char,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ROOT::TArrayProxy<ROOT::TArrayType<char,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_423_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::TArrayProxy<ROOT::TArrayType<char,0> >::array_t& obj = ((ROOT::TArrayProxy<ROOT::TArrayType<char,0> >*) G__getstructoffset())->At((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'c', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_423_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::TArrayProxy<ROOT::TArrayType<char,0> >::array_t& obj = ((ROOT::TArrayProxy<ROOT::TArrayType<char,0> >*) G__getstructoffset())->operator[]((Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'c', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_423_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::TArrayProxy<ROOT::TArrayType<char,0> >::array_t& obj = ((ROOT::TArrayProxy<ROOT::TArrayType<char,0> >*) G__getstructoffset())->operator[]((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'c', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_423_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::TArrayProxy<ROOT::TArrayType<char,0> >* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::TArrayProxy<ROOT::TArrayType<char,0> >(*(ROOT::TArrayProxy<ROOT::TArrayType<char,0> >*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::TArrayProxy<ROOT::TArrayType<char,0> > G__TROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR;
static int G__G__TreePlayer_423_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::TArrayProxy<ROOT::TArrayType<char,0> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::TArrayProxy<ROOT::TArrayType<char,0> >*) (soff+(sizeof(ROOT::TArrayProxy<ROOT::TArrayType<char,0> >)*i)))->~G__TROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::TArrayProxy<ROOT::TArrayType<char,0> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::TArrayProxy<ROOT::TArrayType<char,0> >*) (soff))->~G__TROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> > */
static int G__G__TreePlayer_424_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> >[n];
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> >;
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_424_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> >((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> >((ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_424_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_424_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_424_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> >(
(ROOT::TBranchProxyDirector*) G__int(libp->para[0]), (ROOT::TBranchProxy*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_424_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 83, (long) ((ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> >*) G__getstructoffset())->At((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_424_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 83, (long) ((ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> >*) G__getstructoffset())->operator[]((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreePlayer_424_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 83, (long) ((ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> >*) G__getstructoffset())->operator[]((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreePlayer_424_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> >* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> >(*(ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> >*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> > G__TROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR;
static int G__G__TreePlayer_424_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> >*) (soff+(sizeof(ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> >)*i)))->~G__TROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> >*) (soff))->~G__TROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* ROOT */

/* ROOT::TBranchProxyDescriptor */

/* ROOT::TBranchProxyClassDescriptor */

/* TTreeFormula */

/* ROOT::TBranchProxy */

/* ROOT::TFriendProxy */

/* ROOT::TBranchProxyDirector */

/* ROOT::TImpProxy<double> */

/* ROOT::TImpProxy<float> */

/* ROOT::TImpProxy<unsigned int> */

/* ROOT::TImpProxy<unsigned long> */

/* ROOT::TImpProxy<unsigned long long> */

/* ROOT::TImpProxy<unsigned short> */

/* ROOT::TImpProxy<unsigned char> */

/* ROOT::TImpProxy<int> */

/* ROOT::TImpProxy<long> */

/* ROOT::TImpProxy<long long> */

/* ROOT::TImpProxy<short> */

/* ROOT::TImpProxy<char> */

/* ROOT::TImpProxy<bool> */

/* ROOT::TArrayProxy<ROOT::TArrayType<double,0> > */

/* ROOT::TArrayProxy<ROOT::TArrayType<float,0> > */

/* ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> > */

/* ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> > */

/* ROOT::TArrayProxy<ROOT::TArrayType<unsigned long long,0> > */

/* ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> > */

/* ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> > */

/* ROOT::TArrayProxy<ROOT::TArrayType<int,0> > */

/* ROOT::TArrayProxy<ROOT::TArrayType<long,0> > */

/* ROOT::TArrayProxy<ROOT::TArrayType<long long,0> > */

/* ROOT::TArrayProxy<ROOT::TArrayType<bool,0> > */

/* ROOT::TClaImpProxy<double> */

/* ROOT::TClaImpProxy<float> */

/* ROOT::TClaImpProxy<unsigned int> */

/* ROOT::TClaImpProxy<unsigned long> */

/* ROOT::TClaImpProxy<unsigned long long> */

/* ROOT::TClaImpProxy<unsigned short> */

/* ROOT::TClaImpProxy<unsigned char> */

/* ROOT::TClaImpProxy<int> */

/* ROOT::TClaImpProxy<long> */

/* ROOT::TClaImpProxy<long long> */

/* ROOT::TClaImpProxy<short> */

/* ROOT::TClaImpProxy<char> */

/* ROOT::TClaImpProxy<bool> */

/* ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> > */

/* ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> > */

/* ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> > */

/* ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> > */

/* ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long long,0> > */

/* ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> > */

/* ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> > */

/* ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> > */

/* ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> > */

/* ROOT::TClaArrayProxy<ROOT::TArrayType<long long,0> > */

/* ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> > */

/* ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> > */

/* TChainIndex */

/* TChainIndex::TChainIndexEntry */

/* TFileDrawMap */

/* ROOT::TFriendProxyDescriptor */

/* TTreeFormulaManager */

/* TSelectorDraw */

/* TSelectorEntries */

/* TTreeDrawArgsParser */

/* TTreeIndex */

/* TTreePerfStats */

/* TTreePlayer */

/* TTreeTableInterface */

/* ROOT::TArrayProxy<ROOT::TArrayType<short,0> > */

/* ROOT::TArrayProxy<ROOT::TArrayType<char,0> > */

/* ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> > */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__TreePlayer {
 public:
  G__Sizep2memfuncG__TreePlayer(): p(&G__Sizep2memfuncG__TreePlayer::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__TreePlayer::*p)();
};

size_t G__get_sizep2memfuncG__TreePlayer()
{
  G__Sizep2memfuncG__TreePlayer a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__TreePlayer() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxyDescriptor))) {
     ROOT::TBranchProxyDescriptor *G__Lderived;
     G__Lderived=(ROOT::TBranchProxyDescriptor*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxyDescriptor),G__get_linked_tagnum(&G__G__TreePlayerLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxyDescriptor),G__get_linked_tagnum(&G__G__TreePlayerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxyClassDescriptor))) {
     ROOT::TBranchProxyClassDescriptor *G__Lderived;
     G__Lderived=(ROOT::TBranchProxyClassDescriptor*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxyClassDescriptor),G__get_linked_tagnum(&G__G__TreePlayerLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxyClassDescriptor),G__get_linked_tagnum(&G__G__TreePlayerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormula))) {
     TTreeFormula *G__Lderived;
     G__Lderived=(TTreeFormula*)0x1000;
     {
       TFormula *G__Lpbase=(TFormula*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormula),G__get_linked_tagnum(&G__G__TreePlayerLN_TFormula),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormula),G__get_linked_tagnum(&G__G__TreePlayerLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormula),G__get_linked_tagnum(&G__G__TreePlayerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEdoublegR))) {
     ROOT::TImpProxy<double> *G__Lderived;
     G__Lderived=(ROOT::TImpProxy<double>*)0x1000;
     {
       ROOT::TBranchProxy *G__Lpbase=(ROOT::TBranchProxy*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEdoublegR),G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEfloatgR))) {
     ROOT::TImpProxy<float> *G__Lderived;
     G__Lderived=(ROOT::TImpProxy<float>*)0x1000;
     {
       ROOT::TBranchProxy *G__Lpbase=(ROOT::TBranchProxy*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEfloatgR),G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPintgR))) {
     ROOT::TImpProxy<unsigned int> *G__Lderived;
     G__Lderived=(ROOT::TImpProxy<unsigned int>*)0x1000;
     {
       ROOT::TBranchProxy *G__Lpbase=(ROOT::TBranchProxy*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPintgR),G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPlonggR))) {
     ROOT::TImpProxy<unsigned long> *G__Lderived;
     G__Lderived=(ROOT::TImpProxy<unsigned long>*)0x1000;
     {
       ROOT::TBranchProxy *G__Lpbase=(ROOT::TBranchProxy*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPlonggR),G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPlongsPlonggR))) {
     ROOT::TImpProxy<unsigned long long> *G__Lderived;
     G__Lderived=(ROOT::TImpProxy<unsigned long long>*)0x1000;
     {
       ROOT::TBranchProxy *G__Lpbase=(ROOT::TBranchProxy*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPlongsPlonggR),G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPshortgR))) {
     ROOT::TImpProxy<unsigned short> *G__Lderived;
     G__Lderived=(ROOT::TImpProxy<unsigned short>*)0x1000;
     {
       ROOT::TBranchProxy *G__Lpbase=(ROOT::TBranchProxy*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPshortgR),G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPchargR))) {
     ROOT::TImpProxy<unsigned char> *G__Lderived;
     G__Lderived=(ROOT::TImpProxy<unsigned char>*)0x1000;
     {
       ROOT::TBranchProxy *G__Lpbase=(ROOT::TBranchProxy*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPchargR),G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEintgR))) {
     ROOT::TImpProxy<int> *G__Lderived;
     G__Lderived=(ROOT::TImpProxy<int>*)0x1000;
     {
       ROOT::TBranchProxy *G__Lpbase=(ROOT::TBranchProxy*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEintgR),G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylElonggR))) {
     ROOT::TImpProxy<long> *G__Lderived;
     G__Lderived=(ROOT::TImpProxy<long>*)0x1000;
     {
       ROOT::TBranchProxy *G__Lpbase=(ROOT::TBranchProxy*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylElonggR),G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylElongsPlonggR))) {
     ROOT::TImpProxy<long long> *G__Lderived;
     G__Lderived=(ROOT::TImpProxy<long long>*)0x1000;
     {
       ROOT::TBranchProxy *G__Lpbase=(ROOT::TBranchProxy*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylElongsPlonggR),G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEshortgR))) {
     ROOT::TImpProxy<short> *G__Lderived;
     G__Lderived=(ROOT::TImpProxy<short>*)0x1000;
     {
       ROOT::TBranchProxy *G__Lpbase=(ROOT::TBranchProxy*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEshortgR),G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEchargR))) {
     ROOT::TImpProxy<char> *G__Lderived;
     G__Lderived=(ROOT::TImpProxy<char>*)0x1000;
     {
       ROOT::TBranchProxy *G__Lpbase=(ROOT::TBranchProxy*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEchargR),G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEboolgR))) {
     ROOT::TImpProxy<bool> *G__Lderived;
     G__Lderived=(ROOT::TImpProxy<bool>*)0x1000;
     {
       ROOT::TBranchProxy *G__Lpbase=(ROOT::TBranchProxy*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEboolgR),G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR))) {
     ROOT::TArrayProxy<ROOT::TArrayType<double,0> > *G__Lderived;
     G__Lderived=(ROOT::TArrayProxy<ROOT::TArrayType<double,0> >*)0x1000;
     {
       ROOT::TBranchProxy *G__Lpbase=(ROOT::TBranchProxy*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR),G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR))) {
     ROOT::TArrayProxy<ROOT::TArrayType<float,0> > *G__Lderived;
     G__Lderived=(ROOT::TArrayProxy<ROOT::TArrayType<float,0> >*)0x1000;
     {
       ROOT::TBranchProxy *G__Lpbase=(ROOT::TBranchProxy*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR),G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR))) {
     ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> > *G__Lderived;
     G__Lderived=(ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >*)0x1000;
     {
       ROOT::TBranchProxy *G__Lpbase=(ROOT::TBranchProxy*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR),G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR))) {
     ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> > *G__Lderived;
     G__Lderived=(ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >*)0x1000;
     {
       ROOT::TBranchProxy *G__Lpbase=(ROOT::TBranchProxy*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR),G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR))) {
     ROOT::TArrayProxy<ROOT::TArrayType<unsigned long long,0> > *G__Lderived;
     G__Lderived=(ROOT::TArrayProxy<ROOT::TArrayType<unsigned long long,0> >*)0x1000;
     {
       ROOT::TBranchProxy *G__Lpbase=(ROOT::TBranchProxy*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR),G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR))) {
     ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> > *G__Lderived;
     G__Lderived=(ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >*)0x1000;
     {
       ROOT::TBranchProxy *G__Lpbase=(ROOT::TBranchProxy*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR),G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR))) {
     ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> > *G__Lderived;
     G__Lderived=(ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >*)0x1000;
     {
       ROOT::TBranchProxy *G__Lpbase=(ROOT::TBranchProxy*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR),G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR))) {
     ROOT::TArrayProxy<ROOT::TArrayType<int,0> > *G__Lderived;
     G__Lderived=(ROOT::TArrayProxy<ROOT::TArrayType<int,0> >*)0x1000;
     {
       ROOT::TBranchProxy *G__Lpbase=(ROOT::TBranchProxy*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR),G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR))) {
     ROOT::TArrayProxy<ROOT::TArrayType<long,0> > *G__Lderived;
     G__Lderived=(ROOT::TArrayProxy<ROOT::TArrayType<long,0> >*)0x1000;
     {
       ROOT::TBranchProxy *G__Lpbase=(ROOT::TBranchProxy*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR),G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR))) {
     ROOT::TArrayProxy<ROOT::TArrayType<long long,0> > *G__Lderived;
     G__Lderived=(ROOT::TArrayProxy<ROOT::TArrayType<long long,0> >*)0x1000;
     {
       ROOT::TBranchProxy *G__Lpbase=(ROOT::TBranchProxy*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR),G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR))) {
     ROOT::TArrayProxy<ROOT::TArrayType<bool,0> > *G__Lderived;
     G__Lderived=(ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >*)0x1000;
     {
       ROOT::TBranchProxy *G__Lpbase=(ROOT::TBranchProxy*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR),G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEdoublegR))) {
     ROOT::TClaImpProxy<double> *G__Lderived;
     G__Lderived=(ROOT::TClaImpProxy<double>*)0x1000;
     {
       ROOT::TBranchProxy *G__Lpbase=(ROOT::TBranchProxy*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEdoublegR),G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEfloatgR))) {
     ROOT::TClaImpProxy<float> *G__Lderived;
     G__Lderived=(ROOT::TClaImpProxy<float>*)0x1000;
     {
       ROOT::TBranchProxy *G__Lpbase=(ROOT::TBranchProxy*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEfloatgR),G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPintgR))) {
     ROOT::TClaImpProxy<unsigned int> *G__Lderived;
     G__Lderived=(ROOT::TClaImpProxy<unsigned int>*)0x1000;
     {
       ROOT::TBranchProxy *G__Lpbase=(ROOT::TBranchProxy*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPintgR),G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPlonggR))) {
     ROOT::TClaImpProxy<unsigned long> *G__Lderived;
     G__Lderived=(ROOT::TClaImpProxy<unsigned long>*)0x1000;
     {
       ROOT::TBranchProxy *G__Lpbase=(ROOT::TBranchProxy*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPlonggR),G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPlongsPlonggR))) {
     ROOT::TClaImpProxy<unsigned long long> *G__Lderived;
     G__Lderived=(ROOT::TClaImpProxy<unsigned long long>*)0x1000;
     {
       ROOT::TBranchProxy *G__Lpbase=(ROOT::TBranchProxy*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPlongsPlonggR),G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPshortgR))) {
     ROOT::TClaImpProxy<unsigned short> *G__Lderived;
     G__Lderived=(ROOT::TClaImpProxy<unsigned short>*)0x1000;
     {
       ROOT::TBranchProxy *G__Lpbase=(ROOT::TBranchProxy*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPshortgR),G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPchargR))) {
     ROOT::TClaImpProxy<unsigned char> *G__Lderived;
     G__Lderived=(ROOT::TClaImpProxy<unsigned char>*)0x1000;
     {
       ROOT::TBranchProxy *G__Lpbase=(ROOT::TBranchProxy*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPchargR),G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEintgR))) {
     ROOT::TClaImpProxy<int> *G__Lderived;
     G__Lderived=(ROOT::TClaImpProxy<int>*)0x1000;
     {
       ROOT::TBranchProxy *G__Lpbase=(ROOT::TBranchProxy*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEintgR),G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylElonggR))) {
     ROOT::TClaImpProxy<long> *G__Lderived;
     G__Lderived=(ROOT::TClaImpProxy<long>*)0x1000;
     {
       ROOT::TBranchProxy *G__Lpbase=(ROOT::TBranchProxy*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylElonggR),G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylElongsPlonggR))) {
     ROOT::TClaImpProxy<long long> *G__Lderived;
     G__Lderived=(ROOT::TClaImpProxy<long long>*)0x1000;
     {
       ROOT::TBranchProxy *G__Lpbase=(ROOT::TBranchProxy*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylElongsPlonggR),G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEshortgR))) {
     ROOT::TClaImpProxy<short> *G__Lderived;
     G__Lderived=(ROOT::TClaImpProxy<short>*)0x1000;
     {
       ROOT::TBranchProxy *G__Lpbase=(ROOT::TBranchProxy*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEshortgR),G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEchargR))) {
     ROOT::TClaImpProxy<char> *G__Lderived;
     G__Lderived=(ROOT::TClaImpProxy<char>*)0x1000;
     {
       ROOT::TBranchProxy *G__Lpbase=(ROOT::TBranchProxy*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEchargR),G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEboolgR))) {
     ROOT::TClaImpProxy<bool> *G__Lderived;
     G__Lderived=(ROOT::TClaImpProxy<bool>*)0x1000;
     {
       ROOT::TBranchProxy *G__Lpbase=(ROOT::TBranchProxy*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEboolgR),G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR))) {
     ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> > *G__Lderived;
     G__Lderived=(ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> >*)0x1000;
     {
       ROOT::TBranchProxy *G__Lpbase=(ROOT::TBranchProxy*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR),G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR))) {
     ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> > *G__Lderived;
     G__Lderived=(ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> >*)0x1000;
     {
       ROOT::TBranchProxy *G__Lpbase=(ROOT::TBranchProxy*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR),G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR))) {
     ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> > *G__Lderived;
     G__Lderived=(ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >*)0x1000;
     {
       ROOT::TBranchProxy *G__Lpbase=(ROOT::TBranchProxy*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR),G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR))) {
     ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> > *G__Lderived;
     G__Lderived=(ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >*)0x1000;
     {
       ROOT::TBranchProxy *G__Lpbase=(ROOT::TBranchProxy*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR),G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR))) {
     ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long long,0> > *G__Lderived;
     G__Lderived=(ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long long,0> >*)0x1000;
     {
       ROOT::TBranchProxy *G__Lpbase=(ROOT::TBranchProxy*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR),G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR))) {
     ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> > *G__Lderived;
     G__Lderived=(ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >*)0x1000;
     {
       ROOT::TBranchProxy *G__Lpbase=(ROOT::TBranchProxy*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR),G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR))) {
     ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> > *G__Lderived;
     G__Lderived=(ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >*)0x1000;
     {
       ROOT::TBranchProxy *G__Lpbase=(ROOT::TBranchProxy*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR),G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR))) {
     ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> > *G__Lderived;
     G__Lderived=(ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >*)0x1000;
     {
       ROOT::TBranchProxy *G__Lpbase=(ROOT::TBranchProxy*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR),G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR))) {
     ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> > *G__Lderived;
     G__Lderived=(ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >*)0x1000;
     {
       ROOT::TBranchProxy *G__Lpbase=(ROOT::TBranchProxy*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR),G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR))) {
     ROOT::TClaArrayProxy<ROOT::TArrayType<long long,0> > *G__Lderived;
     G__Lderived=(ROOT::TClaArrayProxy<ROOT::TArrayType<long long,0> >*)0x1000;
     {
       ROOT::TBranchProxy *G__Lpbase=(ROOT::TBranchProxy*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR),G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR))) {
     ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> > *G__Lderived;
     G__Lderived=(ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >*)0x1000;
     {
       ROOT::TBranchProxy *G__Lpbase=(ROOT::TBranchProxy*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR),G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR))) {
     ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> > *G__Lderived;
     G__Lderived=(ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >*)0x1000;
     {
       ROOT::TBranchProxy *G__Lpbase=(ROOT::TBranchProxy*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR),G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_TChainIndex))) {
     TChainIndex *G__Lderived;
     G__Lderived=(TChainIndex*)0x1000;
     {
       TVirtualIndex *G__Lpbase=(TVirtualIndex*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_TChainIndex),G__get_linked_tagnum(&G__G__TreePlayerLN_TVirtualIndex),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_TChainIndex),G__get_linked_tagnum(&G__G__TreePlayerLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_TChainIndex),G__get_linked_tagnum(&G__G__TreePlayerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_TFileDrawMap))) {
     TFileDrawMap *G__Lderived;
     G__Lderived=(TFileDrawMap*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_TFileDrawMap),G__get_linked_tagnum(&G__G__TreePlayerLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_TFileDrawMap),G__get_linked_tagnum(&G__G__TreePlayerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTFriendProxyDescriptor))) {
     ROOT::TFriendProxyDescriptor *G__Lderived;
     G__Lderived=(ROOT::TFriendProxyDescriptor*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTFriendProxyDescriptor),G__get_linked_tagnum(&G__G__TreePlayerLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTFriendProxyDescriptor),G__get_linked_tagnum(&G__G__TreePlayerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormulaManager))) {
     TTreeFormulaManager *G__Lderived;
     G__Lderived=(TTreeFormulaManager*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormulaManager),G__get_linked_tagnum(&G__G__TreePlayerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_TSelectorDraw))) {
     TSelectorDraw *G__Lderived;
     G__Lderived=(TSelectorDraw*)0x1000;
     {
       TSelector *G__Lpbase=(TSelector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_TSelectorDraw),G__get_linked_tagnum(&G__G__TreePlayerLN_TSelector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_TSelectorDraw),G__get_linked_tagnum(&G__G__TreePlayerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_TSelectorEntries))) {
     TSelectorEntries *G__Lderived;
     G__Lderived=(TSelectorEntries*)0x1000;
     {
       TSelector *G__Lpbase=(TSelector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_TSelectorEntries),G__get_linked_tagnum(&G__G__TreePlayerLN_TSelector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_TSelectorEntries),G__get_linked_tagnum(&G__G__TreePlayerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeDrawArgsParser))) {
     TTreeDrawArgsParser *G__Lderived;
     G__Lderived=(TTreeDrawArgsParser*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeDrawArgsParser),G__get_linked_tagnum(&G__G__TreePlayerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_TFormula))) {
     TFormula *G__Lderived;
     G__Lderived=(TFormula*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_TFormula),G__get_linked_tagnum(&G__G__TreePlayerLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_TFormula),G__get_linked_tagnum(&G__G__TreePlayerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeIndex))) {
     TTreeIndex *G__Lderived;
     G__Lderived=(TTreeIndex*)0x1000;
     {
       TVirtualIndex *G__Lpbase=(TVirtualIndex*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeIndex),G__get_linked_tagnum(&G__G__TreePlayerLN_TVirtualIndex),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeIndex),G__get_linked_tagnum(&G__G__TreePlayerLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeIndex),G__get_linked_tagnum(&G__G__TreePlayerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_TTreePerfStats))) {
     TTreePerfStats *G__Lderived;
     G__Lderived=(TTreePerfStats*)0x1000;
     {
       TVirtualPerfStats *G__Lpbase=(TVirtualPerfStats*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_TTreePerfStats),G__get_linked_tagnum(&G__G__TreePlayerLN_TVirtualPerfStats),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_TTreePerfStats),G__get_linked_tagnum(&G__G__TreePlayerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_TTreePlayer))) {
     TTreePlayer *G__Lderived;
     G__Lderived=(TTreePlayer*)0x1000;
     {
       TVirtualTreePlayer *G__Lpbase=(TVirtualTreePlayer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_TTreePlayer),G__get_linked_tagnum(&G__G__TreePlayerLN_TVirtualTreePlayer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_TTreePlayer),G__get_linked_tagnum(&G__G__TreePlayerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeTableInterface))) {
     TTreeTableInterface *G__Lderived;
     G__Lderived=(TTreeTableInterface*)0x1000;
     {
       TVirtualTableInterface *G__Lpbase=(TVirtualTableInterface*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeTableInterface),G__get_linked_tagnum(&G__G__TreePlayerLN_TVirtualTableInterface),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR))) {
     ROOT::TArrayProxy<ROOT::TArrayType<short,0> > *G__Lderived;
     G__Lderived=(ROOT::TArrayProxy<ROOT::TArrayType<short,0> >*)0x1000;
     {
       ROOT::TBranchProxy *G__Lpbase=(ROOT::TBranchProxy*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR),G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR))) {
     ROOT::TArrayProxy<ROOT::TArrayType<char,0> > *G__Lderived;
     G__Lderived=(ROOT::TArrayProxy<ROOT::TArrayType<char,0> >*)0x1000;
     {
       ROOT::TBranchProxy *G__Lpbase=(ROOT::TBranchProxy*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR),G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR))) {
     ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> > *G__Lderived;
     G__Lderived=(ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> >*)0x1000;
     {
       ROOT::TBranchProxy *G__Lpbase=(ROOT::TBranchProxy*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR),G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__TreePlayer() {

   /* Setting up typedef entry */
   G__search_typename2("Short_t",115,-1,0,-1);
   G__setnewtype(-1,"Signed Short integer 2 bytes (short)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("Long64_t",110,-1,0,-1);
   G__setnewtype(-1,"Portable signed long integer 8 bytes",0);
   G__search_typename2("VoidFuncPtr_t",89,-1,0,-1);
   G__setnewtype(-1,"pointer to void function",0);
   G__search_typename2("ShowMembersFunc_t",89,-1,0,-1);
   G__setnewtype(-1,"void (*ShowMembersFunc_t)(void *obj, TMemberInspector &R__insp, char *R__parent);",0);
   G__search_typename2("NewFunc_t",89,-1,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"void *(*NewFunc_t)(void *);",0);
   G__search_typename2("NewArrFunc_t",89,-1,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"void *(*NewArrFunc_t)(Long_t size, void *arena);",0);
   G__search_typename2("DelFunc_t",89,-1,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"void  (*DelFunc_t)(void *);",0);
   G__search_typename2("DelArrFunc_t",89,-1,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"void  (*DelArrFunc_t)(void *);",0);
   G__search_typename2("DesFunc_t",89,-1,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"void  (*DesFunc_t)(void *);",0);
   G__search_typename2("DirAutoAdd_t",89,-1,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"void  (*DirAutoAdd_t)(void *, TDirectory*);",0);
   G__search_typename2("vector<TSchemaHelper>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<TBranchProxy*>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_listlEROOTcLcLTBranchProxymUcOallocatorlEROOTcLcLTBranchProxymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<ROOT::TBranchProxy*>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_listlEROOTcLcLTBranchProxymUcOallocatorlEROOTcLcLTBranchProxymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<TFriendProxy*>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_listlEROOTcLcLTFriendProxymUcOallocatorlEROOTcLcLTFriendProxymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<ROOT::TFriendProxy*>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_listlEROOTcLcLTFriendProxymUcOallocatorlEROOTcLcLTFriendProxymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TImpProxy<Double_t>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEdoublegR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TDoubleProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEdoublegR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around the data members which are double",0);
   G__search_typename2("TDouble32Proxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEDouble32_tgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around the data members which are double32",0);
   G__search_typename2("TImpProxy<Float_t>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEfloatgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TFloatProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEfloatgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around the data members which are float",0);
   G__search_typename2("TFloat16Proxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEFloat16_tgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around the data members which are float16",0);
   G__search_typename2("TImpProxy<UInt_t>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPintgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TUIntProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPintgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around the data members which are unsigned int",0);
   G__search_typename2("TImpProxy<ULong_t>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPlonggR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TULongProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPlonggR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around the data members which are unsigned long",0);
   G__search_typename2("TImpProxy<ULong64_t>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPlongsPlonggR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TULong64Proxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPlongsPlonggR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around the data members which are unsigned long long",0);
   G__search_typename2("TImpProxy<UShort_t>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPshortgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TUShortProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPshortgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around the data members which are unsigned short",0);
   G__search_typename2("TImpProxy<UChar_t>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPchargR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TUCharProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPchargR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around the data members which are unsigned char",0);
   G__search_typename2("TImpProxy<Int_t>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEintgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TIntProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEintgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around the data members which are int",0);
   G__search_typename2("TImpProxy<Long_t>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylElonggR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TLongProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylElonggR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around the data members which are long",0);
   G__search_typename2("TImpProxy<Long64_t>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylElongsPlonggR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TLong64Proxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylElongsPlonggR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around the data members which are long long",0);
   G__search_typename2("TImpProxy<Short_t>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEshortgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TShortProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEshortgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around the data members which are short",0);
   G__search_typename2("TImpProxy<Char_t>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEchargR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TCharProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEchargR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around the data members which are char",0);
   G__search_typename2("TImpProxy<Bool_t>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEboolgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TBoolProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEboolgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around the data members which are bool",0);
   G__search_typename2("TArrayType<Double_t>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayTypelEdoublecO0gR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TArrayType<double>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayTypelEdoublecO0gR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TArrayProxy<TArrayType<Double_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("array_t",100,-1,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("type_t",100,-1,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TArrayDoubleProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around the data members which are array of double",0);
   G__search_typename2("TArrayType<Double32_t>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayTypelEDouble32_tcO0gR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TArrayProxy<TArrayType<Double32_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEDouble32_tcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TArrayDouble32Proxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEDouble32_tcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around the data members which are array of double32",0);
   G__search_typename2("TArrayType<Float_t>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayTypelEfloatcO0gR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TArrayType<float>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayTypelEfloatcO0gR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TArrayProxy<TArrayType<Float_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("array_t",102,-1,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("type_t",102,-1,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TArrayFloatProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around the data members which are array of float",0);
   G__search_typename2("TArrayType<Float16_t>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayTypelEFloat16_tcO0gR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TArrayProxy<TArrayType<Float16_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEFloat16_tcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TArrayFloat16Proxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEFloat16_tcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around the data members which are array of float16",0);
   G__search_typename2("TArrayType<UInt_t>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayTypelEunsignedsPintcO0gR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TArrayType<unsigned int>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayTypelEunsignedsPintcO0gR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TArrayProxy<TArrayType<UInt_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("array_t",104,-1,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("type_t",104,-1,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TArrayUIntProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around the data members which are array of unsigned int",0);
   G__search_typename2("TArrayType<ULong_t>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayTypelEunsignedsPlongcO0gR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TArrayType<unsigned long>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayTypelEunsignedsPlongcO0gR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TArrayProxy<TArrayType<ULong_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("array_t",107,-1,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("type_t",107,-1,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TArrayULongProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around the data members which are array of unsigned long",0);
   G__search_typename2("TArrayType<ULong64_t>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TArrayType<unsigned long long>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TArrayProxy<TArrayType<ULong64_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("array_t",109,-1,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("type_t",109,-1,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TArrayULong64Proxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around the data members which are array of unsigned long long",0);
   G__search_typename2("TArrayType<UShort_t>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayTypelEunsignedsPshortcO0gR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TArrayType<unsigned short>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayTypelEunsignedsPshortcO0gR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TArrayProxy<TArrayType<UShort_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("array_t",114,-1,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("type_t",114,-1,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TArrayUShortProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around the data members which are array of unsigned short",0);
   G__search_typename2("TArrayType<UChar_t>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayTypelEunsignedsPcharcO0gR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TArrayType<unsigned char>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayTypelEunsignedsPcharcO0gR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TArrayProxy<TArrayType<UChar_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("array_t",98,-1,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("type_t",98,-1,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TArrayUCharProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around the data members which are array of unsigned char",0);
   G__search_typename2("TArrayType<Int_t>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayTypelEintcO0gR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TArrayType<int>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayTypelEintcO0gR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TArrayProxy<TArrayType<Int_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("array_t",105,-1,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("type_t",105,-1,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TArrayIntProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around the data members which are array of int",0);
   G__search_typename2("TArrayType<Long_t>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayTypelElongcO0gR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TArrayType<long>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayTypelElongcO0gR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TArrayProxy<TArrayType<Long_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("array_t",108,-1,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("type_t",108,-1,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TArrayLongProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around the data members which are array of long",0);
   G__search_typename2("TArrayType<Long64_t>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayTypelElongsPlongcO0gR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TArrayType<long long>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayTypelElongsPlongcO0gR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TArrayProxy<TArrayType<Long64_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("array_t",110,-1,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("type_t",110,-1,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TArrayLong64Proxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around the data members which are array of long long",0);
   G__search_typename2("TArrayShortProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around the data members which are array of short",0);
   G__search_typename2("TArrayType<Bool_t>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayTypelEboolcO0gR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TArrayType<bool>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayTypelEboolcO0gR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TArrayProxy<TArrayType<Bool_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("array_t",103,-1,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("type_t",103,-1,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TArrayBoolProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around the data members which are array of bool",0);
   G__search_typename2("TClaImpProxy<Double_t>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEdoublegR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TClaDoubleProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEdoublegR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around the data members of object in TClonesArray which are double",0);
   G__search_typename2("TClaDouble32Proxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEDouble32_tgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around the data members of object in TClonesArray which are double32",0);
   G__search_typename2("TClaImpProxy<Float_t>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEfloatgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TClaFloatProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEfloatgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around the data members of object in TClonesArray which are float",0);
   G__search_typename2("TClaFloat16Proxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEFloat16_tgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around the data members of object in TClonesArray which are float16",0);
   G__search_typename2("TClaImpProxy<UInt_t>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPintgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TClaUIntProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPintgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around the data members of object in TClonesArray which are unsigned int",0);
   G__search_typename2("TClaImpProxy<ULong_t>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPlonggR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TClaULongProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPlonggR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around the data members of object in TClonesArray which are unsigned long",0);
   G__search_typename2("TClaImpProxy<ULong64_t>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPlongsPlonggR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TClaULong64Proxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPlongsPlonggR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around the data members of object in TClonesArray which are unsigned long long",0);
   G__search_typename2("TClaImpProxy<UShort_t>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPshortgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TClaUShortProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPshortgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around the data members of object in TClonesArray which are unsigned short",0);
   G__search_typename2("TClaImpProxy<UChar_t>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPchargR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TClaUCharProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPchargR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around the data members of object in TClonesArray which are unsigned char",0);
   G__search_typename2("TClaImpProxy<Int_t>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEintgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TClaIntProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEintgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around the data members of object in TClonesArray which are int",0);
   G__search_typename2("TClaImpProxy<Long_t>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylElonggR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TClaLongProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylElonggR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around the data members of object in TClonesArray which are long",0);
   G__search_typename2("TClaImpProxy<Long64_t>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylElongsPlonggR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TClaLong64Proxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylElongsPlonggR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around the data members of object in TClonesArray which are long long",0);
   G__search_typename2("TClaImpProxy<Short_t>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEshortgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TClaShortProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEshortgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around the data members of object in TClonesArray which are short",0);
   G__search_typename2("TClaImpProxy<Char_t>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEchargR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TClaCharProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEchargR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around the data members of object in TClonesArray which are char",0);
   G__search_typename2("TClaImpProxy<Bool_t>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEboolgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TClaBoolProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEboolgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around the data members of object in TClonesArray which are bool",0);
   G__search_typename2("TClaArrayProxy<TArrayType<Double_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("array_t",100,-1,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("type_t",100,-1,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TClaArrayDoubleProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around the data members of object in TClonesArray which are array of double",0);
   G__search_typename2("TClaArrayProxy<TArrayType<Double32_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEDouble32_tcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TClaArrayDouble32Proxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEDouble32_tcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around the data members of object in TClonesArray which are array of double32",0);
   G__search_typename2("TClaArrayProxy<TArrayType<Float_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("array_t",102,-1,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("type_t",102,-1,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TClaArrayFloatProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around the data members of object in TClonesArray which are array of float",0);
   G__search_typename2("TClaArrayProxy<TArrayType<Float16_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEFloat16_tcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TClaArrayFloat16Proxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEFloat16_tcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around the data members of object in TClonesArray which are array of float16",0);
   G__search_typename2("TClaArrayProxy<TArrayType<UInt_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("array_t",104,-1,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("type_t",104,-1,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TClaArrayUIntProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around the data members of object in TClonesArray which are array of unsigned int",0);
   G__search_typename2("TClaArrayProxy<TArrayType<ULong_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("array_t",107,-1,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("type_t",107,-1,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TClaArrayULongProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around the data members of object in TClonesArray which are array of unsigned long",0);
   G__search_typename2("TClaArrayProxy<TArrayType<ULong64_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("array_t",109,-1,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("type_t",109,-1,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TClaArrayULong64Proxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around the data members of object in TClonesArray which are array of unsigned long long",0);
   G__search_typename2("TClaArrayProxy<TArrayType<UShort_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("array_t",114,-1,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("type_t",114,-1,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TClaArrayUShortProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around the data members of object in TClonesArray which are array of unsigned short",0);
   G__search_typename2("TClaArrayProxy<TArrayType<UChar_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("array_t",98,-1,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("type_t",98,-1,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TClaArrayUCharProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around the data members of object in TClonesArray which are array of nsigned char",0);
   G__search_typename2("TClaArrayProxy<TArrayType<Int_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("array_t",105,-1,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("type_t",105,-1,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TClaArrayIntProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around the data members of object in TClonesArray which are array of int",0);
   G__search_typename2("TClaArrayProxy<TArrayType<Long_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("array_t",108,-1,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("type_t",108,-1,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TClaArrayLongProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around the data members of object in TClonesArray which are array of long",0);
   G__search_typename2("TClaArrayProxy<TArrayType<Long64_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("array_t",110,-1,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("type_t",110,-1,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TClaArrayLong64Proxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around the data members of object in TClonesArray which are array of long long",0);
   G__search_typename2("TClaArrayShortProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around the data members of object in TClonesArray which are array of short",0);
   G__search_typename2("TArrayType<Char_t>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayTypelEcharcO0gR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TArrayType<char>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayTypelEcharcO0gR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TClaArrayProxy<TArrayType<Char_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("array_t",99,-1,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("type_t",99,-1,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TClaArrayCharProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around the data members of object in TClonesArray which are array of char",0);
   G__search_typename2("TClaArrayProxy<TArrayType<Bool_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("array_t",103,-1,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("type_t",103,-1,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TClaArrayBoolProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around the data members of object in TClonesArray which are array of bool",0);
   G__search_typename2("TStlImpProxy<Double_t>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEdoublegR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TStlDoubleProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEdoublegR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around an stl container of double",0);
   G__search_typename2("TStlDouble32Proxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEDouble32_tgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around an stl container of double32",0);
   G__search_typename2("TStlImpProxy<Float_t>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEfloatgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TStlFloatProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEfloatgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around an stl container of float",0);
   G__search_typename2("TStlFloat16Proxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEFloat16_tgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around an stl container of float16_t",0);
   G__search_typename2("TStlImpProxy<UInt_t>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEunsignedsPintgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TStlUIntProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEunsignedsPintgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around an stl container of unsigned int",0);
   G__search_typename2("TStlImpProxy<ULong_t>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEunsignedsPlonggR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TStlULongProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEunsignedsPlonggR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around an stl container of unsigned long",0);
   G__search_typename2("TStlImpProxy<ULong64_t>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEunsignedsPlongsPlonggR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TStlULong64Proxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEunsignedsPlongsPlonggR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around an stl container of unsigned long long",0);
   G__search_typename2("TStlImpProxy<UShort_t>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEunsignedsPshortgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TStlUShortProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEunsignedsPshortgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around an stl container of unsigned short",0);
   G__search_typename2("TStlImpProxy<UChar_t>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEunsignedsPchargR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TStlUCharProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEunsignedsPchargR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around an stl container of unsigned char",0);
   G__search_typename2("TStlImpProxy<Int_t>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEintgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TStlIntProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEintgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around an stl container of int",0);
   G__search_typename2("TStlImpProxy<Long_t>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTStlImpProxylElonggR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TStlLongProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTStlImpProxylElonggR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around an stl container of long",0);
   G__search_typename2("TStlImpProxy<Long64_t>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTStlImpProxylElongsPlonggR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TStlLong64Proxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTStlImpProxylElongsPlonggR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around an stl container of long long",0);
   G__search_typename2("TStlImpProxy<Short_t>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEshortgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TStlShortProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEshortgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around an stl container of short",0);
   G__search_typename2("TStlImpProxy<Char_t>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEchargR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TStlCharProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEchargR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around an stl container of char",0);
   G__search_typename2("TStlImpProxy<Bool_t>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEboolgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TStlBoolProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEboolgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around an stl container of bool",0);
   G__search_typename2("TStlArrayProxy<TArrayType<Double_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TStlArrayDoubleProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around an stl container of double",0);
   G__search_typename2("TStlArrayProxy<TArrayType<Double32_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEDouble32_tcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TStlArrayDouble32Proxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEDouble32_tcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around an stl container of double32",0);
   G__search_typename2("TStlArrayProxy<TArrayType<Float_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TStlArrayFloatProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around an stl container of float",0);
   G__search_typename2("TStlArrayProxy<TArrayType<Float16_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEFloat16_tcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TStlArrayFloat16Proxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEFloat16_tcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around an stl container of float16_t",0);
   G__search_typename2("TStlArrayProxy<TArrayType<UInt_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TStlArrayUIntProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around an stl container of unsigned int",0);
   G__search_typename2("TStlArrayProxy<TArrayType<ULong_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TStlArrayULongProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around an stl container of usigned long",0);
   G__search_typename2("TStlArrayProxy<TArrayType<ULong64_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TStlArrayULong64Proxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around an stl contained of unsigned long long",0);
   G__search_typename2("TStlArrayProxy<TArrayType<UShort_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TStlArrayUShortProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around an stl container of unisgned short",0);
   G__search_typename2("TStlArrayProxy<TArrayType<UChar_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TStlArrayUCharProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around an stl container of unsingned char",0);
   G__search_typename2("TStlArrayProxy<TArrayType<Int_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TStlArrayIntProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around an stl container of int",0);
   G__search_typename2("TStlArrayProxy<TArrayType<Long_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TStlArrayLongProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around an stl container of long",0);
   G__search_typename2("TStlArrayProxy<TArrayType<Long64_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TStlArrayLong64Proxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around an stl container of long long",0);
   G__search_typename2("TStlArrayShortProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around an stl container of UShort_t",0);
   G__search_typename2("TStlArrayProxy<TArrayType<Char_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TStlArrayCharProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around an stl container of char",0);
   G__search_typename2("TStlArrayProxy<TArrayType<Bool_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TStlArrayBoolProxy",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,"Concrete Implementation of the branch proxy around an stl container of bool",0);
   G__search_typename2("vector<TChainIndexEntry>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_vectorlETChainIndexcLcLTChainIndexEntrycOallocatorlETChainIndexcLcLTChainIndexEntrygRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_reverse_iteratorlEvectorlETChainIndexcLcLTChainIndexEntrycOallocatorlETChainIndexcLcLTChainIndexEntrygRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_vectorlETChainIndexcLcLTChainIndexEntrycOallocatorlETChainIndexcLcLTChainIndexEntrygRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_reverse_iteratorlEvectorlETChainIndexcLcLTChainIndexEntrycOallocatorlETChainIndexcLcLTChainIndexEntrygRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_vectorlETChainIndexcLcLTChainIndexEntrycOallocatorlETChainIndexcLcLTChainIndexEntrygRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TChainIndex::TChainIndexEntry>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_vectorlETChainIndexcLcLTChainIndexEntrycOallocatorlETChainIndexcLcLTChainIndexEntrygRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<TVirtualIndex*,Int_t>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_pairlETVirtualIndexmUcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Int_t>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<Int_t,Int_t>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_pairlEintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<Int_t,Int_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_reverse_iteratorlEvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_reverse_iteratorlEvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<int,int> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<unsigned int>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::string>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::TArrayProxy<ROOT::TArrayType<double> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::TArrayProxy<ROOT::TArrayType<float> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::TArrayProxy<ROOT::TArrayType<UInt_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::TArrayProxy<ROOT::TArrayType<ULong_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::TArrayProxy<ROOT::TArrayType<UShort_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::TArrayProxy<ROOT::TArrayType<UChar_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::TArrayProxy<ROOT::TArrayType<Int_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::TArrayProxy<ROOT::TArrayType<Long_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::TArrayType<Short_t>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayTypelEshortcO0gR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::TArrayType<short>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayTypelEshortcO0gR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::TArrayProxy<ROOT::TArrayType<Short_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("array_t",115,-1,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("type_t",115,-1,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::TArrayProxy<ROOT::TArrayType<Char_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("array_t",99,-1,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("type_t",99,-1,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::TArrayProxy<ROOT::TArrayType<Bool_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::TClaArrayProxy<ROOT::TArrayType<double> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::TClaArrayProxy<ROOT::TArrayType<float> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::TClaArrayProxy<ROOT::TArrayType<UInt_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::TClaArrayProxy<ROOT::TArrayType<ULong_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::TClaArrayProxy<ROOT::TArrayType<UShort_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::TClaArrayProxy<ROOT::TArrayType<UChar_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::TClaArrayProxy<ROOT::TArrayType<Int_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::TClaArrayProxy<ROOT::TArrayType<Long_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::TArrayType<Short_t>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayTypelEshortcO0gR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::TArrayType<short>",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayTypelEshortcO0gR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::TClaArrayProxy<ROOT::TArrayType<Short_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("array_t",115,-1,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("type_t",115,-1,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::TClaArrayProxy<ROOT::TArrayType<Char_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::TClaArrayProxy<ROOT::TArrayType<Bool_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::TArrayProxy<ROOT::TArrayType<Long64_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::TArrayProxy<ROOT::TArrayType<ULong64_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::TClaArrayProxy<ROOT::TArrayType<ULong64_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::TClaArrayProxy<ROOT::TArrayType<Long64_t> >",117,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR),0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* ROOT */
static void G__setup_memvarROOT(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   {
   }
   G__tag_memvar_reset();
}


   /* ROOT::TBranchProxyDescriptor */
static void G__setup_memvarROOTcLcLTBranchProxyDescriptor(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxyDescriptor));
   { ROOT::TBranchProxyDescriptor *p; p=(ROOT::TBranchProxyDescriptor*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TString),-1,-1,4,"fDataName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TString),-1,-1,4,"fBranchName=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsSplit=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fBranchIsSkipped=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsLeafList=",0,"true if the branch was constructed from a leaf list.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::TBranchProxyClassDescriptor */
static void G__setup_memvarROOTcLcLTBranchProxyClassDescriptor(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxyClassDescriptor));
   { ROOT::TBranchProxyClassDescriptor *p; p=(ROOT::TBranchProxyClassDescriptor*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxyClassDescriptorcLcLELocation),-1,-2,1,"kOut=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxyClassDescriptorcLcLELocation),-1,-2,1,"kClones=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxyClassDescriptorcLcLELocation),-1,-2,1,"kSTL=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxyClassDescriptorcLcLELocation),-1,-2,1,"kInsideClones=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxyClassDescriptorcLcLELocation),-1,-2,1,"kInsideSTL=4",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TList),-1,-1,4,"fListOfSubProxies=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TList),-1,-1,4,"fListOfBaseProxies=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxyClassDescriptorcLcLELocation),-1,-1,4,"fIsClones=",0,"1 for the general case, 2 when this a split clases inside a TClonesArray, 3 when this is a split classes inside an STL container.");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TString),-1,-1,4,"fContainerName=",0,"Name of the container if any");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsLeafList=",0,"true if the branch was constructed from a leaf list.");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fSplitLevel=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TString),-1,-1,4,"fRawSymbol=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TString),-1,-1,4,"fBranchName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TString),-1,-1,4,"fSubBranchPrefix=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TVirtualStreamerInfo),-1,-1,4,"fInfo=",0,"TVirtualStreamerInfo describing this class");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fMaxDatamemberType=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TTreeFormula */
static void G__setup_memvarTTreeFormula(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormula));
   { TTreeFormula *p; p=(TTreeFormula*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormulacLcLdA),-1,-2,1,"kIsCharacter=4096",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormulacLcLdA),-1,-2,1,"kMissingLeaf=32768",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormulacLcLdA),-1,-2,1,"kIsInteger=131072",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormulacLcLdA),-1,-2,1,"kNeedEntries=262144",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormulacLcLdA),-1,-2,1,"kDirect=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormulacLcLdA),-1,-2,1,"kDataMember=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormulacLcLdA),-1,-2,1,"kMethod=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormulacLcLdA),-1,-2,1,"kIndexOfEntry=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormulacLcLdA),-1,-2,1,"kEntries=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormulacLcLdA),-1,-2,1,"kLength=5",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormulacLcLdA),-1,-2,1,"kIteration=6",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormulacLcLdA),-1,-2,1,"kLengthFunc=7",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormulacLcLdA),-1,-2,1,"kSum=8",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormulacLcLdA),-1,-2,1,"kEntryList=9",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormulacLcLdA),-1,-2,1,"kTreeMember=10",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormulacLcLdA),-1,-2,1,"kIndexOfLocalEntry=11",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormulacLcLdA),-1,-2,1,"kMin=12",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormulacLcLdA),-1,-2,1,"kMax=13",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormulacLcLdA),-1,-2,1,"kAlias=200",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormulacLcLdA),-1,-2,1,"kAliasString=201",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormulacLcLdA),-1,-2,1,"kAlternate=202",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormulacLcLdA),-1,-2,1,"kAlternateString=203",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormulacLcLdA),-1,-2,1,"kMinIf=204",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormulacLcLdA),-1,-2,1,"kMaxIf=205",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TTree),-1,-1,2,"fTree=",0,"! pointer to Tree");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"fCodes[500]=",0,"List of leaf numbers referenced in formula");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNdata[500]=",0,"! This caches the physical number of element in the leaf or datamember.");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNcodes=",0,"Number of leaves referenced in formula");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fHasCast=",0,"Record whether the formula contain a cast operation or not");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMultiplicity=",0,"Indicator of the variability of the formula");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNindex=",0,"Size of fIndex");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fLookupType=",0,"[fNindex] array indicating how each leaf should be looked-up");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TObjArray),-1,-1,2,"fLeaves=",0,"!  List of leaf used in this formula.");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TObjArray),-1,-1,2,"fDataMembers=",0,"!  List of leaf data members");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TObjArray),-1,-1,2,"fMethods=",0,"!  List of leaf method calls");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TObjArray),-1,-1,2,"fExternalCuts=",0,"!  List of TCutG and TEntryList used in the formula");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TObjArray),-1,-1,2,"fAliases=",0,"!  List of TTreeFormula for each alias used.");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TObjArray),-1,-1,2,"fLeafNames=",0,"List of TNamed describing leaves");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TObjArray),-1,-1,2,"fBranches=",0,"!  List of branches to read.  Similar to fLeaces but duplicates are zeroed out.");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fQuickLoad=",0,"!  If true, branch GetEntry is only called when the entry number changes.");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fNeedLoading=",0,"!  If true, the current entry has not been loaded yet.");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNdimensions[500]=",0,"Number of array dimensions in each leaf");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fFixedSizes[500][5]=",0,"Physical sizes of lower dimensions for each leaf");
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("UChar_t"),-1,2,"fHasMultipleVarDim[500]=",0,"True if the corresponding variable is an array with more than one variable dimension.");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fCumulSizes[500][5]=",0,"Accumulated sizes of lower dimensions for each leaf after variable dimensions has been calculated");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fIndexes[500][5]=",0,"Index of array selected by user for each leaf");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormula),-1,-1,2,"fVarIndexes[500][5]=",0,"Pointer to a variable index.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TAxis),-1,-1,2,"fAxis=",0,"! pointer to histogram axis if this is a string");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fDidBooleanOptimization=",0,"! True if we executed one boolean optimization since the last time instance number 0 was evaluated");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormulaManager),-1,-1,2,"fManager=",0,"! The dimension coordinator.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TList),-1,-1,2,"fDimensionSetup=",0,"! list of dimension setups, for delayed creation of the dimension information.");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_vectorlEstringcOallocatorlEstringgRsPgR),G__defined_typename("vector<std::string>"),-1,2,"fAliasesUsed=",0,"! List of aliases used during the parsing of the expression.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::TBranchProxy */
static void G__setup_memvarROOTcLcLTBranchProxy(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy));
   { ROOT::TBranchProxy *p; p=(ROOT::TBranchProxy*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxyDirector),-1,-1,2,"fDirector=",0,"contain pointer to TTree and entry to be read");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fInitialized=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,1,G__get_linked_tagnum(&G__G__TreePlayerLN_TString),-1,-1,2,"fBranchName=",0,"name of the branch to read");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy),-1,-1,2,"fParent=",0,"Proxy to a parent object");
   G__memvar_setup((void*)0,117,0,1,G__get_linked_tagnum(&G__G__TreePlayerLN_TString),-1,-1,2,"fDataMember=",0,"name of the (eventual) data member being proxied");
   G__memvar_setup((void*)0,103,0,1,-1,G__defined_typename("Bool_t"),-1,2,"fIsMember=",0,"true if we proxy an unsplit data member");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsClone=",0,"true if we proxy the inside of a TClonesArray");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsaPointer=",0,"true if we proxy a data member of pointer type");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TString),-1,-1,2,"fClassName=",0,"class name of the object pointed to by the branch");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TClass),-1,-1,2,"fClass=",0,"class name of the object pointed to by the branch");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TStreamerElement),-1,-1,2,"fElement=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMemberOffset=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fOffset=",0,"Offset inside the object");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TBranch),-1,-1,2,"fBranch=",0,"branch to read");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TBranch),-1,-1,2,"fBranchCount=",0,"eventual auxiliary branch (for example holding the size)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TTree),-1,-1,2,"fLastTree=",0,"TTree containing the last entry read");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fRead=",0,"Last entry read");
   G__memvar_setup((void*)0,89,0,0,-1,-1,-1,2,"fWhere=",0,"memory location of the data");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TVirtualCollectionProxy),-1,-1,2,"fCollection=",0,"Handle to the collection containing the data chunk.");
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::TFriendProxy */
static void G__setup_memvarROOTcLcLTFriendProxy(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTFriendProxy));
   { ROOT::TFriendProxy *p; p=(ROOT::TFriendProxy*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxyDirector),-1,-1,2,"fDirector=",0,"contain pointer to TTree and entry to be read");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fIndex=",0,"Index of this tree in the list of friends");
   }
   G__tag_memvar_reset();
}


   /* ROOT::TBranchProxyDirector */
static void G__setup_memvarROOTcLcLTBranchProxyDirector(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxyDirector));
   { ROOT::TBranchProxyDirector *p; p=(ROOT::TBranchProxyDirector*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TTree),-1,-1,4,"fTree=",0,"TTree we are currently looking at.");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fEntry=",0,"Entry currently being read.");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_listlEROOTcLcLTBranchProxymUcOallocatorlEROOTcLcLTBranchProxymUgRsPgR),G__defined_typename("list<TBranchProxy*>"),-1,4,"fDirected=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_listlEROOTcLcLTFriendProxymUcOallocatorlEROOTcLcLTFriendProxymUgRsPgR),G__defined_typename("list<TFriendProxy*>"),-1,4,"fFriends=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::TImpProxy<double> */
static void G__setup_memvarROOTcLcLTImpProxylEdoublegR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEdoublegR));
   { ROOT::TImpProxy<double> *p; p=(ROOT::TImpProxy<double>*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ROOT::TImpProxy<float> */
static void G__setup_memvarROOTcLcLTImpProxylEfloatgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEfloatgR));
   { ROOT::TImpProxy<float> *p; p=(ROOT::TImpProxy<float>*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ROOT::TImpProxy<unsigned int> */
static void G__setup_memvarROOTcLcLTImpProxylEunsignedsPintgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPintgR));
   { ROOT::TImpProxy<unsigned int> *p; p=(ROOT::TImpProxy<unsigned int>*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ROOT::TImpProxy<unsigned long> */
static void G__setup_memvarROOTcLcLTImpProxylEunsignedsPlonggR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPlonggR));
   { ROOT::TImpProxy<unsigned long> *p; p=(ROOT::TImpProxy<unsigned long>*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ROOT::TImpProxy<unsigned long long> */
static void G__setup_memvarROOTcLcLTImpProxylEunsignedsPlongsPlonggR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPlongsPlonggR));
   { ROOT::TImpProxy<unsigned long long> *p; p=(ROOT::TImpProxy<unsigned long long>*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ROOT::TImpProxy<unsigned short> */
static void G__setup_memvarROOTcLcLTImpProxylEunsignedsPshortgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPshortgR));
   { ROOT::TImpProxy<unsigned short> *p; p=(ROOT::TImpProxy<unsigned short>*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ROOT::TImpProxy<unsigned char> */
static void G__setup_memvarROOTcLcLTImpProxylEunsignedsPchargR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPchargR));
   { ROOT::TImpProxy<unsigned char> *p; p=(ROOT::TImpProxy<unsigned char>*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ROOT::TImpProxy<int> */
static void G__setup_memvarROOTcLcLTImpProxylEintgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEintgR));
   { ROOT::TImpProxy<int> *p; p=(ROOT::TImpProxy<int>*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ROOT::TImpProxy<long> */
static void G__setup_memvarROOTcLcLTImpProxylElonggR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylElonggR));
   { ROOT::TImpProxy<long> *p; p=(ROOT::TImpProxy<long>*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ROOT::TImpProxy<long long> */
static void G__setup_memvarROOTcLcLTImpProxylElongsPlonggR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylElongsPlonggR));
   { ROOT::TImpProxy<long long> *p; p=(ROOT::TImpProxy<long long>*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ROOT::TImpProxy<short> */
static void G__setup_memvarROOTcLcLTImpProxylEshortgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEshortgR));
   { ROOT::TImpProxy<short> *p; p=(ROOT::TImpProxy<short>*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ROOT::TImpProxy<char> */
static void G__setup_memvarROOTcLcLTImpProxylEchargR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEchargR));
   { ROOT::TImpProxy<char> *p; p=(ROOT::TImpProxy<char>*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ROOT::TImpProxy<bool> */
static void G__setup_memvarROOTcLcLTImpProxylEboolgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEboolgR));
   { ROOT::TImpProxy<bool> *p; p=(ROOT::TImpProxy<bool>*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ROOT::TArrayProxy<ROOT::TArrayType<double,0> > */
static void G__setup_memvarROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR));
   { ROOT::TArrayProxy<ROOT::TArrayType<double,0> > *p; p=(ROOT::TArrayProxy<ROOT::TArrayType<double,0> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ROOT::TArrayProxy<ROOT::TArrayType<float,0> > */
static void G__setup_memvarROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR));
   { ROOT::TArrayProxy<ROOT::TArrayType<float,0> > *p; p=(ROOT::TArrayProxy<ROOT::TArrayType<float,0> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> > */
static void G__setup_memvarROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR));
   { ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> > *p; p=(ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> > */
static void G__setup_memvarROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR));
   { ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> > *p; p=(ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ROOT::TArrayProxy<ROOT::TArrayType<unsigned long long,0> > */
static void G__setup_memvarROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR));
   { ROOT::TArrayProxy<ROOT::TArrayType<unsigned long long,0> > *p; p=(ROOT::TArrayProxy<ROOT::TArrayType<unsigned long long,0> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> > */
static void G__setup_memvarROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR));
   { ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> > *p; p=(ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> > */
static void G__setup_memvarROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR));
   { ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> > *p; p=(ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ROOT::TArrayProxy<ROOT::TArrayType<int,0> > */
static void G__setup_memvarROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR));
   { ROOT::TArrayProxy<ROOT::TArrayType<int,0> > *p; p=(ROOT::TArrayProxy<ROOT::TArrayType<int,0> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ROOT::TArrayProxy<ROOT::TArrayType<long,0> > */
static void G__setup_memvarROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR));
   { ROOT::TArrayProxy<ROOT::TArrayType<long,0> > *p; p=(ROOT::TArrayProxy<ROOT::TArrayType<long,0> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ROOT::TArrayProxy<ROOT::TArrayType<long long,0> > */
static void G__setup_memvarROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR));
   { ROOT::TArrayProxy<ROOT::TArrayType<long long,0> > *p; p=(ROOT::TArrayProxy<ROOT::TArrayType<long long,0> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ROOT::TArrayProxy<ROOT::TArrayType<bool,0> > */
static void G__setup_memvarROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR));
   { ROOT::TArrayProxy<ROOT::TArrayType<bool,0> > *p; p=(ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ROOT::TClaImpProxy<double> */
static void G__setup_memvarROOTcLcLTClaImpProxylEdoublegR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEdoublegR));
   { ROOT::TClaImpProxy<double> *p; p=(ROOT::TClaImpProxy<double>*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ROOT::TClaImpProxy<float> */
static void G__setup_memvarROOTcLcLTClaImpProxylEfloatgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEfloatgR));
   { ROOT::TClaImpProxy<float> *p; p=(ROOT::TClaImpProxy<float>*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ROOT::TClaImpProxy<unsigned int> */
static void G__setup_memvarROOTcLcLTClaImpProxylEunsignedsPintgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPintgR));
   { ROOT::TClaImpProxy<unsigned int> *p; p=(ROOT::TClaImpProxy<unsigned int>*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ROOT::TClaImpProxy<unsigned long> */
static void G__setup_memvarROOTcLcLTClaImpProxylEunsignedsPlonggR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPlonggR));
   { ROOT::TClaImpProxy<unsigned long> *p; p=(ROOT::TClaImpProxy<unsigned long>*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ROOT::TClaImpProxy<unsigned long long> */
static void G__setup_memvarROOTcLcLTClaImpProxylEunsignedsPlongsPlonggR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPlongsPlonggR));
   { ROOT::TClaImpProxy<unsigned long long> *p; p=(ROOT::TClaImpProxy<unsigned long long>*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ROOT::TClaImpProxy<unsigned short> */
static void G__setup_memvarROOTcLcLTClaImpProxylEunsignedsPshortgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPshortgR));
   { ROOT::TClaImpProxy<unsigned short> *p; p=(ROOT::TClaImpProxy<unsigned short>*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ROOT::TClaImpProxy<unsigned char> */
static void G__setup_memvarROOTcLcLTClaImpProxylEunsignedsPchargR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPchargR));
   { ROOT::TClaImpProxy<unsigned char> *p; p=(ROOT::TClaImpProxy<unsigned char>*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ROOT::TClaImpProxy<int> */
static void G__setup_memvarROOTcLcLTClaImpProxylEintgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEintgR));
   { ROOT::TClaImpProxy<int> *p; p=(ROOT::TClaImpProxy<int>*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ROOT::TClaImpProxy<long> */
static void G__setup_memvarROOTcLcLTClaImpProxylElonggR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylElonggR));
   { ROOT::TClaImpProxy<long> *p; p=(ROOT::TClaImpProxy<long>*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ROOT::TClaImpProxy<long long> */
static void G__setup_memvarROOTcLcLTClaImpProxylElongsPlonggR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylElongsPlonggR));
   { ROOT::TClaImpProxy<long long> *p; p=(ROOT::TClaImpProxy<long long>*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ROOT::TClaImpProxy<short> */
static void G__setup_memvarROOTcLcLTClaImpProxylEshortgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEshortgR));
   { ROOT::TClaImpProxy<short> *p; p=(ROOT::TClaImpProxy<short>*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ROOT::TClaImpProxy<char> */
static void G__setup_memvarROOTcLcLTClaImpProxylEchargR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEchargR));
   { ROOT::TClaImpProxy<char> *p; p=(ROOT::TClaImpProxy<char>*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ROOT::TClaImpProxy<bool> */
static void G__setup_memvarROOTcLcLTClaImpProxylEboolgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEboolgR));
   { ROOT::TClaImpProxy<bool> *p; p=(ROOT::TClaImpProxy<bool>*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> > */
static void G__setup_memvarROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR));
   { ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> > *p; p=(ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> > */
static void G__setup_memvarROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR));
   { ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> > *p; p=(ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> > */
static void G__setup_memvarROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR));
   { ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> > *p; p=(ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> > */
static void G__setup_memvarROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR));
   { ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> > *p; p=(ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long long,0> > */
static void G__setup_memvarROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR));
   { ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long long,0> > *p; p=(ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long long,0> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> > */
static void G__setup_memvarROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR));
   { ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> > *p; p=(ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> > */
static void G__setup_memvarROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR));
   { ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> > *p; p=(ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> > */
static void G__setup_memvarROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR));
   { ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> > *p; p=(ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> > */
static void G__setup_memvarROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR));
   { ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> > *p; p=(ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ROOT::TClaArrayProxy<ROOT::TArrayType<long long,0> > */
static void G__setup_memvarROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR));
   { ROOT::TClaArrayProxy<ROOT::TArrayType<long long,0> > *p; p=(ROOT::TClaArrayProxy<ROOT::TArrayType<long long,0> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> > */
static void G__setup_memvarROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR));
   { ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> > *p; p=(ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> > */
static void G__setup_memvarROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR));
   { ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> > *p; p=(ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* TChainIndex */
static void G__setup_memvarTChainIndex(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_TChainIndex));
   { TChainIndex *p; p=(TChainIndex*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TString),-1,-1,2,"fMajorName=",0,"Index major name");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TString),-1,-1,2,"fMinorName=",0,"Index minor name");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormula),-1,-1,2,"fMajorFormulaParent=",0,"! Pointer to major TreeFormula in Parent tree (if any)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormula),-1,-1,2,"fMinorFormulaParent=",0,"! Pointer to minor TreeFormula in Parent tree (if any)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_vectorlETChainIndexcLcLTChainIndexEntrycOallocatorlETChainIndexcLcLTChainIndexEntrygRsPgR),G__defined_typename("vector<TChainIndexEntry>"),-1,2,"fEntries=",0,"descriptions of indices of trees in the chain.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TChainIndex::TChainIndexEntry */
static void G__setup_memvarTChainIndexcLcLTChainIndexEntry(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_TChainIndexcLcLTChainIndexEntry));
   { TChainIndex::TChainIndexEntry *p; p=(TChainIndex::TChainIndexEntry*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fMinIndexValue)-(long)(p)),110,0,0,-1,G__defined_typename("Long64_t"),-1,1,"fMinIndexValue=",0,"the minimum value of the index");
   G__memvar_setup((void*)((long)(&p->fMaxIndexValue)-(long)(p)),110,0,0,-1,G__defined_typename("Long64_t"),-1,1,"fMaxIndexValue=",0,"the maximum value of the index");
   G__memvar_setup((void*)((long)(&p->fTreeIndex)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TVirtualIndex),-1,-1,1,"fTreeIndex=",0,"the tree index in case it was created in the constructor,");
   }
   G__tag_memvar_reset();
}


   /* TFileDrawMap */
static void G__setup_memvarTFileDrawMap(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_TFileDrawMap));
   { TFileDrawMap *p; p=(TFileDrawMap*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TFile),-1,-1,2,"fFile=",0,"pointer to the file");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TH1),-1,-1,2,"fFrame=",0,"histogram used to draw the map frame");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TString),-1,-1,2,"fKeys=",0,"list of keys");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TString),-1,-1,2,"fOption=",0,"drawing options");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fXsize=",0,"size in bytes of X axis");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fYsize=",0,"size in K/Mbytes of Y axis");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::TFriendProxyDescriptor */
static void G__setup_memvarROOTcLcLTFriendProxyDescriptor(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTFriendProxyDescriptor));
   { ROOT::TFriendProxyDescriptor *p; p=(ROOT::TFriendProxyDescriptor*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fDuplicate=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fIndex=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TList),-1,-1,4,"fListOfTopProxies=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TTreeFormulaManager */
static void G__setup_memvarTTreeFormulaManager(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormulaManager));
   { TTreeFormulaManager *p; p=(TTreeFormulaManager*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TObjArray),-1,-1,4,"fFormulas=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMultiplicity=",0,"Indicator of the variability of the formula");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fMultiVarDim=",0,"True if one of the variable has 2 variable size dimensions.");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNdata=",0,"! Last value calculated by GetNdata");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCumulUsedSizes[6]=",0,"Accumulated size of lower dimensions as seen for this entry");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TArrayI),-1,-1,4,"fCumulUsedVarDims=",0,"fCumulUsedSizes(1) for multi variable dimensions case");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fUsedSizes[6]=",0,"Actual size of the dimensions as seen for this entry.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TArrayI),-1,-1,4,"fVarDims[6]=",0,"List of variable sizes dimensions.");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fVirtUsedSizes[6]=",0,"Virtual size of lower dimensions as seen for this formula");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fNeedSync=",0,"Indicate whether a new formula has been added since the last synchronization");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSelectorDraw */
static void G__setup_memvarTSelectorDraw(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_TSelectorDraw));
   { TSelectorDraw *p; p=(TSelectorDraw*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreePlayerLN_TSelectorDrawcLcLdA),-1,-2,1,"kWarn=4096",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TTree),-1,-1,2,"fTree=",0,"Pointer to current Tree");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormula),-1,-1,2,"fVar=",0,"![fDimension] Array of pointers to variables formula");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormula),-1,-1,2,"fSelect=",0,"Pointer to selection formula");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormulaManager),-1,-1,2,"fManager=",0,"Pointer to the formula manager");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TObject),-1,-1,2,"fTreeElist=",0,"pointer to Tree Event list");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TH1),-1,-1,2,"fOldHistogram=",0,"! Pointer to previously used histogram");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fAction=",0,"! Action type");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fDraw=",0,"! Last entry loop number when object was drawn");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNfill=",0,"! Total number of histogram fills");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMultiplicity=",0,"Indicator of the variability of the size of entries");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fDimension=",0,"Dimension of the current expression");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fSelectedRows=",0,"Number of selected entries");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fOldEstimate=",0,"value of Tree fEstimate when selector is called");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fForceRead=",0,"Force Read flag");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNbins=",0,"![fDimension] Number of bins per dimension");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fVmin=",0,"![fDimension] Minima of varexp columns");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fVmax=",0,"![fDimension] Maxima of varexp columns");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fWeight=",0,"Tree weight (see TTree::SetWeight)");
   G__memvar_setup((void*)0,68,2,0,-1,G__defined_typename("Double_t"),-1,2,"fVal=",0,"![fSelectedRows][fDimension] Local buffer for the variables");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fValSize=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fW=",0,"![fSelectedRows]Local buffer for weights");
   G__memvar_setup((void*)0,71,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fVarMultiple=",0,"![fDimension] true if fVar[i] has a variable index");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fSelectMultiple=",0,"true if selection has a variable index");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fCleanElist=",0,"true if original Tree elist must be saved");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fObjEval=",0,"true if fVar1 returns an object (or pointer to).");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSelectorEntries */
static void G__setup_memvarTSelectorEntries(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_TSelectorEntries));
   { TSelectorEntries *p; p=(TSelectorEntries*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fChain)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TTree),-1,-1,1,"fChain=",0,"! pointer to the analyzed TTree or TChain");
   G__memvar_setup((void*)((long)(&p->fSelect)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormula),-1,-1,1,"fSelect=",0,"Pointer to selection formula");
   G__memvar_setup((void*)((long)(&p->fSelectedRows)-(long)(p)),110,0,0,-1,G__defined_typename("Long64_t"),-1,1,"fSelectedRows=",0,"Number of selected entries");
   G__memvar_setup((void*)((long)(&p->fSelectMultiple)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fSelectMultiple=",0,"true if selection has a variable index");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TTreeDrawArgsParser */
static void G__setup_memvarTTreeDrawArgsParser(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeDrawArgsParser));
   { TTreeDrawArgsParser *p; p=(TTreeDrawArgsParser*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeDrawArgsParsercLcLEOutputType),-1,-2,1,"kUNKNOWN=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeDrawArgsParsercLcLEOutputType),-1,-2,1,"kEVENTLIST=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeDrawArgsParsercLcLEOutputType),-1,-2,1,"kENTRYLIST=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeDrawArgsParsercLcLEOutputType),-1,-2,1,"kPROFILE=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeDrawArgsParsercLcLEOutputType),-1,-2,1,"kPROFILE2D=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeDrawArgsParsercLcLEOutputType),-1,-2,1,"kGRAPH=5",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeDrawArgsParsercLcLEOutputType),-1,-2,1,"kPOLYMARKER3D=6",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeDrawArgsParsercLcLEOutputType),-1,-2,1,"kHISTOGRAM1D=7",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeDrawArgsParsercLcLEOutputType),-1,-2,1,"kHISTOGRAM2D=8",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeDrawArgsParsercLcLEOutputType),-1,-2,1,"kLISTOFGRAPHS=9",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeDrawArgsParsercLcLEOutputType),-1,-2,1,"kLISTOFPOLYMARKERS3D=10",0,(char*)NULL);
   G__memvar_setup((void*)(&TTreeDrawArgsParser::fgMaxDimension),105,0,0,-1,G__defined_typename("Int_t"),-2,1,"fgMaxDimension=",0,"= 4");
   G__memvar_setup((void*)(&TTreeDrawArgsParser::fgMaxParameters),105,0,0,-1,G__defined_typename("Int_t"),-2,1,"fgMaxParameters=",0,"= 9");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TString),-1,-1,2,"fExp=",0,"complete variable expression");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TString),-1,-1,2,"fSelection=",0,"selection expression");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TString),-1,-1,2,"fOption=",0,"draw options");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fDimension=",0,"dimension of the histogram/plot");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TString),-1,-1,2,"fVarExp[4]=",0,"variable expression 0 - X, 1 - Y, 2 - Z, 3 - W");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fAdd=",0,"values should be added to an existing object");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TString),-1,-1,2,"fName=",0,"histogram's/plot's name");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNoParameters=",0,"if dimensions of the plot was specified");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fParameterGiven[9]=",0,"true if the parameter was given, otherwise false");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fParameters[9]=",0,"parameters in brackets");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fShouldDraw=",0,"if to draw the plot");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fOptionSame=",0,"if option contained \"same\"");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fEntryList=",0,"if fill a TEntryList");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TObject),-1,-1,2,"fOriginal=",0,"original plot (if it is to be reused)");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fDrawProfile=",0,"true if the options contain :\"prof\"");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeDrawArgsParsercLcLEOutputType),-1,-1,2,"fOutputType=",0,"type of the output");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TTreeIndex */
static void G__setup_memvarTTreeIndex(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeIndex));
   { TTreeIndex *p; p=(TTreeIndex*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TString),-1,-1,2,"fMajorName=",0,"Index major name");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TString),-1,-1,2,"fMinorName=",0,"Index minor name");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fN=",0,"Number of entries");
   G__memvar_setup((void*)0,78,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fIndexValues=",0,"[fN] Sorted index values");
   G__memvar_setup((void*)0,78,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fIndex=",0,"[fN] Index of sorted values");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormula),-1,-1,2,"fMajorFormula=",0,"! Pointer to major TreeFormula");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormula),-1,-1,2,"fMinorFormula=",0,"! Pointer to minor TreeFormula");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormula),-1,-1,2,"fMajorFormulaParent=",0,"! Pointer to major TreeFormula in Parent tree (if any)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormula),-1,-1,2,"fMinorFormulaParent=",0,"! Pointer to minor TreeFormula in Parent tree (if any)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TTreePerfStats */
static void G__setup_memvarTTreePerfStats(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_TTreePerfStats));
   { TTreePerfStats *p; p=(TTreePerfStats*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTreeCacheSize=",0,"TTreeCache buffer size");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNleaves=",0,"Number of leaves in the tree");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fReadCalls=",0,"Number of read calls");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fReadaheadSize=",0,"Readahead cache size");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fBytesRead=",0,"Number of bytes read");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fBytesReadExtra=",0,"Number of bytes (overhead) of the readahead cache");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRealNorm=",0,"Real time scale factor for fGraphTime");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRealTime=",0,"Real time");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fCpuTime=",0,"Cpu time");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDiskTime=",0,"Time spent in pure raw disk IO");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fCompress=",0,"Tree compression factor      ");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TString),-1,-1,2,"fName=",0,"name of this TTreePerfStats");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TString),-1,-1,2,"fHostInfo=",0,"name of the host system, ROOT version and date");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TFile),-1,-1,2,"fFile=",0,"!pointer to the file containing the Tree");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TTree),-1,-1,2,"fTree=",0,"!pointer to the Tree being monitored");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TGraphErrors),-1,-1,2,"fGraphIO=",0,"pointer to the graph with IO data");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TGraphErrors),-1,-1,2,"fGraphTime=",0,"pointer to the graph with timestamp info");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TPaveText),-1,-1,2,"fPave=",0,"pointer to annotation pavetext");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TStopwatch),-1,-1,2,"fWatch=",0,"TStopwatch pointer");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TGaxis),-1,-1,2,"fRealTimeAxis=",0,"pointer to TGaxis object showing real-time");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TText),-1,-1,2,"fHostInfoText=",0,"Graphics Text object with the fHostInfo data");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TTreePlayer */
static void G__setup_memvarTTreePlayer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_TTreePlayer));
   { TTreePlayer *p; p=(TTreePlayer*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TTree),-1,-1,2,"fTree=",0,"!  Pointer to current Tree");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fScanRedirect=",0,"Switch to redirect TTree::Scan output to a file");
   G__memvar_setup((void*)0,67,0,1,-1,-1,-1,2,"fScanFileName=",0,"Name of the file where Scan is redirected");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fDimension=",0,"Dimension of the current expression");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fSelectedRows=",0,"Number of selected entries");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TH1),-1,-1,2,"fHistogram=",0,"! Pointer to histogram used for the projection");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TSelectorDraw),-1,-1,2,"fSelector=",0,"! Pointer to current selector");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TSelector),-1,-1,2,"fSelectorFromFile=",0,"! Pointer to a user defined selector created by this TTreePlayer object");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TClass),-1,-1,2,"fSelectorClass=",0,"! Pointer to the actual class of the TSelectorFromFile");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TList),-1,-1,2,"fInput=",0,"! input list to the selector");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TList),-1,-1,2,"fFormulaList=",0,"! Pointer to a list of coordinated list TTreeFormula (used by Scan and Query)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TSelector),-1,-1,2,"fSelectorUpdate=",0,"! Set to the selector address when it's entry list needs to be updated by the UpdateFormulaLeaves function");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TTreeTableInterface */
static void G__setup_memvarTTreeTableInterface(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeTableInterface));
   { TTreeTableInterface *p; p=(TTreeTableInterface*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TTree),-1,-1,4,"fTree=",0,"Data in a TTree");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TList),-1,-1,4,"fFormulas=",0,"Array of TTreeFormulas to display values");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fEntry=",0,"Present entry number in fTree.");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fNEntries=",0,"Number of entries in the tree.");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fFirstEntry=",0,"First entry.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormulaManager),-1,-1,4,"fManager=",0,"Coordinator for the formulas.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormula),-1,-1,4,"fSelect=",0,"Selection condition");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TSelectorDraw),-1,-1,4,"fSelector=",0,"Selector");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TList),-1,-1,4,"fInput=",0,"Used for fSelector.");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fForceDim=",0,"Force dimension.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TEntryList),-1,-1,4,"fEntries=",0,"Currently active entries");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fNRows=",0,"Amount of rows in the data");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fNColumns=",0,"Amount of columns in the data");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreePlayerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::TArrayProxy<ROOT::TArrayType<short,0> > */
static void G__setup_memvarROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR));
   { ROOT::TArrayProxy<ROOT::TArrayType<short,0> > *p; p=(ROOT::TArrayProxy<ROOT::TArrayType<short,0> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ROOT::TArrayProxy<ROOT::TArrayType<char,0> > */
static void G__setup_memvarROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR));
   { ROOT::TArrayProxy<ROOT::TArrayType<char,0> > *p; p=(ROOT::TArrayProxy<ROOT::TArrayType<char,0> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> > */
static void G__setup_memvarROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR));
   { ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> > *p; p=(ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__TreePlayer() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncROOT(void) {
   /* ROOT */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT));
   G__memfunc_setup("CreateClass",1098,G__G__TreePlayer_18_0_1, 85, G__get_linked_tagnum(&G__G__TreePlayerLN_TClass), -1, 0, 9, 1, 1, 0, 
"C - - 10 - cname s - 'Version_t' 0 - id "
"u 'type_info' - 11 - info U 'TVirtualIsAProxy' - 0 - isa "
"Y - 'ShowMembersFunc_t' 0 - show C - - 10 - dfil "
"C - - 10 - ifil i - 'Int_t' 0 - dl "
"i - 'Int_t' 0 - il", (char*)NULL, (void*) G__func2void( (TClass* (*)(const char*, Version_t, const type_info&, TVirtualIsAProxy*, ShowMembersFunc_t, const char*, const char*, Int_t, Int_t))(&ROOT::CreateClass) ), 0);
   G__memfunc_setup("AddClass",767,G__G__TreePlayer_18_0_2, 121, -1, -1, 0, 5, 1, 1, 0, 
"C - - 10 - cname s - 'Version_t' 0 - id "
"u 'type_info' - 11 - info Y - 'VoidFuncPtr_t' 0 - dict "
"i - 'Int_t' 0 - pragmabits", (char*)NULL, (void*) G__func2void( (void (*)(const char*, Version_t, const type_info&, VoidFuncPtr_t, Int_t))(&ROOT::AddClass) ), 0);
   G__memfunc_setup("RemoveClass",1124,G__G__TreePlayer_18_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - cname", (char*)NULL, (void*) G__func2void( (void (*)(const char*))(&ROOT::RemoveClass) ), 0);
   G__memfunc_setup("ResetClassVersion",1759,G__G__TreePlayer_18_0_4, 121, -1, -1, 0, 3, 1, 1, 0, 
"U 'TClass' - 0 - - C - - 10 - - "
"s - 'Short_t' 0 - -", (char*)NULL, (void*) G__func2void( (void (*)(TClass*, const char*, Short_t))(&ROOT::ResetClassVersion) ), 0);
   G__memfunc_setup("RegisterClassTemplate",2167,G__G__TreePlayer_18_0_5, 85, G__get_linked_tagnum(&G__G__TreePlayerLN_TNamed), -1, 0, 3, 1, 1, 0, 
"C - - 10 - name C - - 10 - file "
"i - 'Int_t' 0 - line", (char*)NULL, (void*) G__func2void( (TNamed* (*)(const char*, const char*, Int_t))(&ROOT::RegisterClassTemplate) ), 0);
   G__memfunc_setup("DefineBehavior",1403,G__G__TreePlayer_18_0_6, 85, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTInitBehavior), -1, 0, 2, 1, 1, 1, 
"Y - - 0 - - Y - - 0 - -", (char*)NULL, (void*) G__func2void( (const ROOT::TInitBehavior* (*)(void*, void*))(&ROOT::DefineBehavior) ), 0);
   G__memfunc_setup("CreateClass",1098,G__G__TreePlayer_18_0_7, 85, G__get_linked_tagnum(&G__G__TreePlayerLN_TClass), -1, 0, 6, 1, 1, 0, 
"C - - 10 - cname s - 'Version_t' 0 - id "
"C - - 10 - dfil C - - 10 - ifil "
"i - 'Int_t' 0 - dl i - 'Int_t' 0 - il", (char*)NULL, (void*) G__func2void( (TClass* (*)(const char*, Version_t, const char*, const char*, Int_t, Int_t))(&ROOT::CreateClass) ), 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLTBranchProxyDescriptor(void) {
   /* ROOT::TBranchProxyDescriptor */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxyDescriptor));
   G__memfunc_setup("TBranchProxyDescriptor",2275,G__G__TreePlayer_117_0_1, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxyDescriptor), -1, 0, 6, 1, 1, 0, 
"C - - 10 - dataname C - - 10 - type "
"C - - 10 - branchname g - 'Bool_t' 0 'true' split "
"g - 'Bool_t' 0 'false' skipped g - 'Bool_t' 0 'false' isleaflist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDataName",1051,G__G__TreePlayer_117_0_2, 67, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTypeName",1091,G__G__TreePlayer_117_0_3, 67, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBranchName",1263,G__G__TreePlayer_117_0_4, 67, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsEquivalent",1242,G__G__TreePlayer_117_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'ROOT::TBranchProxyDescriptor' - 10 - other g - 'Bool_t' 0 'kFALSE' inClass", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSplit",712,G__G__TreePlayer_117_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OutputDecl",1033,G__G__TreePlayer_117_0_7, 121, -1, -1, 0, 3, 1, 1, 0, 
"E - - 0 - hf i - - 0 - offset "
"h - 'UInt_t' 0 - maxVarname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OutputInit",1061,G__G__TreePlayer_117_0_8, 121, -1, -1, 0, 4, 1, 1, 0, 
"E - - 0 - hf i - - 0 - offset "
"h - 'UInt_t' 0 - maxVarname C - - 10 - prefix", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__TreePlayer_117_0_9, 85, G__get_linked_tagnum(&G__G__TreePlayerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ROOT::TBranchProxyDescriptor::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__TreePlayer_117_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ROOT::TBranchProxyDescriptor::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__TreePlayer_117_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ROOT::TBranchProxyDescriptor::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__TreePlayer_117_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ROOT::TBranchProxyDescriptor::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__TreePlayerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__TreePlayer_117_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__TreePlayer_117_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ROOT::TBranchProxyDescriptor::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__TreePlayer_117_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ROOT::TBranchProxyDescriptor::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__TreePlayer_117_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ROOT::TBranchProxyDescriptor::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__TreePlayer_117_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ROOT::TBranchProxyDescriptor::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TBranchProxyDescriptor", 2275, G__G__TreePlayer_117_0_21, (int) ('i'), 
G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxyDescriptor), -1, 0, 1, 1, 1, 0, "u 'ROOT::TBranchProxyDescriptor' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TBranchProxyDescriptor", 2401, G__G__TreePlayer_117_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__TreePlayer_117_0_23, (int) ('u'), G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxyDescriptor), -1, 1, 1, 1, 1, 0, "u 'ROOT::TBranchProxyDescriptor' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLTBranchProxyClassDescriptor(void) {
   /* ROOT::TBranchProxyClassDescriptor */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxyClassDescriptor));
   G__memfunc_setup("NameToSymbol",1210,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TBranchProxyClassDescriptor",2777,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxyClassDescriptor), -1, 0, 1, 1, 4, 0, "u 'ROOT::TBranchProxyClassDescriptor' - 11 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxyClassDescriptor), -1, 1, 1, 1, 4, 0, "u 'ROOT::TBranchProxyClassDescriptor' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TBranchProxyClassDescriptor",2777,G__G__TreePlayer_118_0_4, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxyClassDescriptor), -1, 0, 6, 1, 1, 0, 
"C - - 10 - type U 'TVirtualStreamerInfo' - 0 - info "
"C - - 10 - branchname i 'ROOT::TBranchProxyClassDescriptor::ELocation' - 0 - isclones "
"h - 'UInt_t' 0 - splitlevel u 'TString' - 11 - containerName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TBranchProxyClassDescriptor",2777,G__G__TreePlayer_118_0_5, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxyClassDescriptor), -1, 0, 1, 1, 1, 0, "C - - 10 - branchname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TBranchProxyClassDescriptor",2777,G__G__TreePlayer_118_0_6, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxyClassDescriptor), -1, 0, 7, 1, 1, 0, 
"C - - 10 - type U 'TVirtualStreamerInfo' - 0 - info "
"C - - 10 - branchname C - - 10 - branchPrefix "
"i 'ROOT::TBranchProxyClassDescriptor::ELocation' - 0 - isclones h - 'UInt_t' 0 - splitlevel "
"u 'TString' - 11 - containerName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBranchName",1263,G__G__TreePlayer_118_0_7, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSubBranchPrefix",1798,G__G__TreePlayer_118_0_8, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRawSymbol",1216,G__G__TreePlayer_118_0_9, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInfo",684,G__G__TreePlayer_118_0_10, 85, G__get_linked_tagnum(&G__G__TreePlayerLN_TVirtualStreamerInfo), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSplitLevel",1316,G__G__TreePlayer_118_0_11, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsEquivalent",1242,G__G__TreePlayer_118_0_12, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'ROOT::TBranchProxyClassDescriptor' - 10 - other", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddDescriptor",1320,G__G__TreePlayer_118_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'ROOT::TBranchProxyDescriptor' - 0 - desc g - 'Bool_t' 0 - isBase", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsLoaded",773,G__G__TreePlayer_118_0_14, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsLoaded",773,G__G__TreePlayer_118_0_15, 103, -1, G__defined_typename("Bool_t"), 0, 1, 3, 1, 0, "C - - 10 - -", (char*)NULL, (void*) G__func2void( (Bool_t (*)(const char*))(&ROOT::TBranchProxyClassDescriptor::IsLoaded) ), 0);
   G__memfunc_setup("IsClones",800,G__G__TreePlayer_118_0_16, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSTL",431,G__G__TreePlayer_118_0_17, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIsClones",1088,G__G__TreePlayer_118_0_18, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxyClassDescriptorcLcLELocation), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetContainerName",1604,G__G__TreePlayer_118_0_19, 117, G__get_linked_tagnum(&G__G__TreePlayerLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OutputDecl",1033,G__G__TreePlayer_118_0_20, 121, -1, -1, 0, 3, 1, 1, 0, 
"E - - 0 - hf i - - 0 - offset "
"h - 'UInt_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__TreePlayer_118_0_21, 85, G__get_linked_tagnum(&G__G__TreePlayerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ROOT::TBranchProxyClassDescriptor::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__TreePlayer_118_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ROOT::TBranchProxyClassDescriptor::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__TreePlayer_118_0_23, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ROOT::TBranchProxyClassDescriptor::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__TreePlayer_118_0_24, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ROOT::TBranchProxyClassDescriptor::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__TreePlayerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__TreePlayer_118_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__TreePlayer_118_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ROOT::TBranchProxyClassDescriptor::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__TreePlayer_118_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ROOT::TBranchProxyClassDescriptor::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__TreePlayer_118_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ROOT::TBranchProxyClassDescriptor::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__TreePlayer_118_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ROOT::TBranchProxyClassDescriptor::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TBranchProxyClassDescriptor", 2903, G__G__TreePlayer_118_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTTreeFormula(void) {
   /* TTreeFormula */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormula));
   G__memfunc_setup("TTreeFormula",1210,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormula), -1, 0, 4, 1, 2, 0, 
"C - - 10 - name C - - 10 - formula "
"U 'TTree' - 0 - tree u 'vector<string,allocator<string> >' 'vector<std::string>' 11 - aliases", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"C - - 10 - name C - - 10 - formula", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BranchHasMethod",1483,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 5, 1, 2, 8, 
"U 'TLeaf' - 0 - leaf U 'TBranch' - 0 - branch "
"C - - 10 - method C - - 10 - params "
"n - 'Long64_t' 0 - readentry", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DefineAlternate",1515,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "C - - 10 - expression", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DefineDimensions",1636,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 2, 0, 
"i - 'Int_t' 0 - code i - 'Int_t' 0 - size "
"U 'TFormLeafInfoMultiVarDim' - 0 - info i - 'Int_t' 1 - virt_dim", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindLeafForExpression",2128,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 9, 1, 2, 0, 
"C - - 10 - expression U 'TLeaf' - 1 - leaf "
"u 'TString' - 1 - leftover g - 'Bool_t' 1 - final "
"h - 'UInt_t' 1 - paran_level u 'TObjArray' - 1 - castqueue "
"u 'vector<string,allocator<string> >' 'vector<std::string>' 1 - aliasUsed g - 'Bool_t' 1 - useLeafCollectionObject "
"C - - 10 - fullExpression", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLeafWithDatamember",2086,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__TreePlayerLN_TLeaf), -1, 0, 3, 1, 2, 8, 
"C - - 10 - topchoice C - - 10 - nextchice "
"n - 'Long64_t' 0 - readentry", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseWithLeaf",1295,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 7, 1, 2, 0, 
"U 'TLeaf' - 0 - leaf C - - 10 - expression "
"g - 'Bool_t' 0 - final h - 'UInt_t' 0 - paran_level "
"u 'TObjArray' - 1 - castqueue g - 'Bool_t' 0 - useLeafCollectionObject "
"C - - 10 - fullExpression", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RegisterDimensions",1886,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 2, 0, 
"i - 'Int_t' 0 - code i - 'Int_t' 0 - size "
"U 'TFormLeafInfoMultiVarDim' - 0 '0' multidim", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RegisterDimensions",1886,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 2, 0, 
"i - 'Int_t' 0 - code U 'TBranchElement' - 0 - branch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RegisterDimensions",1886,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 4, 1, 2, 0, 
"i - 'Int_t' 0 - code U 'TFormLeafInfo' - 0 - info "
"U 'TFormLeafInfo' - 0 - maininfo g - 'Bool_t' 0 - useCollectionObject", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RegisterDimensions",1886,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 2, 0, 
"i - 'Int_t' 0 - code U 'TLeaf' - 0 - leaf", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RegisterDimensions",1886,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 2, 0, 
"C - - 10 - size i - 'Int_t' 0 - code", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetValueFromMethod",1810,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 2, 8, 
"i - 'Int_t' 0 - i U 'TLeaf' - 0 - leaf", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetValuePointerFromMethod",2547,(G__InterfaceMethod) NULL, 89, -1, -1, 0, 2, 1, 2, 8, 
"i - 'Int_t' 0 - i U 'TLeaf' - 0 - leaf", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRealInstance",1497,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 2, 0, 
"i - 'Int_t' 0 - instance i - 'Int_t' 0 - codeindex", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadBranches",1190,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadCurrentDim",1405,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResetDimensions",1564,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EvalClass",894,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__TreePlayerLN_TClass), -1, 0, 1, 1, 2, 8, "i - 'Int_t' 0 - oper", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsLeafInteger",1282,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 2, 8, "i - 'Int_t' 0 - code", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsString",819,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 2, 8, "i - 'Int_t' 0 - oper", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsLeafString",1195,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 2, 8, "i - 'Int_t' 0 - code", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SwitchToFormLeafInfo",1997,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 2, 0, "i - 'Int_t' 0 - code", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StringToNumber",1443,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 2, 0, "i - 'Int_t' 0 - code", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Convert",737,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "h - 'UInt_t' 0 - fromVersion", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TTreeFormula",1210,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormula), -1, 0, 1, 1, 4, 0, "u 'TTreeFormula' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormula), -1, 1, 1, 1, 4, 0, "u 'TTreeFormula' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TTreeFormula",1210,G__G__TreePlayer_163_0_29, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormula), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TTreeFormula",1210,G__G__TreePlayer_163_0_30, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormula), -1, 0, 3, 1, 1, 0, 
"C - - 10 - name C - - 10 - formula "
"U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DefinedVariable",1493,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"u 'TString' - 1 - variable i - 'Int_t' 1 - action", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("EvalClass",894,G__G__TreePlayer_163_0_32, 85, G__get_linked_tagnum(&G__G__TreePlayerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("EvalInstance",1213,G__G__TreePlayer_163_0_33, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 '0' i C - - 12 '0' stringStack", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("EvalStringInstance",1844,G__G__TreePlayer_163_0_34, 67, -1, -1, 0, 1, 1, 1, 1, "i - 'Int_t' 0 '0' i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("EvalObject",991,G__G__TreePlayer_163_0_35, 89, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '0' i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLeafInfo",1060,G__G__TreePlayer_163_0_36, 85, G__get_linked_tagnum(&G__G__TreePlayerLN_TFormLeafInfo), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - code", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetManager",987,G__G__TreePlayer_163_0_37, 85, G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormulaManager), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMethodCall",1277,G__G__TreePlayer_163_0_38, 85, G__get_linked_tagnum(&G__G__TreePlayerLN_TMethodCall), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - code", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMultiplicity",1577,G__G__TreePlayer_163_0_39, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLeaf",664,G__G__TreePlayer_163_0_40, 85, G__get_linked_tagnum(&G__G__TreePlayerLN_TLeaf), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNcodes",892,G__G__TreePlayer_163_0_41, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNdata",776,G__G__TreePlayer_163_0_42, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsInteger",906,G__G__TreePlayer_163_0_43, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "g - 'Bool_t' 0 'kTRUE' fast", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsQuickLoad",1081,G__G__TreePlayer_163_0_44, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsString",819,G__G__TreePlayer_163_0_45, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Notify",633,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PrintValue",1034,G__G__TreePlayer_163_0_47, 67, -1, -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 '0' mode", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PrintValue",1034,G__G__TreePlayer_163_0_48, 67, -1, -1, 0, 3, 1, 1, 8, 
"i - 'Int_t' 0 - mode i - 'Int_t' 0 - instance "
"C - - 10 '\"9.9\"' decform", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetAxis",705,G__G__TreePlayer_163_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TAxis' - 0 '0' axis", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetQuickLoad",1193,G__G__TreePlayer_163_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - quick", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTree",700,G__G__TreePlayer_163_0_51, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ResetLoading",1217,G__G__TreePlayer_163_0_52, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTree",688,G__G__TreePlayer_163_0_53, 85, G__get_linked_tagnum(&G__G__TreePlayerLN_TTree), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("UpdateFormulaLeaves",1945,G__G__TreePlayer_163_0_54, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__TreePlayer_163_0_55, 85, G__get_linked_tagnum(&G__G__TreePlayerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TTreeFormula::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__TreePlayer_163_0_56, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TTreeFormula::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__TreePlayer_163_0_57, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TTreeFormula::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__TreePlayer_163_0_58, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TTreeFormula::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__TreePlayerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__TreePlayer_163_0_62, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__TreePlayer_163_0_63, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TTreeFormula::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__TreePlayer_163_0_64, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TTreeFormula::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__TreePlayer_163_0_65, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TTreeFormula::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__TreePlayer_163_0_66, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TTreeFormula::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TTreeFormula", 1336, G__G__TreePlayer_163_0_67, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLTBranchProxy(void) {
   /* ROOT::TBranchProxy */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy));
   G__memfunc_setup("Print",525,G__G__TreePlayer_181_0_1, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TBranchProxy",1220,G__G__TreePlayer_181_0_2, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TBranchProxy",1220,G__G__TreePlayer_181_0_3, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy), -1, 0, 3, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - boss C - - 10 - top "
"C - - 10 '0' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TBranchProxy",1220,G__G__TreePlayer_181_0_4, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy), -1, 0, 4, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - boss C - - 10 - top "
"C - - 10 - name C - - 10 - membername", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TBranchProxy",1220,G__G__TreePlayer_181_0_5, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy), -1, 0, 5, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - boss U 'ROOT::TBranchProxy' - 0 - parent "
"C - - 10 - membername C - - 10 '0' top "
"C - - 10 '0' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetProxy",834,G__G__TreePlayer_181_0_6, 85, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__G__TreePlayer_181_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Setup",529,G__G__TreePlayer_181_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInitialized",1330,G__G__TreePlayer_181_0_9, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsaPointer",1022,G__G__TreePlayer_181_0_10, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Read",380,G__G__TreePlayer_181_0_11, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadEntries",1110,G__G__TreePlayer_181_0_12, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetClass",790,G__G__TreePlayer_181_0_13, 85, G__get_linked_tagnum(&G__G__TreePlayerLN_TClass), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWhere",795,G__G__TreePlayer_181_0_14, 89, -1, -1, 0, 0, 1, 1, 8, "", "intentionally non-virtual", (void*) NULL, 0);
   G__memfunc_setup("GetCollection",1324,G__G__TreePlayer_181_0_15, 85, G__get_linked_tagnum(&G__G__TreePlayerLN_TVirtualCollectionProxy), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStart",814,G__G__TreePlayer_181_0_16, 89, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 '0' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetClaStart",1086,G__G__TreePlayer_181_0_17, 89, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 '0' i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetStlStart",1121,G__G__TreePlayer_181_0_18, 89, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 '0' i", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("TBranchProxy", 1220, G__G__TreePlayer_181_0_19, (int) ('i'), G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy), -1, 0, 1, 1, 1, 0, "u 'ROOT::TBranchProxy' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TBranchProxy", 1346, G__G__TreePlayer_181_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLTFriendProxy(void) {
   /* ROOT::TFriendProxy */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTFriendProxy));
   G__memfunc_setup("TFriendProxy",1230,G__G__TreePlayer_182_0_1, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTFriendProxy), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TFriendProxy",1230,G__G__TreePlayer_182_0_2, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTFriendProxy), -1, 0, 3, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director U 'TTree' - 0 - main "
"i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetReadEntry",1198,G__G__TreePlayer_182_0_3, 110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResetReadEntry",1425,G__G__TreePlayer_182_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Update",611,G__G__TreePlayer_182_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - newmain", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TFriendProxy", 1230, G__G__TreePlayer_182_0_6, (int) ('i'), G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTFriendProxy), -1, 0, 1, 1, 1, 0, "u 'ROOT::TFriendProxy' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TFriendProxy", 1356, G__G__TreePlayer_182_0_7, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__TreePlayer_182_0_8, (int) ('u'), G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTFriendProxy), -1, 1, 1, 1, 1, 0, "u 'ROOT::TFriendProxy' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLTBranchProxyDirector(void) {
   /* ROOT::TBranchProxyDirector */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxyDirector));
   G__memfunc_setup("TBranchProxyDirector",2048,G__G__TreePlayer_183_0_1, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxyDirector), -1, 0, 2, 1, 1, 0, 
"U 'TTree' - 0 - tree n - 'Long64_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TBranchProxyDirector",2048,G__G__TreePlayer_183_0_2, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxyDirector), -1, 0, 2, 1, 1, 0, 
"U 'TTree' - 0 - tree i - 'Int_t' 0 - i", "cint has (had?) a problem casting int to long long", (void*) NULL, 0);
   G__memfunc_setup("TBranchProxyDirector",2048,G__G__TreePlayer_183_0_3, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxyDirector), -1, 0, 1, 1, 1, 0, "u 'ROOT::TBranchProxyDirector' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__TreePlayer_183_0_4, 117, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxyDirector), -1, 1, 1, 1, 1, 0, "u 'ROOT::TBranchProxyDirector' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Attach",597,G__G__TreePlayer_183_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'ROOT::TBranchProxy' - 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Attach",597,G__G__TreePlayer_183_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "U 'ROOT::TFriendProxy' - 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetReadEntry",1198,G__G__TreePlayer_183_0_7, 110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTree",688,G__G__TreePlayer_183_0_8, 85, G__get_linked_tagnum(&G__G__TreePlayerLN_TTree), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetReadEntry",1210,G__G__TreePlayer_183_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - entry", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTree",700,G__G__TreePlayer_183_0_10, 85, G__get_linked_tagnum(&G__G__TreePlayerLN_TTree), -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - newtree", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TBranchProxyDirector", 2174, G__G__TreePlayer_183_0_11, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLTImpProxylEdoublegR(void) {
   /* ROOT::TImpProxy<double> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEdoublegR));
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TImpProxy<double>",1681,G__G__TreePlayer_207_0_2, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEdoublegR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<double>",1681,G__G__TreePlayer_207_0_3, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEdoublegR), -1, 0, 2, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<double>",1681,G__G__TreePlayer_207_0_4, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEdoublegR), -1, 0, 3, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<double>",1681,G__G__TreePlayer_207_0_5, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEdoublegR), -1, 0, 4, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name C - - 10 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<double>",1681,G__G__TreePlayer_207_0_6, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEdoublegR), -1, 0, 5, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director U 'ROOT::TBranchProxy' - 0 - parent "
"C - - 10 - name C - - 10 '0' top "
"C - - 10 '0' mid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator double",1543,G__G__TreePlayer_207_0_7, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<double>",1681,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEdoublegR), -1, 0, 1, 1, 4, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEdoublegR), -1, 1, 1, 1, 4, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TImpProxy<double>", 1681, G__G__TreePlayer_207_0_10, (int) ('i'), G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEdoublegR), -1, 0, 1, 1, 1, 0, "u 'ROOT::TImpProxy<double>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TImpProxy<double>", 1807, G__G__TreePlayer_207_0_11, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLTImpProxylEfloatgR(void) {
   /* ROOT::TImpProxy<float> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEfloatgR));
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TImpProxy<float>",1580,G__G__TreePlayer_209_0_2, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEfloatgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<float>",1580,G__G__TreePlayer_209_0_3, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEfloatgR), -1, 0, 2, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<float>",1580,G__G__TreePlayer_209_0_4, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEfloatgR), -1, 0, 3, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<float>",1580,G__G__TreePlayer_209_0_5, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEfloatgR), -1, 0, 4, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name C - - 10 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<float>",1580,G__G__TreePlayer_209_0_6, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEfloatgR), -1, 0, 5, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director U 'ROOT::TBranchProxy' - 0 - parent "
"C - - 10 - name C - - 10 '0' top "
"C - - 10 '0' mid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator float",1442,G__G__TreePlayer_209_0_7, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<float>",1580,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEfloatgR), -1, 0, 1, 1, 4, 0, "f - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEfloatgR), -1, 1, 1, 1, 4, 0, "f - - 0 - -", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TImpProxy<float>", 1580, G__G__TreePlayer_209_0_10, (int) ('i'), G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEfloatgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::TImpProxy<float>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TImpProxy<float>", 1706, G__G__TreePlayer_209_0_11, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLTImpProxylEunsignedsPintgR(void) {
   /* ROOT::TImpProxy<unsigned int> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPintgR));
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TImpProxy<unsigned int>",2270,G__G__TreePlayer_211_0_2, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPintgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<unsigned int>",2270,G__G__TreePlayer_211_0_3, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPintgR), -1, 0, 2, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<unsigned int>",2270,G__G__TreePlayer_211_0_4, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPintgR), -1, 0, 3, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<unsigned int>",2270,G__G__TreePlayer_211_0_5, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPintgR), -1, 0, 4, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name C - - 10 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<unsigned int>",2270,G__G__TreePlayer_211_0_6, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPintgR), -1, 0, 5, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director U 'ROOT::TBranchProxy' - 0 - parent "
"C - - 10 - name C - - 10 '0' top "
"C - - 10 '0' mid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator unsigned int",2132,G__G__TreePlayer_211_0_7, 104, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<unsigned int>",2270,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPintgR), -1, 0, 1, 1, 4, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPintgR), -1, 1, 1, 1, 4, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TImpProxy<unsigned int>", 2270, G__G__TreePlayer_211_0_10, (int) ('i'), 
G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPintgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::TImpProxy<unsigned int>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TImpProxy<unsigned int>", 2396, G__G__TreePlayer_211_0_11, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLTImpProxylEunsignedsPlonggR(void) {
   /* ROOT::TImpProxy<unsigned long> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPlonggR));
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TImpProxy<unsigned long>",2371,G__G__TreePlayer_212_0_2, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPlonggR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<unsigned long>",2371,G__G__TreePlayer_212_0_3, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPlonggR), -1, 0, 2, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<unsigned long>",2371,G__G__TreePlayer_212_0_4, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPlonggR), -1, 0, 3, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<unsigned long>",2371,G__G__TreePlayer_212_0_5, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPlonggR), -1, 0, 4, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name C - - 10 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<unsigned long>",2371,G__G__TreePlayer_212_0_6, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPlonggR), -1, 0, 5, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director U 'ROOT::TBranchProxy' - 0 - parent "
"C - - 10 - name C - - 10 '0' top "
"C - - 10 '0' mid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator unsigned long",2233,G__G__TreePlayer_212_0_7, 107, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<unsigned long>",2371,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPlonggR), -1, 0, 1, 1, 4, 0, "k - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPlonggR), -1, 1, 1, 1, 4, 0, "k - - 0 - -", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TImpProxy<unsigned long>", 2371, G__G__TreePlayer_212_0_10, (int) ('i'), 
G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPlonggR), -1, 0, 1, 1, 1, 0, "u 'ROOT::TImpProxy<unsigned long>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TImpProxy<unsigned long>", 2497, G__G__TreePlayer_212_0_11, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLTImpProxylEunsignedsPlongsPlonggR(void) {
   /* ROOT::TImpProxy<unsigned long long> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPlongsPlonggR));
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TImpProxy<unsigned long long>",2835,G__G__TreePlayer_213_0_2, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPlongsPlonggR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<unsigned long long>",2835,G__G__TreePlayer_213_0_3, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPlongsPlonggR), -1, 0, 2, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<unsigned long long>",2835,G__G__TreePlayer_213_0_4, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPlongsPlonggR), -1, 0, 3, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<unsigned long long>",2835,G__G__TreePlayer_213_0_5, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPlongsPlonggR), -1, 0, 4, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name C - - 10 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<unsigned long long>",2835,G__G__TreePlayer_213_0_6, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPlongsPlonggR), -1, 0, 5, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director U 'ROOT::TBranchProxy' - 0 - parent "
"C - - 10 - name C - - 10 '0' top "
"C - - 10 '0' mid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator unsigned long long",2697,G__G__TreePlayer_213_0_7, 109, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<unsigned long long>",2835,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPlongsPlonggR), -1, 0, 1, 1, 4, 0, "m - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPlongsPlonggR), -1, 1, 1, 1, 4, 0, "m - - 0 - -", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TImpProxy<unsigned long long>", 2835, G__G__TreePlayer_213_0_10, (int) ('i'), 
G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPlongsPlonggR), -1, 0, 1, 1, 1, 0, "u 'ROOT::TImpProxy<unsigned long long>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TImpProxy<unsigned long long>", 2961, G__G__TreePlayer_213_0_11, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLTImpProxylEunsignedsPshortgR(void) {
   /* ROOT::TImpProxy<unsigned short> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPshortgR));
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TImpProxy<unsigned short>",2499,G__G__TreePlayer_214_0_2, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPshortgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<unsigned short>",2499,G__G__TreePlayer_214_0_3, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPshortgR), -1, 0, 2, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<unsigned short>",2499,G__G__TreePlayer_214_0_4, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPshortgR), -1, 0, 3, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<unsigned short>",2499,G__G__TreePlayer_214_0_5, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPshortgR), -1, 0, 4, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name C - - 10 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<unsigned short>",2499,G__G__TreePlayer_214_0_6, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPshortgR), -1, 0, 5, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director U 'ROOT::TBranchProxy' - 0 - parent "
"C - - 10 - name C - - 10 '0' top "
"C - - 10 '0' mid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator unsigned short",2361,G__G__TreePlayer_214_0_7, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<unsigned short>",2499,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPshortgR), -1, 0, 1, 1, 4, 0, "r - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPshortgR), -1, 1, 1, 1, 4, 0, "r - - 0 - -", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TImpProxy<unsigned short>", 2499, G__G__TreePlayer_214_0_10, (int) ('i'), 
G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPshortgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::TImpProxy<unsigned short>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TImpProxy<unsigned short>", 2625, G__G__TreePlayer_214_0_11, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLTImpProxylEunsignedsPchargR(void) {
   /* ROOT::TImpProxy<unsigned char> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPchargR));
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TImpProxy<unsigned char>",2353,G__G__TreePlayer_215_0_2, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPchargR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<unsigned char>",2353,G__G__TreePlayer_215_0_3, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPchargR), -1, 0, 2, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<unsigned char>",2353,G__G__TreePlayer_215_0_4, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPchargR), -1, 0, 3, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<unsigned char>",2353,G__G__TreePlayer_215_0_5, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPchargR), -1, 0, 4, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name C - - 10 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<unsigned char>",2353,G__G__TreePlayer_215_0_6, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPchargR), -1, 0, 5, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director U 'ROOT::TBranchProxy' - 0 - parent "
"C - - 10 - name C - - 10 '0' top "
"C - - 10 '0' mid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator unsigned char",2215,G__G__TreePlayer_215_0_7, 98, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<unsigned char>",2353,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPchargR), -1, 0, 1, 1, 4, 0, "b - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPchargR), -1, 1, 1, 1, 4, 0, "b - - 0 - -", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TImpProxy<unsigned char>", 2353, G__G__TreePlayer_215_0_10, (int) ('i'), 
G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPchargR), -1, 0, 1, 1, 1, 0, "u 'ROOT::TImpProxy<unsigned char>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TImpProxy<unsigned char>", 2479, G__G__TreePlayer_215_0_11, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLTImpProxylEintgR(void) {
   /* ROOT::TImpProxy<int> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEintgR));
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TImpProxy<int>",1377,G__G__TreePlayer_216_0_2, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEintgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<int>",1377,G__G__TreePlayer_216_0_3, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEintgR), -1, 0, 2, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<int>",1377,G__G__TreePlayer_216_0_4, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEintgR), -1, 0, 3, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<int>",1377,G__G__TreePlayer_216_0_5, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEintgR), -1, 0, 4, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name C - - 10 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<int>",1377,G__G__TreePlayer_216_0_6, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEintgR), -1, 0, 5, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director U 'ROOT::TBranchProxy' - 0 - parent "
"C - - 10 - name C - - 10 '0' top "
"C - - 10 '0' mid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator int",1239,G__G__TreePlayer_216_0_7, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<int>",1377,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEintgR), -1, 0, 1, 1, 4, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEintgR), -1, 1, 1, 1, 4, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TImpProxy<int>", 1377, G__G__TreePlayer_216_0_10, (int) ('i'), G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEintgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::TImpProxy<int>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TImpProxy<int>", 1503, G__G__TreePlayer_216_0_11, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLTImpProxylElonggR(void) {
   /* ROOT::TImpProxy<long> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylElonggR));
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TImpProxy<long>",1478,G__G__TreePlayer_217_0_2, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylElonggR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<long>",1478,G__G__TreePlayer_217_0_3, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylElonggR), -1, 0, 2, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<long>",1478,G__G__TreePlayer_217_0_4, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylElonggR), -1, 0, 3, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<long>",1478,G__G__TreePlayer_217_0_5, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylElonggR), -1, 0, 4, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name C - - 10 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<long>",1478,G__G__TreePlayer_217_0_6, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylElonggR), -1, 0, 5, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director U 'ROOT::TBranchProxy' - 0 - parent "
"C - - 10 - name C - - 10 '0' top "
"C - - 10 '0' mid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator long",1340,G__G__TreePlayer_217_0_7, 108, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<long>",1478,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylElonggR), -1, 0, 1, 1, 4, 0, "l - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylElonggR), -1, 1, 1, 1, 4, 0, "l - - 0 - -", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TImpProxy<long>", 1478, G__G__TreePlayer_217_0_10, (int) ('i'), G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylElonggR), -1, 0, 1, 1, 1, 0, "u 'ROOT::TImpProxy<long>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TImpProxy<long>", 1604, G__G__TreePlayer_217_0_11, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLTImpProxylElongsPlonggR(void) {
   /* ROOT::TImpProxy<long long> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylElongsPlonggR));
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TImpProxy<long long>",1942,G__G__TreePlayer_218_0_2, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylElongsPlonggR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<long long>",1942,G__G__TreePlayer_218_0_3, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylElongsPlonggR), -1, 0, 2, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<long long>",1942,G__G__TreePlayer_218_0_4, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylElongsPlonggR), -1, 0, 3, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<long long>",1942,G__G__TreePlayer_218_0_5, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylElongsPlonggR), -1, 0, 4, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name C - - 10 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<long long>",1942,G__G__TreePlayer_218_0_6, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylElongsPlonggR), -1, 0, 5, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director U 'ROOT::TBranchProxy' - 0 - parent "
"C - - 10 - name C - - 10 '0' top "
"C - - 10 '0' mid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator long long",1804,G__G__TreePlayer_218_0_7, 110, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<long long>",1942,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylElongsPlonggR), -1, 0, 1, 1, 4, 0, "n - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylElongsPlonggR), -1, 1, 1, 1, 4, 0, "n - - 0 - -", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TImpProxy<long long>", 1942, G__G__TreePlayer_218_0_10, (int) ('i'), G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylElongsPlonggR), -1, 0, 1, 1, 1, 0, "u 'ROOT::TImpProxy<long long>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TImpProxy<long long>", 2068, G__G__TreePlayer_218_0_11, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLTImpProxylEshortgR(void) {
   /* ROOT::TImpProxy<short> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEshortgR));
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TImpProxy<short>",1606,G__G__TreePlayer_219_0_2, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEshortgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<short>",1606,G__G__TreePlayer_219_0_3, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEshortgR), -1, 0, 2, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<short>",1606,G__G__TreePlayer_219_0_4, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEshortgR), -1, 0, 3, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<short>",1606,G__G__TreePlayer_219_0_5, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEshortgR), -1, 0, 4, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name C - - 10 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<short>",1606,G__G__TreePlayer_219_0_6, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEshortgR), -1, 0, 5, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director U 'ROOT::TBranchProxy' - 0 - parent "
"C - - 10 - name C - - 10 '0' top "
"C - - 10 '0' mid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator short",1468,G__G__TreePlayer_219_0_7, 115, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<short>",1606,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEshortgR), -1, 0, 1, 1, 4, 0, "s - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEshortgR), -1, 1, 1, 1, 4, 0, "s - - 0 - -", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TImpProxy<short>", 1606, G__G__TreePlayer_219_0_10, (int) ('i'), G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEshortgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::TImpProxy<short>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TImpProxy<short>", 1732, G__G__TreePlayer_219_0_11, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLTImpProxylEchargR(void) {
   /* ROOT::TImpProxy<char> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEchargR));
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TImpProxy<char>",1460,G__G__TreePlayer_220_0_2, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEchargR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<char>",1460,G__G__TreePlayer_220_0_3, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEchargR), -1, 0, 2, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<char>",1460,G__G__TreePlayer_220_0_4, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEchargR), -1, 0, 3, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<char>",1460,G__G__TreePlayer_220_0_5, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEchargR), -1, 0, 4, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name C - - 10 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<char>",1460,G__G__TreePlayer_220_0_6, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEchargR), -1, 0, 5, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director U 'ROOT::TBranchProxy' - 0 - parent "
"C - - 10 - name C - - 10 '0' top "
"C - - 10 '0' mid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator char",1322,G__G__TreePlayer_220_0_7, 99, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<char>",1460,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEchargR), -1, 0, 1, 1, 4, 0, "c - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEchargR), -1, 1, 1, 1, 4, 0, "c - - 0 - -", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TImpProxy<char>", 1460, G__G__TreePlayer_220_0_10, (int) ('i'), G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEchargR), -1, 0, 1, 1, 1, 0, "u 'ROOT::TImpProxy<char>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TImpProxy<char>", 1586, G__G__TreePlayer_220_0_11, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLTImpProxylEboolgR(void) {
   /* ROOT::TImpProxy<bool> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEboolgR));
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TImpProxy<bool>",1474,G__G__TreePlayer_221_0_2, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEboolgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<bool>",1474,G__G__TreePlayer_221_0_3, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEboolgR), -1, 0, 2, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<bool>",1474,G__G__TreePlayer_221_0_4, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEboolgR), -1, 0, 3, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<bool>",1474,G__G__TreePlayer_221_0_5, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEboolgR), -1, 0, 4, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name C - - 10 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<bool>",1474,G__G__TreePlayer_221_0_6, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEboolgR), -1, 0, 5, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director U 'ROOT::TBranchProxy' - 0 - parent "
"C - - 10 - name C - - 10 '0' top "
"C - - 10 '0' mid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator bool",1336,G__G__TreePlayer_221_0_7, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TImpProxy<bool>",1474,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEboolgR), -1, 0, 1, 1, 4, 0, "g - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEboolgR), -1, 1, 1, 1, 4, 0, "g - - 0 - -", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TImpProxy<bool>", 1474, G__G__TreePlayer_221_0_10, (int) ('i'), G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEboolgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::TImpProxy<bool>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TImpProxy<bool>", 1600, G__G__TreePlayer_221_0_11, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR(void) {
   /* ROOT::TArrayProxy<ROOT::TArrayType<double,0> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR));
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<double,0> >",3597,G__G__TreePlayer_223_0_1, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<double,0> >",3597,G__G__TreePlayer_223_0_2, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR), -1, 0, 2, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<double,0> >",3597,G__G__TreePlayer_223_0_3, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR), -1, 0, 3, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<double,0> >",3597,G__G__TreePlayer_223_0_4, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR), -1, 0, 4, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name C - - 10 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<double,0> >",3597,G__G__TreePlayer_223_0_5, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR), -1, 0, 5, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director U 'ROOT::TBranchProxy' - 0 - parent "
"C - - 10 - name C - - 10 '0' top "
"C - - 10 '0' mid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("At",181,G__G__TreePlayer_223_0_7, 100, -1, G__defined_typename("ROOT::TArrayProxy<ROOT::TArrayType<double,0> >::array_t"), 1, 1, 1, 1, 1, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_223_0_8, 100, -1, G__defined_typename("ROOT::TArrayProxy<ROOT::TArrayType<double,0> >::array_t"), 1, 1, 1, 1, 1, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_223_0_9, 100, -1, G__defined_typename("ROOT::TArrayProxy<ROOT::TArrayType<double,0> >::array_t"), 1, 1, 1, 1, 1, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<double,0> >", 3597, G__G__TreePlayer_223_0_10, (int) ('i'), 
G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::TArrayProxy<ROOT::TArrayType<double,0> >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArrayProxy<ROOT::TArrayType<double,0> >", 3723, G__G__TreePlayer_223_0_11, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR(void) {
   /* ROOT::TArrayProxy<ROOT::TArrayType<float,0> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR));
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<float,0> >",3496,G__G__TreePlayer_227_0_1, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<float,0> >",3496,G__G__TreePlayer_227_0_2, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR), -1, 0, 2, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<float,0> >",3496,G__G__TreePlayer_227_0_3, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR), -1, 0, 3, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<float,0> >",3496,G__G__TreePlayer_227_0_4, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR), -1, 0, 4, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name C - - 10 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<float,0> >",3496,G__G__TreePlayer_227_0_5, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR), -1, 0, 5, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director U 'ROOT::TBranchProxy' - 0 - parent "
"C - - 10 - name C - - 10 '0' top "
"C - - 10 '0' mid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("At",181,G__G__TreePlayer_227_0_7, 102, -1, G__defined_typename("ROOT::TArrayProxy<ROOT::TArrayType<float,0> >::array_t"), 1, 1, 1, 1, 1, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_227_0_8, 102, -1, G__defined_typename("ROOT::TArrayProxy<ROOT::TArrayType<float,0> >::array_t"), 1, 1, 1, 1, 1, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_227_0_9, 102, -1, G__defined_typename("ROOT::TArrayProxy<ROOT::TArrayType<float,0> >::array_t"), 1, 1, 1, 1, 1, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<float,0> >", 3496, G__G__TreePlayer_227_0_10, (int) ('i'), 
G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::TArrayProxy<ROOT::TArrayType<float,0> >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArrayProxy<ROOT::TArrayType<float,0> >", 3622, G__G__TreePlayer_227_0_11, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR(void) {
   /* ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR));
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<unsigned int,0> >",4186,G__G__TreePlayer_231_0_1, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<unsigned int,0> >",4186,G__G__TreePlayer_231_0_2, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR), -1, 0, 2, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<unsigned int,0> >",4186,G__G__TreePlayer_231_0_3, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR), -1, 0, 3, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<unsigned int,0> >",4186,G__G__TreePlayer_231_0_4, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR), -1, 0, 4, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name C - - 10 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<unsigned int,0> >",4186,G__G__TreePlayer_231_0_5, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR), -1, 0, 5, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director U 'ROOT::TBranchProxy' - 0 - parent "
"C - - 10 - name C - - 10 '0' top "
"C - - 10 '0' mid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("At",181,G__G__TreePlayer_231_0_7, 104, -1, G__defined_typename("ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >::array_t"), 1, 1, 1, 1, 1, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_231_0_8, 104, -1, G__defined_typename("ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >::array_t"), 1, 1, 1, 1, 1, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_231_0_9, 104, -1, G__defined_typename("ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >::array_t"), 1, 1, 1, 1, 1, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<unsigned int,0> >", 4186, G__G__TreePlayer_231_0_10, (int) ('i'), 
G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArrayProxy<ROOT::TArrayType<unsigned int,0> >", 4312, G__G__TreePlayer_231_0_11, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR(void) {
   /* ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR));
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<unsigned long,0> >",4287,G__G__TreePlayer_233_0_1, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<unsigned long,0> >",4287,G__G__TreePlayer_233_0_2, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR), -1, 0, 2, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<unsigned long,0> >",4287,G__G__TreePlayer_233_0_3, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR), -1, 0, 3, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<unsigned long,0> >",4287,G__G__TreePlayer_233_0_4, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR), -1, 0, 4, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name C - - 10 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<unsigned long,0> >",4287,G__G__TreePlayer_233_0_5, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR), -1, 0, 5, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director U 'ROOT::TBranchProxy' - 0 - parent "
"C - - 10 - name C - - 10 '0' top "
"C - - 10 '0' mid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("At",181,G__G__TreePlayer_233_0_7, 107, -1, G__defined_typename("ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >::array_t"), 1, 1, 1, 1, 1, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_233_0_8, 107, -1, G__defined_typename("ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >::array_t"), 1, 1, 1, 1, 1, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_233_0_9, 107, -1, G__defined_typename("ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >::array_t"), 1, 1, 1, 1, 1, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<unsigned long,0> >", 4287, G__G__TreePlayer_233_0_10, (int) ('i'), 
G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArrayProxy<ROOT::TArrayType<unsigned long,0> >", 4413, G__G__TreePlayer_233_0_11, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR(void) {
   /* ROOT::TArrayProxy<ROOT::TArrayType<unsigned long long,0> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR));
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<unsigned long long,0> >",4751,G__G__TreePlayer_235_0_1, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<unsigned long long,0> >",4751,G__G__TreePlayer_235_0_2, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR), -1, 0, 2, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<unsigned long long,0> >",4751,G__G__TreePlayer_235_0_3, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR), -1, 0, 3, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<unsigned long long,0> >",4751,G__G__TreePlayer_235_0_4, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR), -1, 0, 4, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name C - - 10 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<unsigned long long,0> >",4751,G__G__TreePlayer_235_0_5, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR), -1, 0, 5, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director U 'ROOT::TBranchProxy' - 0 - parent "
"C - - 10 - name C - - 10 '0' top "
"C - - 10 '0' mid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("At",181,G__G__TreePlayer_235_0_7, 109, -1, G__defined_typename("ROOT::TArrayProxy<ROOT::TArrayType<unsigned long long,0> >::array_t"), 1, 1, 1, 1, 1, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_235_0_8, 109, -1, G__defined_typename("ROOT::TArrayProxy<ROOT::TArrayType<unsigned long long,0> >::array_t"), 1, 1, 1, 1, 1, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_235_0_9, 109, -1, G__defined_typename("ROOT::TArrayProxy<ROOT::TArrayType<unsigned long long,0> >::array_t"), 1, 1, 1, 1, 1, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<unsigned long long,0> >", 4751, G__G__TreePlayer_235_0_10, (int) ('i'), 
G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::TArrayProxy<ROOT::TArrayType<unsigned long long,0> >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArrayProxy<ROOT::TArrayType<unsigned long long,0> >", 4877, G__G__TreePlayer_235_0_11, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR(void) {
   /* ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR));
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<unsigned short,0> >",4415,G__G__TreePlayer_237_0_1, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<unsigned short,0> >",4415,G__G__TreePlayer_237_0_2, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR), -1, 0, 2, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<unsigned short,0> >",4415,G__G__TreePlayer_237_0_3, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR), -1, 0, 3, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<unsigned short,0> >",4415,G__G__TreePlayer_237_0_4, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR), -1, 0, 4, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name C - - 10 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<unsigned short,0> >",4415,G__G__TreePlayer_237_0_5, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR), -1, 0, 5, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director U 'ROOT::TBranchProxy' - 0 - parent "
"C - - 10 - name C - - 10 '0' top "
"C - - 10 '0' mid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("At",181,G__G__TreePlayer_237_0_7, 114, -1, G__defined_typename("ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >::array_t"), 1, 1, 1, 1, 1, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_237_0_8, 114, -1, G__defined_typename("ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >::array_t"), 1, 1, 1, 1, 1, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_237_0_9, 114, -1, G__defined_typename("ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >::array_t"), 1, 1, 1, 1, 1, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<unsigned short,0> >", 4415, G__G__TreePlayer_237_0_10, (int) ('i'), 
G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArrayProxy<ROOT::TArrayType<unsigned short,0> >", 4541, G__G__TreePlayer_237_0_11, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR(void) {
   /* ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR));
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<unsigned char,0> >",4269,G__G__TreePlayer_239_0_1, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<unsigned char,0> >",4269,G__G__TreePlayer_239_0_2, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR), -1, 0, 2, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<unsigned char,0> >",4269,G__G__TreePlayer_239_0_3, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR), -1, 0, 3, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<unsigned char,0> >",4269,G__G__TreePlayer_239_0_4, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR), -1, 0, 4, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name C - - 10 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<unsigned char,0> >",4269,G__G__TreePlayer_239_0_5, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR), -1, 0, 5, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director U 'ROOT::TBranchProxy' - 0 - parent "
"C - - 10 - name C - - 10 '0' top "
"C - - 10 '0' mid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("At",181,G__G__TreePlayer_239_0_7, 98, -1, G__defined_typename("ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >::array_t"), 1, 1, 1, 1, 1, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_239_0_8, 98, -1, G__defined_typename("ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >::array_t"), 1, 1, 1, 1, 1, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_239_0_9, 98, -1, G__defined_typename("ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >::array_t"), 1, 1, 1, 1, 1, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<unsigned char,0> >", 4269, G__G__TreePlayer_239_0_10, (int) ('i'), 
G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArrayProxy<ROOT::TArrayType<unsigned char,0> >", 4395, G__G__TreePlayer_239_0_11, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR(void) {
   /* ROOT::TArrayProxy<ROOT::TArrayType<int,0> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR));
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<int,0> >",3293,G__G__TreePlayer_241_0_1, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<int,0> >",3293,G__G__TreePlayer_241_0_2, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR), -1, 0, 2, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<int,0> >",3293,G__G__TreePlayer_241_0_3, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR), -1, 0, 3, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<int,0> >",3293,G__G__TreePlayer_241_0_4, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR), -1, 0, 4, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name C - - 10 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<int,0> >",3293,G__G__TreePlayer_241_0_5, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR), -1, 0, 5, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director U 'ROOT::TBranchProxy' - 0 - parent "
"C - - 10 - name C - - 10 '0' top "
"C - - 10 '0' mid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("At",181,G__G__TreePlayer_241_0_7, 105, -1, G__defined_typename("ROOT::TArrayProxy<ROOT::TArrayType<int,0> >::array_t"), 1, 1, 1, 1, 1, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_241_0_8, 105, -1, G__defined_typename("ROOT::TArrayProxy<ROOT::TArrayType<int,0> >::array_t"), 1, 1, 1, 1, 1, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_241_0_9, 105, -1, G__defined_typename("ROOT::TArrayProxy<ROOT::TArrayType<int,0> >::array_t"), 1, 1, 1, 1, 1, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<int,0> >", 3293, G__G__TreePlayer_241_0_10, (int) ('i'), 
G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::TArrayProxy<ROOT::TArrayType<int,0> >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArrayProxy<ROOT::TArrayType<int,0> >", 3419, G__G__TreePlayer_241_0_11, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR(void) {
   /* ROOT::TArrayProxy<ROOT::TArrayType<long,0> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR));
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<long,0> >",3394,G__G__TreePlayer_243_0_1, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<long,0> >",3394,G__G__TreePlayer_243_0_2, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR), -1, 0, 2, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<long,0> >",3394,G__G__TreePlayer_243_0_3, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR), -1, 0, 3, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<long,0> >",3394,G__G__TreePlayer_243_0_4, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR), -1, 0, 4, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name C - - 10 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<long,0> >",3394,G__G__TreePlayer_243_0_5, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR), -1, 0, 5, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director U 'ROOT::TBranchProxy' - 0 - parent "
"C - - 10 - name C - - 10 '0' top "
"C - - 10 '0' mid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("At",181,G__G__TreePlayer_243_0_7, 108, -1, G__defined_typename("ROOT::TArrayProxy<ROOT::TArrayType<long,0> >::array_t"), 1, 1, 1, 1, 1, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_243_0_8, 108, -1, G__defined_typename("ROOT::TArrayProxy<ROOT::TArrayType<long,0> >::array_t"), 1, 1, 1, 1, 1, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_243_0_9, 108, -1, G__defined_typename("ROOT::TArrayProxy<ROOT::TArrayType<long,0> >::array_t"), 1, 1, 1, 1, 1, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<long,0> >", 3394, G__G__TreePlayer_243_0_10, (int) ('i'), 
G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::TArrayProxy<ROOT::TArrayType<long,0> >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArrayProxy<ROOT::TArrayType<long,0> >", 3520, G__G__TreePlayer_243_0_11, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR(void) {
   /* ROOT::TArrayProxy<ROOT::TArrayType<long long,0> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR));
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<long long,0> >",3858,G__G__TreePlayer_245_0_1, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<long long,0> >",3858,G__G__TreePlayer_245_0_2, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR), -1, 0, 2, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<long long,0> >",3858,G__G__TreePlayer_245_0_3, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR), -1, 0, 3, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<long long,0> >",3858,G__G__TreePlayer_245_0_4, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR), -1, 0, 4, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name C - - 10 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<long long,0> >",3858,G__G__TreePlayer_245_0_5, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR), -1, 0, 5, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director U 'ROOT::TBranchProxy' - 0 - parent "
"C - - 10 - name C - - 10 '0' top "
"C - - 10 '0' mid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("At",181,G__G__TreePlayer_245_0_7, 110, -1, G__defined_typename("ROOT::TArrayProxy<ROOT::TArrayType<long long,0> >::array_t"), 1, 1, 1, 1, 1, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_245_0_8, 110, -1, G__defined_typename("ROOT::TArrayProxy<ROOT::TArrayType<long long,0> >::array_t"), 1, 1, 1, 1, 1, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_245_0_9, 110, -1, G__defined_typename("ROOT::TArrayProxy<ROOT::TArrayType<long long,0> >::array_t"), 1, 1, 1, 1, 1, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<long long,0> >", 3858, G__G__TreePlayer_245_0_10, (int) ('i'), 
G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::TArrayProxy<ROOT::TArrayType<long long,0> >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArrayProxy<ROOT::TArrayType<long long,0> >", 3984, G__G__TreePlayer_245_0_11, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR(void) {
   /* ROOT::TArrayProxy<ROOT::TArrayType<bool,0> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR));
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<bool,0> >",3390,G__G__TreePlayer_247_0_1, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<bool,0> >",3390,G__G__TreePlayer_247_0_2, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR), -1, 0, 2, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<bool,0> >",3390,G__G__TreePlayer_247_0_3, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR), -1, 0, 3, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<bool,0> >",3390,G__G__TreePlayer_247_0_4, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR), -1, 0, 4, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name C - - 10 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<bool,0> >",3390,G__G__TreePlayer_247_0_5, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR), -1, 0, 5, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director U 'ROOT::TBranchProxy' - 0 - parent "
"C - - 10 - name C - - 10 '0' top "
"C - - 10 '0' mid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("At",181,G__G__TreePlayer_247_0_7, 103, -1, G__defined_typename("ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >::array_t"), 1, 1, 1, 1, 1, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_247_0_8, 103, -1, G__defined_typename("ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >::array_t"), 1, 1, 1, 1, 1, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_247_0_9, 103, -1, G__defined_typename("ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >::array_t"), 1, 1, 1, 1, 1, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<bool,0> >", 3390, G__G__TreePlayer_247_0_10, (int) ('i'), 
G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArrayProxy<ROOT::TArrayType<bool,0> >", 3516, G__G__TreePlayer_247_0_11, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLTClaImpProxylEdoublegR(void) {
   /* ROOT::TClaImpProxy<double> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEdoublegR));
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TClaImpProxy<double>",1953,G__G__TreePlayer_248_0_2, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEdoublegR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<double>",1953,G__G__TreePlayer_248_0_3, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEdoublegR), -1, 0, 2, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<double>",1953,G__G__TreePlayer_248_0_4, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEdoublegR), -1, 0, 3, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<double>",1953,G__G__TreePlayer_248_0_5, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEdoublegR), -1, 0, 4, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name C - - 10 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<double>",1953,G__G__TreePlayer_248_0_6, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEdoublegR), -1, 0, 5, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director U 'ROOT::TBranchProxy' - 0 - parent "
"C - - 10 - name C - - 10 '0' top "
"C - - 10 '0' mid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__TreePlayer_248_0_7, 100, -1, -1, 1, 1, 1, 1, 1, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_248_0_8, 100, -1, -1, 1, 1, 1, 1, 1, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_248_0_9, 100, -1, -1, 1, 1, 1, 1, 1, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<double>",1953,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEdoublegR), -1, 0, 1, 1, 4, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEdoublegR), -1, 1, 1, 1, 4, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TClaImpProxy<double>", 1953, G__G__TreePlayer_248_0_12, (int) ('i'), G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEdoublegR), -1, 0, 1, 1, 1, 0, "u 'ROOT::TClaImpProxy<double>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TClaImpProxy<double>", 2079, G__G__TreePlayer_248_0_13, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLTClaImpProxylEfloatgR(void) {
   /* ROOT::TClaImpProxy<float> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEfloatgR));
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TClaImpProxy<float>",1852,G__G__TreePlayer_250_0_2, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEfloatgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<float>",1852,G__G__TreePlayer_250_0_3, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEfloatgR), -1, 0, 2, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<float>",1852,G__G__TreePlayer_250_0_4, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEfloatgR), -1, 0, 3, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<float>",1852,G__G__TreePlayer_250_0_5, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEfloatgR), -1, 0, 4, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name C - - 10 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<float>",1852,G__G__TreePlayer_250_0_6, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEfloatgR), -1, 0, 5, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director U 'ROOT::TBranchProxy' - 0 - parent "
"C - - 10 - name C - - 10 '0' top "
"C - - 10 '0' mid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__TreePlayer_250_0_7, 102, -1, -1, 1, 1, 1, 1, 1, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_250_0_8, 102, -1, -1, 1, 1, 1, 1, 1, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_250_0_9, 102, -1, -1, 1, 1, 1, 1, 1, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<float>",1852,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEfloatgR), -1, 0, 1, 1, 4, 0, "f - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEfloatgR), -1, 1, 1, 1, 4, 0, "f - - 0 - -", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TClaImpProxy<float>", 1852, G__G__TreePlayer_250_0_12, (int) ('i'), G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEfloatgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::TClaImpProxy<float>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TClaImpProxy<float>", 1978, G__G__TreePlayer_250_0_13, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLTClaImpProxylEunsignedsPintgR(void) {
   /* ROOT::TClaImpProxy<unsigned int> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPintgR));
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TClaImpProxy<unsigned int>",2542,G__G__TreePlayer_252_0_2, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPintgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<unsigned int>",2542,G__G__TreePlayer_252_0_3, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPintgR), -1, 0, 2, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<unsigned int>",2542,G__G__TreePlayer_252_0_4, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPintgR), -1, 0, 3, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<unsigned int>",2542,G__G__TreePlayer_252_0_5, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPintgR), -1, 0, 4, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name C - - 10 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<unsigned int>",2542,G__G__TreePlayer_252_0_6, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPintgR), -1, 0, 5, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director U 'ROOT::TBranchProxy' - 0 - parent "
"C - - 10 - name C - - 10 '0' top "
"C - - 10 '0' mid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__TreePlayer_252_0_7, 104, -1, -1, 1, 1, 1, 1, 1, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_252_0_8, 104, -1, -1, 1, 1, 1, 1, 1, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_252_0_9, 104, -1, -1, 1, 1, 1, 1, 1, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<unsigned int>",2542,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPintgR), -1, 0, 1, 1, 4, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPintgR), -1, 1, 1, 1, 4, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TClaImpProxy<unsigned int>", 2542, G__G__TreePlayer_252_0_12, (int) ('i'), 
G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPintgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::TClaImpProxy<unsigned int>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TClaImpProxy<unsigned int>", 2668, G__G__TreePlayer_252_0_13, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLTClaImpProxylEunsignedsPlonggR(void) {
   /* ROOT::TClaImpProxy<unsigned long> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPlonggR));
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TClaImpProxy<unsigned long>",2643,G__G__TreePlayer_253_0_2, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPlonggR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<unsigned long>",2643,G__G__TreePlayer_253_0_3, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPlonggR), -1, 0, 2, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<unsigned long>",2643,G__G__TreePlayer_253_0_4, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPlonggR), -1, 0, 3, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<unsigned long>",2643,G__G__TreePlayer_253_0_5, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPlonggR), -1, 0, 4, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name C - - 10 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<unsigned long>",2643,G__G__TreePlayer_253_0_6, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPlonggR), -1, 0, 5, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director U 'ROOT::TBranchProxy' - 0 - parent "
"C - - 10 - name C - - 10 '0' top "
"C - - 10 '0' mid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__TreePlayer_253_0_7, 107, -1, -1, 1, 1, 1, 1, 1, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_253_0_8, 107, -1, -1, 1, 1, 1, 1, 1, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_253_0_9, 107, -1, -1, 1, 1, 1, 1, 1, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<unsigned long>",2643,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPlonggR), -1, 0, 1, 1, 4, 0, "k - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPlonggR), -1, 1, 1, 1, 4, 0, "k - - 0 - -", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TClaImpProxy<unsigned long>", 2643, G__G__TreePlayer_253_0_12, (int) ('i'), 
G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPlonggR), -1, 0, 1, 1, 1, 0, "u 'ROOT::TClaImpProxy<unsigned long>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TClaImpProxy<unsigned long>", 2769, G__G__TreePlayer_253_0_13, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLTClaImpProxylEunsignedsPlongsPlonggR(void) {
   /* ROOT::TClaImpProxy<unsigned long long> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPlongsPlonggR));
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TClaImpProxy<unsigned long long>",3107,G__G__TreePlayer_254_0_2, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPlongsPlonggR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<unsigned long long>",3107,G__G__TreePlayer_254_0_3, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPlongsPlonggR), -1, 0, 2, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<unsigned long long>",3107,G__G__TreePlayer_254_0_4, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPlongsPlonggR), -1, 0, 3, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<unsigned long long>",3107,G__G__TreePlayer_254_0_5, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPlongsPlonggR), -1, 0, 4, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name C - - 10 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<unsigned long long>",3107,G__G__TreePlayer_254_0_6, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPlongsPlonggR), -1, 0, 5, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director U 'ROOT::TBranchProxy' - 0 - parent "
"C - - 10 - name C - - 10 '0' top "
"C - - 10 '0' mid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__TreePlayer_254_0_7, 109, -1, -1, 1, 1, 1, 1, 1, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_254_0_8, 109, -1, -1, 1, 1, 1, 1, 1, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_254_0_9, 109, -1, -1, 1, 1, 1, 1, 1, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<unsigned long long>",3107,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPlongsPlonggR), -1, 0, 1, 1, 4, 0, "m - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPlongsPlonggR), -1, 1, 1, 1, 4, 0, "m - - 0 - -", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TClaImpProxy<unsigned long long>", 3107, G__G__TreePlayer_254_0_12, (int) ('i'), 
G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPlongsPlonggR), -1, 0, 1, 1, 1, 0, "u 'ROOT::TClaImpProxy<unsigned long long>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TClaImpProxy<unsigned long long>", 3233, G__G__TreePlayer_254_0_13, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLTClaImpProxylEunsignedsPshortgR(void) {
   /* ROOT::TClaImpProxy<unsigned short> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPshortgR));
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TClaImpProxy<unsigned short>",2771,G__G__TreePlayer_255_0_2, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPshortgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<unsigned short>",2771,G__G__TreePlayer_255_0_3, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPshortgR), -1, 0, 2, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<unsigned short>",2771,G__G__TreePlayer_255_0_4, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPshortgR), -1, 0, 3, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<unsigned short>",2771,G__G__TreePlayer_255_0_5, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPshortgR), -1, 0, 4, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name C - - 10 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<unsigned short>",2771,G__G__TreePlayer_255_0_6, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPshortgR), -1, 0, 5, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director U 'ROOT::TBranchProxy' - 0 - parent "
"C - - 10 - name C - - 10 '0' top "
"C - - 10 '0' mid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__TreePlayer_255_0_7, 114, -1, -1, 1, 1, 1, 1, 1, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_255_0_8, 114, -1, -1, 1, 1, 1, 1, 1, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_255_0_9, 114, -1, -1, 1, 1, 1, 1, 1, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<unsigned short>",2771,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPshortgR), -1, 0, 1, 1, 4, 0, "r - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPshortgR), -1, 1, 1, 1, 4, 0, "r - - 0 - -", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TClaImpProxy<unsigned short>", 2771, G__G__TreePlayer_255_0_12, (int) ('i'), 
G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPshortgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::TClaImpProxy<unsigned short>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TClaImpProxy<unsigned short>", 2897, G__G__TreePlayer_255_0_13, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLTClaImpProxylEunsignedsPchargR(void) {
   /* ROOT::TClaImpProxy<unsigned char> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPchargR));
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TClaImpProxy<unsigned char>",2625,G__G__TreePlayer_256_0_2, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPchargR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<unsigned char>",2625,G__G__TreePlayer_256_0_3, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPchargR), -1, 0, 2, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<unsigned char>",2625,G__G__TreePlayer_256_0_4, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPchargR), -1, 0, 3, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<unsigned char>",2625,G__G__TreePlayer_256_0_5, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPchargR), -1, 0, 4, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name C - - 10 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<unsigned char>",2625,G__G__TreePlayer_256_0_6, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPchargR), -1, 0, 5, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director U 'ROOT::TBranchProxy' - 0 - parent "
"C - - 10 - name C - - 10 '0' top "
"C - - 10 '0' mid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__TreePlayer_256_0_7, 98, -1, -1, 1, 1, 1, 1, 1, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_256_0_8, 98, -1, -1, 1, 1, 1, 1, 1, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_256_0_9, 98, -1, -1, 1, 1, 1, 1, 1, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<unsigned char>",2625,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPchargR), -1, 0, 1, 1, 4, 0, "b - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPchargR), -1, 1, 1, 1, 4, 0, "b - - 0 - -", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TClaImpProxy<unsigned char>", 2625, G__G__TreePlayer_256_0_12, (int) ('i'), 
G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPchargR), -1, 0, 1, 1, 1, 0, "u 'ROOT::TClaImpProxy<unsigned char>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TClaImpProxy<unsigned char>", 2751, G__G__TreePlayer_256_0_13, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLTClaImpProxylEintgR(void) {
   /* ROOT::TClaImpProxy<int> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEintgR));
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TClaImpProxy<int>",1649,G__G__TreePlayer_257_0_2, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEintgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<int>",1649,G__G__TreePlayer_257_0_3, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEintgR), -1, 0, 2, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<int>",1649,G__G__TreePlayer_257_0_4, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEintgR), -1, 0, 3, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<int>",1649,G__G__TreePlayer_257_0_5, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEintgR), -1, 0, 4, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name C - - 10 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<int>",1649,G__G__TreePlayer_257_0_6, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEintgR), -1, 0, 5, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director U 'ROOT::TBranchProxy' - 0 - parent "
"C - - 10 - name C - - 10 '0' top "
"C - - 10 '0' mid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__TreePlayer_257_0_7, 105, -1, -1, 1, 1, 1, 1, 1, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_257_0_8, 105, -1, -1, 1, 1, 1, 1, 1, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_257_0_9, 105, -1, -1, 1, 1, 1, 1, 1, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<int>",1649,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEintgR), -1, 0, 1, 1, 4, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEintgR), -1, 1, 1, 1, 4, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TClaImpProxy<int>", 1649, G__G__TreePlayer_257_0_12, (int) ('i'), G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEintgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::TClaImpProxy<int>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TClaImpProxy<int>", 1775, G__G__TreePlayer_257_0_13, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLTClaImpProxylElonggR(void) {
   /* ROOT::TClaImpProxy<long> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylElonggR));
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TClaImpProxy<long>",1750,G__G__TreePlayer_258_0_2, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylElonggR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<long>",1750,G__G__TreePlayer_258_0_3, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylElonggR), -1, 0, 2, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<long>",1750,G__G__TreePlayer_258_0_4, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylElonggR), -1, 0, 3, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<long>",1750,G__G__TreePlayer_258_0_5, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylElonggR), -1, 0, 4, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name C - - 10 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<long>",1750,G__G__TreePlayer_258_0_6, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylElonggR), -1, 0, 5, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director U 'ROOT::TBranchProxy' - 0 - parent "
"C - - 10 - name C - - 10 '0' top "
"C - - 10 '0' mid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__TreePlayer_258_0_7, 108, -1, -1, 1, 1, 1, 1, 1, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_258_0_8, 108, -1, -1, 1, 1, 1, 1, 1, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_258_0_9, 108, -1, -1, 1, 1, 1, 1, 1, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<long>",1750,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylElonggR), -1, 0, 1, 1, 4, 0, "l - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylElonggR), -1, 1, 1, 1, 4, 0, "l - - 0 - -", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TClaImpProxy<long>", 1750, G__G__TreePlayer_258_0_12, (int) ('i'), G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylElonggR), -1, 0, 1, 1, 1, 0, "u 'ROOT::TClaImpProxy<long>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TClaImpProxy<long>", 1876, G__G__TreePlayer_258_0_13, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLTClaImpProxylElongsPlonggR(void) {
   /* ROOT::TClaImpProxy<long long> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylElongsPlonggR));
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TClaImpProxy<long long>",2214,G__G__TreePlayer_259_0_2, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylElongsPlonggR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<long long>",2214,G__G__TreePlayer_259_0_3, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylElongsPlonggR), -1, 0, 2, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<long long>",2214,G__G__TreePlayer_259_0_4, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylElongsPlonggR), -1, 0, 3, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<long long>",2214,G__G__TreePlayer_259_0_5, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylElongsPlonggR), -1, 0, 4, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name C - - 10 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<long long>",2214,G__G__TreePlayer_259_0_6, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylElongsPlonggR), -1, 0, 5, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director U 'ROOT::TBranchProxy' - 0 - parent "
"C - - 10 - name C - - 10 '0' top "
"C - - 10 '0' mid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__TreePlayer_259_0_7, 110, -1, -1, 1, 1, 1, 1, 1, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_259_0_8, 110, -1, -1, 1, 1, 1, 1, 1, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_259_0_9, 110, -1, -1, 1, 1, 1, 1, 1, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<long long>",2214,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylElongsPlonggR), -1, 0, 1, 1, 4, 0, "n - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylElongsPlonggR), -1, 1, 1, 1, 4, 0, "n - - 0 - -", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TClaImpProxy<long long>", 2214, G__G__TreePlayer_259_0_12, (int) ('i'), 
G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylElongsPlonggR), -1, 0, 1, 1, 1, 0, "u 'ROOT::TClaImpProxy<long long>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TClaImpProxy<long long>", 2340, G__G__TreePlayer_259_0_13, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLTClaImpProxylEshortgR(void) {
   /* ROOT::TClaImpProxy<short> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEshortgR));
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TClaImpProxy<short>",1878,G__G__TreePlayer_260_0_2, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEshortgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<short>",1878,G__G__TreePlayer_260_0_3, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEshortgR), -1, 0, 2, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<short>",1878,G__G__TreePlayer_260_0_4, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEshortgR), -1, 0, 3, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<short>",1878,G__G__TreePlayer_260_0_5, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEshortgR), -1, 0, 4, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name C - - 10 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<short>",1878,G__G__TreePlayer_260_0_6, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEshortgR), -1, 0, 5, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director U 'ROOT::TBranchProxy' - 0 - parent "
"C - - 10 - name C - - 10 '0' top "
"C - - 10 '0' mid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__TreePlayer_260_0_7, 115, -1, -1, 1, 1, 1, 1, 1, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_260_0_8, 115, -1, -1, 1, 1, 1, 1, 1, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_260_0_9, 115, -1, -1, 1, 1, 1, 1, 1, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<short>",1878,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEshortgR), -1, 0, 1, 1, 4, 0, "s - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEshortgR), -1, 1, 1, 1, 4, 0, "s - - 0 - -", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TClaImpProxy<short>", 1878, G__G__TreePlayer_260_0_12, (int) ('i'), G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEshortgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::TClaImpProxy<short>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TClaImpProxy<short>", 2004, G__G__TreePlayer_260_0_13, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLTClaImpProxylEchargR(void) {
   /* ROOT::TClaImpProxy<char> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEchargR));
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TClaImpProxy<char>",1732,G__G__TreePlayer_261_0_2, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEchargR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<char>",1732,G__G__TreePlayer_261_0_3, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEchargR), -1, 0, 2, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<char>",1732,G__G__TreePlayer_261_0_4, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEchargR), -1, 0, 3, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<char>",1732,G__G__TreePlayer_261_0_5, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEchargR), -1, 0, 4, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name C - - 10 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<char>",1732,G__G__TreePlayer_261_0_6, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEchargR), -1, 0, 5, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director U 'ROOT::TBranchProxy' - 0 - parent "
"C - - 10 - name C - - 10 '0' top "
"C - - 10 '0' mid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__TreePlayer_261_0_7, 99, -1, -1, 1, 1, 1, 1, 1, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_261_0_8, 99, -1, -1, 1, 1, 1, 1, 1, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_261_0_9, 99, -1, -1, 1, 1, 1, 1, 1, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<char>",1732,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEchargR), -1, 0, 1, 1, 4, 0, "c - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEchargR), -1, 1, 1, 1, 4, 0, "c - - 0 - -", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TClaImpProxy<char>", 1732, G__G__TreePlayer_261_0_12, (int) ('i'), G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEchargR), -1, 0, 1, 1, 1, 0, "u 'ROOT::TClaImpProxy<char>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TClaImpProxy<char>", 1858, G__G__TreePlayer_261_0_13, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLTClaImpProxylEboolgR(void) {
   /* ROOT::TClaImpProxy<bool> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEboolgR));
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TClaImpProxy<bool>",1746,G__G__TreePlayer_262_0_2, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEboolgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<bool>",1746,G__G__TreePlayer_262_0_3, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEboolgR), -1, 0, 2, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<bool>",1746,G__G__TreePlayer_262_0_4, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEboolgR), -1, 0, 3, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<bool>",1746,G__G__TreePlayer_262_0_5, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEboolgR), -1, 0, 4, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name C - - 10 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<bool>",1746,G__G__TreePlayer_262_0_6, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEboolgR), -1, 0, 5, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director U 'ROOT::TBranchProxy' - 0 - parent "
"C - - 10 - name C - - 10 '0' top "
"C - - 10 '0' mid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__TreePlayer_262_0_7, 103, -1, -1, 1, 1, 1, 1, 1, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_262_0_8, 103, -1, -1, 1, 1, 1, 1, 1, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_262_0_9, 103, -1, -1, 1, 1, 1, 1, 1, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaImpProxy<bool>",1746,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEboolgR), -1, 0, 1, 1, 4, 0, "g - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEboolgR), -1, 1, 1, 1, 4, 0, "g - - 0 - -", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TClaImpProxy<bool>", 1746, G__G__TreePlayer_262_0_12, (int) ('i'), G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEboolgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::TClaImpProxy<bool>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TClaImpProxy<bool>", 1872, G__G__TreePlayer_262_0_13, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR(void) {
   /* ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR));
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<double,0> >",3869,G__G__TreePlayer_263_0_2, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<double,0> >",3869,G__G__TreePlayer_263_0_3, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR), -1, 0, 2, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<double,0> >",3869,G__G__TreePlayer_263_0_4, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR), -1, 0, 3, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<double,0> >",3869,G__G__TreePlayer_263_0_5, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR), -1, 0, 4, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name C - - 10 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<double,0> >",3869,G__G__TreePlayer_263_0_6, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR), -1, 0, 5, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director U 'ROOT::TBranchProxy' - 0 - parent "
"C - - 10 - name C - - 10 '0' top "
"C - - 10 '0' mid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__TreePlayer_263_0_7, 68, -1, G__defined_typename("ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> >::array_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_263_0_8, 68, -1, G__defined_typename("ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> >::array_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_263_0_9, 68, -1, G__defined_typename("ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> >::array_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<double,0> >", 3869, G__G__TreePlayer_263_0_10, (int) ('i'), 
G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TClaArrayProxy<ROOT::TArrayType<double,0> >", 3995, G__G__TreePlayer_263_0_11, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR(void) {
   /* ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR));
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<float,0> >",3768,G__G__TreePlayer_265_0_2, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<float,0> >",3768,G__G__TreePlayer_265_0_3, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR), -1, 0, 2, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<float,0> >",3768,G__G__TreePlayer_265_0_4, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR), -1, 0, 3, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<float,0> >",3768,G__G__TreePlayer_265_0_5, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR), -1, 0, 4, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name C - - 10 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<float,0> >",3768,G__G__TreePlayer_265_0_6, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR), -1, 0, 5, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director U 'ROOT::TBranchProxy' - 0 - parent "
"C - - 10 - name C - - 10 '0' top "
"C - - 10 '0' mid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__TreePlayer_265_0_7, 70, -1, G__defined_typename("ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> >::array_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_265_0_8, 70, -1, G__defined_typename("ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> >::array_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_265_0_9, 70, -1, G__defined_typename("ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> >::array_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<float,0> >", 3768, G__G__TreePlayer_265_0_10, (int) ('i'), 
G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TClaArrayProxy<ROOT::TArrayType<float,0> >", 3894, G__G__TreePlayer_265_0_11, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR(void) {
   /* ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR));
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >",4458,G__G__TreePlayer_267_0_2, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >",4458,G__G__TreePlayer_267_0_3, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR), -1, 0, 2, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >",4458,G__G__TreePlayer_267_0_4, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR), -1, 0, 3, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >",4458,G__G__TreePlayer_267_0_5, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR), -1, 0, 4, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name C - - 10 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >",4458,G__G__TreePlayer_267_0_6, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR), -1, 0, 5, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director U 'ROOT::TBranchProxy' - 0 - parent "
"C - - 10 - name C - - 10 '0' top "
"C - - 10 '0' mid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__TreePlayer_267_0_7, 72, -1, G__defined_typename("ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >::array_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_267_0_8, 72, -1, G__defined_typename("ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >::array_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_267_0_9, 72, -1, G__defined_typename("ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >::array_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >", 4458, G__G__TreePlayer_267_0_10, (int) ('i'), 
G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >", 4584, G__G__TreePlayer_267_0_11, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR(void) {
   /* ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR));
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >",4559,G__G__TreePlayer_268_0_2, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >",4559,G__G__TreePlayer_268_0_3, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR), -1, 0, 2, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >",4559,G__G__TreePlayer_268_0_4, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR), -1, 0, 3, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >",4559,G__G__TreePlayer_268_0_5, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR), -1, 0, 4, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name C - - 10 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >",4559,G__G__TreePlayer_268_0_6, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR), -1, 0, 5, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director U 'ROOT::TBranchProxy' - 0 - parent "
"C - - 10 - name C - - 10 '0' top "
"C - - 10 '0' mid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__TreePlayer_268_0_7, 75, -1, G__defined_typename("ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >::array_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_268_0_8, 75, -1, G__defined_typename("ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >::array_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_268_0_9, 75, -1, G__defined_typename("ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >::array_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >", 4559, G__G__TreePlayer_268_0_10, (int) ('i'), 
G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >", 4685, G__G__TreePlayer_268_0_11, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR(void) {
   /* ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long long,0> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR));
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<unsigned long long,0> >",5023,G__G__TreePlayer_269_0_2, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<unsigned long long,0> >",5023,G__G__TreePlayer_269_0_3, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR), -1, 0, 2, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<unsigned long long,0> >",5023,G__G__TreePlayer_269_0_4, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR), -1, 0, 3, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<unsigned long long,0> >",5023,G__G__TreePlayer_269_0_5, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR), -1, 0, 4, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name C - - 10 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<unsigned long long,0> >",5023,G__G__TreePlayer_269_0_6, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR), -1, 0, 5, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director U 'ROOT::TBranchProxy' - 0 - parent "
"C - - 10 - name C - - 10 '0' top "
"C - - 10 '0' mid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__TreePlayer_269_0_7, 77, -1, G__defined_typename("ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long long,0> >::array_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_269_0_8, 77, -1, G__defined_typename("ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long long,0> >::array_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_269_0_9, 77, -1, G__defined_typename("ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long long,0> >::array_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<unsigned long long,0> >", 5023, G__G__TreePlayer_269_0_10, (int) ('i'), 
G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long long,0> >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TClaArrayProxy<ROOT::TArrayType<unsigned long long,0> >", 5149, G__G__TreePlayer_269_0_11, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR(void) {
   /* ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR));
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >",4687,G__G__TreePlayer_270_0_2, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >",4687,G__G__TreePlayer_270_0_3, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR), -1, 0, 2, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >",4687,G__G__TreePlayer_270_0_4, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR), -1, 0, 3, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >",4687,G__G__TreePlayer_270_0_5, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR), -1, 0, 4, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name C - - 10 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >",4687,G__G__TreePlayer_270_0_6, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR), -1, 0, 5, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director U 'ROOT::TBranchProxy' - 0 - parent "
"C - - 10 - name C - - 10 '0' top "
"C - - 10 '0' mid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__TreePlayer_270_0_7, 82, -1, G__defined_typename("ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >::array_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_270_0_8, 82, -1, G__defined_typename("ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >::array_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_270_0_9, 82, -1, G__defined_typename("ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >::array_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >", 4687, G__G__TreePlayer_270_0_10, (int) ('i'), 
G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >", 4813, G__G__TreePlayer_270_0_11, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR(void) {
   /* ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR));
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >",4541,G__G__TreePlayer_271_0_2, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >",4541,G__G__TreePlayer_271_0_3, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR), -1, 0, 2, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >",4541,G__G__TreePlayer_271_0_4, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR), -1, 0, 3, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >",4541,G__G__TreePlayer_271_0_5, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR), -1, 0, 4, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name C - - 10 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >",4541,G__G__TreePlayer_271_0_6, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR), -1, 0, 5, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director U 'ROOT::TBranchProxy' - 0 - parent "
"C - - 10 - name C - - 10 '0' top "
"C - - 10 '0' mid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__TreePlayer_271_0_7, 66, -1, G__defined_typename("ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >::array_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_271_0_8, 66, -1, G__defined_typename("ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >::array_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_271_0_9, 66, -1, G__defined_typename("ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >::array_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >", 4541, G__G__TreePlayer_271_0_10, (int) ('i'), 
G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >", 4667, G__G__TreePlayer_271_0_11, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR(void) {
   /* ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR));
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<int,0> >",3565,G__G__TreePlayer_272_0_2, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<int,0> >",3565,G__G__TreePlayer_272_0_3, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR), -1, 0, 2, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<int,0> >",3565,G__G__TreePlayer_272_0_4, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR), -1, 0, 3, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<int,0> >",3565,G__G__TreePlayer_272_0_5, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR), -1, 0, 4, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name C - - 10 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<int,0> >",3565,G__G__TreePlayer_272_0_6, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR), -1, 0, 5, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director U 'ROOT::TBranchProxy' - 0 - parent "
"C - - 10 - name C - - 10 '0' top "
"C - - 10 '0' mid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__TreePlayer_272_0_7, 73, -1, G__defined_typename("ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >::array_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_272_0_8, 73, -1, G__defined_typename("ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >::array_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_272_0_9, 73, -1, G__defined_typename("ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >::array_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<int,0> >", 3565, G__G__TreePlayer_272_0_10, (int) ('i'), 
G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TClaArrayProxy<ROOT::TArrayType<int,0> >", 3691, G__G__TreePlayer_272_0_11, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR(void) {
   /* ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR));
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<long,0> >",3666,G__G__TreePlayer_273_0_2, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<long,0> >",3666,G__G__TreePlayer_273_0_3, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR), -1, 0, 2, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<long,0> >",3666,G__G__TreePlayer_273_0_4, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR), -1, 0, 3, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<long,0> >",3666,G__G__TreePlayer_273_0_5, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR), -1, 0, 4, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name C - - 10 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<long,0> >",3666,G__G__TreePlayer_273_0_6, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR), -1, 0, 5, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director U 'ROOT::TBranchProxy' - 0 - parent "
"C - - 10 - name C - - 10 '0' top "
"C - - 10 '0' mid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__TreePlayer_273_0_7, 76, -1, G__defined_typename("ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >::array_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_273_0_8, 76, -1, G__defined_typename("ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >::array_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_273_0_9, 76, -1, G__defined_typename("ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >::array_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<long,0> >", 3666, G__G__TreePlayer_273_0_10, (int) ('i'), 
G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TClaArrayProxy<ROOT::TArrayType<long,0> >", 3792, G__G__TreePlayer_273_0_11, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR(void) {
   /* ROOT::TClaArrayProxy<ROOT::TArrayType<long long,0> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR));
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<long long,0> >",4130,G__G__TreePlayer_274_0_2, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<long long,0> >",4130,G__G__TreePlayer_274_0_3, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR), -1, 0, 2, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<long long,0> >",4130,G__G__TreePlayer_274_0_4, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR), -1, 0, 3, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<long long,0> >",4130,G__G__TreePlayer_274_0_5, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR), -1, 0, 4, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name C - - 10 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<long long,0> >",4130,G__G__TreePlayer_274_0_6, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR), -1, 0, 5, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director U 'ROOT::TBranchProxy' - 0 - parent "
"C - - 10 - name C - - 10 '0' top "
"C - - 10 '0' mid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__TreePlayer_274_0_7, 78, -1, G__defined_typename("ROOT::TClaArrayProxy<ROOT::TArrayType<long long,0> >::array_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_274_0_8, 78, -1, G__defined_typename("ROOT::TClaArrayProxy<ROOT::TArrayType<long long,0> >::array_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_274_0_9, 78, -1, G__defined_typename("ROOT::TClaArrayProxy<ROOT::TArrayType<long long,0> >::array_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<long long,0> >", 4130, G__G__TreePlayer_274_0_10, (int) ('i'), 
G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::TClaArrayProxy<ROOT::TArrayType<long long,0> >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TClaArrayProxy<ROOT::TArrayType<long long,0> >", 4256, G__G__TreePlayer_274_0_11, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR(void) {
   /* ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR));
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<char,0> >",3648,G__G__TreePlayer_276_0_2, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<char,0> >",3648,G__G__TreePlayer_276_0_3, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR), -1, 0, 2, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<char,0> >",3648,G__G__TreePlayer_276_0_4, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR), -1, 0, 3, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<char,0> >",3648,G__G__TreePlayer_276_0_5, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR), -1, 0, 4, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name C - - 10 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<char,0> >",3648,G__G__TreePlayer_276_0_6, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR), -1, 0, 5, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director U 'ROOT::TBranchProxy' - 0 - parent "
"C - - 10 - name C - - 10 '0' top "
"C - - 10 '0' mid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__TreePlayer_276_0_7, 67, -1, G__defined_typename("ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >::array_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_276_0_8, 67, -1, G__defined_typename("ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >::array_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_276_0_9, 67, -1, G__defined_typename("ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >::array_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<char,0> >", 3648, G__G__TreePlayer_276_0_10, (int) ('i'), 
G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TClaArrayProxy<ROOT::TArrayType<char,0> >", 3774, G__G__TreePlayer_276_0_11, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR(void) {
   /* ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR));
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<bool,0> >",3662,G__G__TreePlayer_277_0_2, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<bool,0> >",3662,G__G__TreePlayer_277_0_3, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR), -1, 0, 2, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<bool,0> >",3662,G__G__TreePlayer_277_0_4, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR), -1, 0, 3, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<bool,0> >",3662,G__G__TreePlayer_277_0_5, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR), -1, 0, 4, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name C - - 10 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<bool,0> >",3662,G__G__TreePlayer_277_0_6, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR), -1, 0, 5, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director U 'ROOT::TBranchProxy' - 0 - parent "
"C - - 10 - name C - - 10 '0' top "
"C - - 10 '0' mid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__TreePlayer_277_0_7, 71, -1, G__defined_typename("ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >::array_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_277_0_8, 71, -1, G__defined_typename("ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >::array_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_277_0_9, 71, -1, G__defined_typename("ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >::array_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<bool,0> >", 3662, G__G__TreePlayer_277_0_10, (int) ('i'), 
G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TClaArrayProxy<ROOT::TArrayType<bool,0> >", 3788, G__G__TreePlayer_277_0_11, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTChainIndex(void) {
   /* TChainIndex */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_TChainIndex));
   G__memfunc_setup("GetSubTreeIndex",1490,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__TreePlayerLN_pairlETVirtualIndexmUcOintgR), G__defined_typename("pair<TVirtualIndex*,Int_t>"), 0, 2, 1, 2, 8, 
"i - 'Int_t' 0 - major i - 'Int_t' 0 - minor", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReleaseSubTreeIndex",1907,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 8, 
"U 'TVirtualIndex' - 0 - index i - 'Int_t' 0 - treeNo", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteIndices",1298,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TChainIndex",1071,G__G__TreePlayer_308_0_4, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_TChainIndex), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TChainIndex",1071,G__G__TreePlayer_308_0_5, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_TChainIndex), -1, 0, 3, 1, 1, 0, 
"U 'TTree' - 10 - T C - - 10 - majorname "
"C - - 10 - minorname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Append",600,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TVirtualIndex' - 10 - - g - 'Bool_t' 0 'kFALSE' delaySort", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEntryNumberFriend",2035,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'TTree' - 10 - T", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEntryNumberWithIndex",2351,(G__InterfaceMethod) NULL,110, -1, G__defined_typename("Long64_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - major i - 'Int_t' 0 - minor", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEntryNumberWithBestIndex",2749,(G__InterfaceMethod) NULL,110, -1, G__defined_typename("Long64_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - major i - 'Int_t' 0 - minor", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMajorName",1178,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMinorName",1190,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetN",366,(G__InterfaceMethod) NULL,110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMajorFormulaParent",2137,G__G__TreePlayer_308_0_13, 85, G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormula), -1, 0, 1, 1, 1, 0, "U 'TTree' - 10 - T", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMinorFormulaParent",2149,G__G__TreePlayer_308_0_14, 85, G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormula), -1, 0, 1, 1, 1, 0, "U 'TTree' - 10 - T", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("UpdateFormulaLeaves",1945,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 10 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTree",700,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 10 - T", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__TreePlayer_308_0_17, 85, G__get_linked_tagnum(&G__G__TreePlayerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TChainIndex::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__TreePlayer_308_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TChainIndex::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__TreePlayer_308_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TChainIndex::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__TreePlayer_308_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TChainIndex::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__TreePlayerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__TreePlayer_308_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__TreePlayer_308_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TChainIndex::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__TreePlayer_308_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TChainIndex::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__TreePlayer_308_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TChainIndex::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__TreePlayer_308_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TChainIndex::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TChainIndex", 1071, G__G__TreePlayer_308_0_29, (int) ('i'), G__get_linked_tagnum(&G__G__TreePlayerLN_TChainIndex), -1, 0, 1, 1, 1, 0, "u 'TChainIndex' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TChainIndex", 1197, G__G__TreePlayer_308_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__TreePlayer_308_0_31, (int) ('u'), G__get_linked_tagnum(&G__G__TreePlayerLN_TChainIndex), -1, 1, 1, 1, 1, 0, "u 'TChainIndex' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTChainIndexcLcLTChainIndexEntry(void) {
   /* TChainIndex::TChainIndexEntry */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_TChainIndexcLcLTChainIndexEntry));
   G__memfunc_setup("TChainIndexEntry",1601,G__G__TreePlayer_309_0_1, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_TChainIndexcLcLTChainIndexEntry), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TChainIndexEntry", 1601, G__G__TreePlayer_309_0_2, (int) ('i'), G__get_linked_tagnum(&G__G__TreePlayerLN_TChainIndexcLcLTChainIndexEntry), -1, 0, 1, 1, 1, 0, "u 'TChainIndex::TChainIndexEntry' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TChainIndexEntry", 1727, G__G__TreePlayer_309_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__TreePlayer_309_0_4, (int) ('u'), G__get_linked_tagnum(&G__G__TreePlayerLN_TChainIndexcLcLTChainIndexEntry), -1, 1, 1, 1, 1, 0, "u 'TChainIndex::TChainIndexEntry' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTFileDrawMap(void) {
   /* TFileDrawMap */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_TFileDrawMap));
   G__memfunc_setup("DrawMarker",1008,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"i - 'Int_t' 0 - marker n - 'Long64_t' 0 - eseek", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetObjectInfoDir",1570,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 2, 8, 
"U 'TDirectory' - 0 - dir i - 'Int_t' 0 - px "
"i - 'Int_t' 0 - py C - - 0 - info", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PaintBox",805,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 2, 0, 
"u 'TBox' - 1 - box n - 'Long64_t' 0 - bseek "
"i - 'Int_t' 0 - nbytes", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PaintDir",795,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"U 'TDirectory' - 0 - dir C - - 10 - keys", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetObject",887,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__TreePlayerLN_TObject), -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TFileDrawMap",1152,G__G__TreePlayer_316_0_6, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_TFileDrawMap), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TFileDrawMap",1152,G__G__TreePlayer_316_0_7, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_TFileDrawMap), -1, 0, 3, 1, 1, 0, 
"U 'TFile' - 10 - file C - - 10 - keys "
"C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AnimateTree",1103,G__G__TreePlayer_316_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '\"\"' branches", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("DistancetoPrimitive",1991,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawObject",997,G__G__TreePlayer_316_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("DumpObject",1005,G__G__TreePlayer_316_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("ExecuteEvent",1237,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - event i - 'Int_t' 0 - px "
"i - 'Int_t' 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetObjectInfo",1283,(G__InterfaceMethod) NULL,67, -1, -1, 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InspectObject",1325,G__G__TreePlayer_316_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("Paint",508,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__TreePlayer_316_0_16, 85, G__get_linked_tagnum(&G__G__TreePlayerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TFileDrawMap::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__TreePlayer_316_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TFileDrawMap::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__TreePlayer_316_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TFileDrawMap::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__TreePlayer_316_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TFileDrawMap::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__TreePlayerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__TreePlayer_316_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__TreePlayer_316_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TFileDrawMap::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__TreePlayer_316_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TFileDrawMap::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__TreePlayer_316_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TFileDrawMap::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__TreePlayer_316_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TFileDrawMap::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TFileDrawMap", 1152, G__G__TreePlayer_316_0_28, (int) ('i'), G__get_linked_tagnum(&G__G__TreePlayerLN_TFileDrawMap), -1, 0, 1, 1, 1, 0, "u 'TFileDrawMap' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TFileDrawMap", 1278, G__G__TreePlayer_316_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__TreePlayer_316_0_30, (int) ('u'), G__get_linked_tagnum(&G__G__TreePlayerLN_TFileDrawMap), -1, 1, 1, 1, 1, 0, "u 'TFileDrawMap' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLTFriendProxyDescriptor(void) {
   /* ROOT::TFriendProxyDescriptor */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTFriendProxyDescriptor));
   G__memfunc_setup("TFriendProxyDescriptor",2285,G__G__TreePlayer_377_0_1, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTFriendProxyDescriptor), -1, 0, 3, 1, 1, 0, 
"C - - 10 - treename C - - 10 - aliasname "
"i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TFriendProxyDescriptor",2285,G__G__TreePlayer_377_0_2, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTFriendProxyDescriptor), -1, 0, 1, 1, 1, 0, "u 'ROOT::TFriendProxyDescriptor' - 11 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__TreePlayer_377_0_3, 117, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTFriendProxyDescriptor), -1, 1, 1, 1, 1, 0, "u 'ROOT::TFriendProxyDescriptor' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIndex",792,G__G__TreePlayer_377_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetListOfTopProxies",1934,G__G__TreePlayer_377_0_5, 85, G__get_linked_tagnum(&G__G__TreePlayerLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsEquivalent",1242,G__G__TreePlayer_377_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'ROOT::TFriendProxyDescriptor' - 10 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OutputClassDecl",1535,G__G__TreePlayer_377_0_7, 121, -1, -1, 0, 3, 1, 1, 0, 
"E - - 0 - hf i - - 0 - offset "
"h - 'UInt_t' 0 - maxVarname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OutputDecl",1033,G__G__TreePlayer_377_0_8, 121, -1, -1, 0, 3, 1, 1, 0, 
"E - - 0 - hf i - - 0 - offset "
"h - 'UInt_t' 0 - maxVarname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsDuplicate",1111,G__G__TreePlayer_377_0_9, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDuplicate",1223,G__G__TreePlayer_377_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__TreePlayer_377_0_11, 85, G__get_linked_tagnum(&G__G__TreePlayerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ROOT::TFriendProxyDescriptor::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__TreePlayer_377_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ROOT::TFriendProxyDescriptor::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__TreePlayer_377_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ROOT::TFriendProxyDescriptor::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__TreePlayer_377_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ROOT::TFriendProxyDescriptor::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__TreePlayerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__TreePlayer_377_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__TreePlayer_377_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ROOT::TFriendProxyDescriptor::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__TreePlayer_377_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ROOT::TFriendProxyDescriptor::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__TreePlayer_377_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ROOT::TFriendProxyDescriptor::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__TreePlayer_377_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ROOT::TFriendProxyDescriptor::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TFriendProxyDescriptor", 2411, G__G__TreePlayer_377_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTTreeFormulaManager(void) {
   /* TTreeFormulaManager */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormulaManager));
   G__memfunc_setup("TTreeFormulaManager",1909,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormulaManager), -1, 0, 1, 1, 4, 0, "u 'TTreeFormulaManager' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormulaManager), -1, 1, 1, 1, 4, 0, "u 'TTreeFormulaManager' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddVarDims",959,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "i - 'Int_t' 0 - virt_dim", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CancelDimension",1516,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "i - 'Int_t' 0 - virt_dim", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("EnableMultiVarDims",1800,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("UpdateUsedSize",1423,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"i - 'Int_t' 1 - virt_dim i - 'Int_t' 0 - vsize", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TTreeFormulaManager",1909,G__G__TreePlayer_382_0_7, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormulaManager), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__G__TreePlayer_382_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTreeFormula' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMultiplicity",1577,G__G__TreePlayer_382_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNdata",776,G__G__TreePlayer_382_0_10, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kFALSE' forceLoadDim", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Notify",633,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Remove",622,G__G__TreePlayer_382_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTreeFormula' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Sync",413,G__G__TreePlayer_382_0_13, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("UpdateFormulaLeaves",1945,G__G__TreePlayer_382_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__TreePlayer_382_0_15, 85, G__get_linked_tagnum(&G__G__TreePlayerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TTreeFormulaManager::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__TreePlayer_382_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TTreeFormulaManager::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__TreePlayer_382_0_17, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TTreeFormulaManager::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__TreePlayer_382_0_18, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TTreeFormulaManager::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__TreePlayerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__TreePlayer_382_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__TreePlayer_382_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TTreeFormulaManager::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__TreePlayer_382_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TTreeFormulaManager::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__TreePlayer_382_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TTreeFormulaManager::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__TreePlayer_382_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TTreeFormulaManager::DeclFileLine) ), 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSelectorDraw(void) {
   /* TSelectorDraw */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_TSelectorDraw));
   G__memfunc_setup("ClearFormula",1213,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CompileVariables",1634,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 2, 0, 
"C - - 10 '\"\"' varexp C - - 10 '\"\"' selection", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitArrays",1030,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "i - 'Int_t' 0 - newsize", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TSelectorDraw",1315,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_TSelectorDraw), -1, 0, 1, 1, 4, 0, "u 'TSelectorDraw' - 11 - -", "not implemented", (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__TreePlayerLN_TSelectorDraw), -1, 1, 1, 1, 4, 0, "u 'TSelectorDraw' - 11 - -", "not implemented", (void*) NULL, 0);
   G__memfunc_setup("TSelectorDraw",1315,G__G__TreePlayer_383_0_6, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_TSelectorDraw), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Begin",485,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetAction",894,G__G__TreePlayer_383_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCleanElist",1284,G__G__TreePlayer_383_0_9, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDimension",1222,G__G__TreePlayer_383_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDrawFlag",1064,G__G__TreePlayer_383_0_11, 110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetObject",887,G__G__TreePlayer_383_0_12, 85, G__get_linked_tagnum(&G__G__TreePlayerLN_TObject), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMultiplicity",1577,G__G__TreePlayer_383_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNfill",789,G__G__TreePlayer_383_0_14, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetOldHistogram",1517,G__G__TreePlayer_383_0_15, 85, G__get_linked_tagnum(&G__G__TreePlayerLN_TH1), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSelect",896,G__G__TreePlayer_383_0_16, 85, G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormula), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSelectedRows",1524,G__G__TreePlayer_383_0_17, 110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTree",688,G__G__TreePlayer_383_0_18, 85, G__get_linked_tagnum(&G__G__TreePlayerLN_TTree), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVar",585,G__G__TreePlayer_383_0_19, 85, G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormula), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVar1",634,G__G__TreePlayer_383_0_20, 85, G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormula), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVar2",635,G__G__TreePlayer_383_0_21, 85, G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormula), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVar3",636,G__G__TreePlayer_383_0_22, 85, G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormula), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVar4",637,G__G__TreePlayer_383_0_23, 85, G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormula), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVal",579,G__G__TreePlayer_383_0_24, 68, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetV1",423,G__G__TreePlayer_383_0_25, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetV2",424,G__G__TreePlayer_383_0_26, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetV3",425,G__G__TreePlayer_383_0_27, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetV4",426,G__G__TreePlayer_383_0_28, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetW",375,G__G__TreePlayer_383_0_29, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Notify",633,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ProcessFill",1126,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - entry", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ProcessFillMultiple",1970,G__G__TreePlayer_383_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - entry", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ProcessFillObject",1725,G__G__TreePlayer_383_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - entry", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetEstimate",1128,G__G__TreePlayer_383_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - n", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SplitNames",1024,G__G__TreePlayer_383_0_36, 104, -1, G__defined_typename("UInt_t"), 0, 2, 1, 1, 0, 
"u 'TString' - 11 - varexp u 'vector<TString,allocator<TString> >' 'vector<TString>' 1 - names", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TakeAction",995,G__G__TreePlayer_383_0_37, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TakeEstimate",1217,G__G__TreePlayer_383_0_38, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Terminate",937,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__TreePlayer_383_0_40, 85, G__get_linked_tagnum(&G__G__TreePlayerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSelectorDraw::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__TreePlayer_383_0_41, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSelectorDraw::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__TreePlayer_383_0_42, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSelectorDraw::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__TreePlayer_383_0_43, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSelectorDraw::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__TreePlayerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__TreePlayer_383_0_47, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__TreePlayer_383_0_48, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSelectorDraw::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__TreePlayer_383_0_49, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSelectorDraw::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__TreePlayer_383_0_50, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSelectorDraw::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__TreePlayer_383_0_51, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSelectorDraw::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TSelectorDraw", 1441, G__G__TreePlayer_383_0_52, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSelectorEntries(void) {
   /* TSelectorEntries */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_TSelectorEntries));
   G__memfunc_setup("TSelectorEntries",1647,G__G__TreePlayer_389_0_1, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_TSelectorEntries), -1, 0, 2, 1, 1, 0, 
"U 'TTree' - 0 '0' tree C - - 10 '0' selection", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSelectorEntries",1647,G__G__TreePlayer_389_0_2, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_TSelectorEntries), -1, 0, 1, 1, 1, 0, "C - - 10 - selection", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Version",742,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Begin",485,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SlaveBegin",992,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Notify",633,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - entry", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEntry",818,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"n - 'Long64_t' 0 - entry i - 'Int_t' 0 '0' getall", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSelectedRows",1524,G__G__TreePlayer_389_0_10, 110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetOption",933,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetObject",899,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetSelection",1234,G__G__TreePlayer_389_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - selection", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetOutputList",1357,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__TreePlayerLN_TList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SlaveTerminate",1444,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Terminate",937,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__TreePlayer_389_0_17, 85, G__get_linked_tagnum(&G__G__TreePlayerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSelectorEntries::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__TreePlayer_389_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSelectorEntries::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__TreePlayer_389_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSelectorEntries::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__TreePlayer_389_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSelectorEntries::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__TreePlayerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__TreePlayer_389_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__TreePlayer_389_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSelectorEntries::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__TreePlayer_389_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSelectorEntries::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__TreePlayer_389_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSelectorEntries::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__TreePlayer_389_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSelectorEntries::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TSelectorEntries", 1773, G__G__TreePlayer_389_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTTreeDrawArgsParser(void) {
   /* TTreeDrawArgsParser */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeDrawArgsParser));
   G__memfunc_setup("ClearPrevious",1348,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DefineType",1005,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeDrawArgsParsercLcLEOutputType), -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SplitVariables",1445,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 2, 0, "u 'TString' - 0 - variables", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseName",892,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 2, 0, "u 'TString' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseOption",1140,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseVarExp",1105,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TTreeDrawArgsParser",1900,G__G__TreePlayer_390_0_7, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeDrawArgsParser), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Parse",507,G__G__TreePlayer_390_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"C - - 10 - varexp C - - 10 - selection "
"C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAdd",553,G__G__TreePlayer_390_0_9, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDimension",1222,G__G__TreePlayer_390_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetShouldDraw",1309,G__G__TreePlayer_390_0_11, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetExp",589,G__G__TreePlayer_390_0_12, 117, G__get_linked_tagnum(&G__G__TreePlayerLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIfSpecified",1371,G__G__TreePlayer_390_0_13, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - num d - 'Double_t' 0 - def", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNoParameters",1521,G__G__TreePlayer_390_0_14, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParameter",1217,G__G__TreePlayer_390_0_15, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - - 0 - num", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetProofSelectorName",2024,G__G__TreePlayer_390_0_16, 117, G__get_linked_tagnum(&G__G__TreePlayerLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetObjectName",1272,G__G__TreePlayer_390_0_17, 117, G__get_linked_tagnum(&G__G__TreePlayerLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetObjectTitle",1401,G__G__TreePlayer_390_0_18, 117, G__get_linked_tagnum(&G__G__TreePlayerLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOptionSame",1311,G__G__TreePlayer_390_0_19, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOriginal",1109,G__G__TreePlayer_390_0_20, 85, G__get_linked_tagnum(&G__G__TreePlayerLN_TObject), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSelection",1222,G__G__TreePlayer_390_0_21, 117, G__get_linked_tagnum(&G__G__TreePlayerLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVarExp",886,G__G__TreePlayer_390_0_22, 117, G__get_linked_tagnum(&G__G__TreePlayerLN_TString), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - num", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVarExp",886,G__G__TreePlayer_390_0_23, 117, G__get_linked_tagnum(&G__G__TreePlayerLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSpecified",1096,G__G__TreePlayer_390_0_24, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "i - - 0 - num", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetObjectName",1284,G__G__TreePlayer_390_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOriginal",1121,G__G__TreePlayer_390_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - o", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaxDimension",1516,G__G__TreePlayer_390_0_27, 105, -1, G__defined_typename("Int_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Int_t (*)())(&TTreeDrawArgsParser::GetMaxDimension) ), 0);
   G__memfunc_setup("Class",502,G__G__TreePlayer_390_0_28, 85, G__get_linked_tagnum(&G__G__TreePlayerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TTreeDrawArgsParser::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__TreePlayer_390_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TTreeDrawArgsParser::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__TreePlayer_390_0_30, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TTreeDrawArgsParser::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__TreePlayer_390_0_31, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TTreeDrawArgsParser::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__TreePlayerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__TreePlayer_390_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__TreePlayer_390_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TTreeDrawArgsParser::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__TreePlayer_390_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TTreeDrawArgsParser::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__TreePlayer_390_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TTreeDrawArgsParser::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__TreePlayer_390_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TTreeDrawArgsParser::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TTreeDrawArgsParser", 1900, G__G__TreePlayer_390_0_40, (int) ('i'), G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeDrawArgsParser), -1, 0, 1, 1, 1, 0, "u 'TTreeDrawArgsParser' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TTreeDrawArgsParser", 2026, G__G__TreePlayer_390_0_41, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__TreePlayer_390_0_42, (int) ('u'), G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeDrawArgsParser), -1, 1, 1, 1, 1, 0, "u 'TTreeDrawArgsParser' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTTreeIndex(void) {
   /* TTreeIndex */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeIndex));
   G__memfunc_setup("TTreeIndex",988,G__G__TreePlayer_406_0_1, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeIndex), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TTreeIndex",988,G__G__TreePlayer_406_0_2, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeIndex), -1, 0, 3, 1, 1, 0, 
"U 'TTree' - 10 - T C - - 10 - majorname "
"C - - 10 - minorname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Append",600,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TVirtualIndex' - 10 - - g - 'Bool_t' 0 'kFALSE' delaySort", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEntryNumberFriend",2035,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'TTree' - 10 - T", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEntryNumberWithIndex",2351,(G__InterfaceMethod) NULL,110, -1, G__defined_typename("Long64_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - major i - 'Int_t' 0 - minor", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEntryNumberWithBestIndex",2749,(G__InterfaceMethod) NULL,110, -1, G__defined_typename("Long64_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - major i - 'Int_t' 0 - minor", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIndexValues",1416,G__G__TreePlayer_406_0_7, 78, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIndex",792,G__G__TreePlayer_406_0_8, 78, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMajorName",1178,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMinorName",1190,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetN",366,(G__InterfaceMethod) NULL,110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMajorFormula",1519,G__G__TreePlayer_406_0_12, 85, G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormula), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMinorFormula",1531,G__G__TreePlayer_406_0_13, 85, G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormula), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMajorFormulaParent",2137,G__G__TreePlayer_406_0_14, 85, G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormula), -1, 0, 1, 1, 1, 0, "U 'TTree' - 10 - T", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMinorFormulaParent",2149,G__G__TreePlayer_406_0_15, 85, G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormula), -1, 0, 1, 1, 1, 0, "U 'TTree' - 10 - T", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("UpdateFormulaLeaves",1945,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 10 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTree",700,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 10 - T", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__TreePlayer_406_0_19, 85, G__get_linked_tagnum(&G__G__TreePlayerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TTreeIndex::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__TreePlayer_406_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TTreeIndex::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__TreePlayer_406_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TTreeIndex::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__TreePlayer_406_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TTreeIndex::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__TreePlayerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__TreePlayer_406_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__TreePlayer_406_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TTreeIndex::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__TreePlayer_406_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TTreeIndex::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__TreePlayer_406_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TTreeIndex::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__TreePlayer_406_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TTreeIndex::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TTreeIndex", 988, G__G__TreePlayer_406_0_31, (int) ('i'), G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeIndex), -1, 0, 1, 1, 1, 0, "u 'TTreeIndex' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TTreeIndex", 1114, G__G__TreePlayer_406_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__TreePlayer_406_0_33, (int) ('u'), G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeIndex), -1, 1, 1, 1, 1, 0, "u 'TTreeIndex' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTTreePerfStats(void) {
   /* TTreePerfStats */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_TTreePerfStats));
   G__memfunc_setup("TTreePerfStats",1408,G__G__TreePlayer_414_0_1, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_TTreePerfStats), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TTreePerfStats",1408,G__G__TreePlayer_414_0_2, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_TTreePerfStats), -1, 0, 2, 1, 1, 0, 
"C - - 10 - name U 'TTree' - 0 - T", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Browse",626,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TBrowser' - 0 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DistancetoPrimitive",1991,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Draw",398,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ExecuteEvent",1237,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - event i - 'Int_t' 0 - px "
"i - 'Int_t' 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Finish",609,G__G__TreePlayer_414_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBytesRead",1187,(G__InterfaceMethod) NULL,110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBytesReadExtra",1703,G__G__TreePlayer_414_0_9, 110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCpuTime",983,G__G__TreePlayer_414_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDiskTime",1082,G__G__TreePlayer_414_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetGraphIO",938,G__G__TreePlayer_414_0_12, 85, G__get_linked_tagnum(&G__G__TreePlayerLN_TGraphErrors), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGraphTime",1185,G__G__TreePlayer_414_0_13, 85, G__get_linked_tagnum(&G__G__TreePlayerLN_TGraphErrors), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHostInfo",1098,G__G__TreePlayer_414_0_14, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetName",673,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNleaves",1006,G__G__TreePlayer_414_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNumEvents",1221,(G__InterfaceMethod) NULL,110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPave",684,G__G__TreePlayer_414_0_18, 85, G__get_linked_tagnum(&G__G__TreePlayerLN_TPaveText), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetReadaheadSize",1578,G__G__TreePlayer_414_0_19, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetReadCalls",1163,G__G__TreePlayer_414_0_20, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRealTime",1075,G__G__TreePlayer_414_0_21, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetStopwatch",1245,G__G__TreePlayer_414_0_22, 85, G__get_linked_tagnum(&G__G__TreePlayerLN_TStopwatch), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTreeCacheSize",1567,G__G__TreePlayer_414_0_23, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Paint",508,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' chopt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SimpleEvent",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i 'TVirtualPerfStats::EEventType' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PacketEvent",1114,(G__InterfaceMethod) NULL,121, -1, -1, 0, 8, 1, 1, 0, 
"C - - 10 - - C - - 10 - - "
"C - - 10 - - n - 'Long64_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - n - 'Long64_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FileEvent",898,(G__InterfaceMethod) NULL,121, -1, -1, 0, 5, 1, 1, 0, 
"C - - 10 - - C - - 10 - - "
"C - - 10 - - C - - 10 - - "
"g - 'Bool_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FileOpenEvent",1300,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"U 'TFile' - 0 - - C - - 10 - - "
"d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FileReadEvent",1278,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"U 'TFile' - 0 - file i - 'Int_t' 0 - len "
"d - 'Double_t' 0 - start", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("RateEvent",910,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"n - 'Long64_t' 0 - - n - 'Long64_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SaveAs",579,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 8, 
"C - - 10 '\"\"' filename C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SavePrimitive",1352,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetBytesRead",1199,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - nbytes", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetBytesReadExtra",1715,G__G__TreePlayer_414_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - nbytes", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetCompress",1144,G__G__TreePlayer_414_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - cx", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDiskTime",1094,G__G__TreePlayer_414_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - t", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetNumEvents",1233,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetCpuTime",995,G__G__TreePlayer_414_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - cptime", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetGraphIO",950,G__G__TreePlayer_414_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TGraphErrors' - 0 - gr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetGraphTime",1197,G__G__TreePlayer_414_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TGraphErrors' - 0 - gr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetHostInfo",1110,G__G__TreePlayer_414_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - info", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetName",685,G__G__TreePlayer_414_0_43, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetNleaves",1018,G__G__TreePlayer_414_0_44, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - nleaves", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetReadaheadSize",1590,G__G__TreePlayer_414_0_45, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - nbytes", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetReadCalls",1175,G__G__TreePlayer_414_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ncalls", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetRealNorm",1100,G__G__TreePlayer_414_0_47, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - rnorm", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetRealTime",1087,G__G__TreePlayer_414_0_48, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - rtime", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTreeCacheSize",1579,G__G__TreePlayer_414_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - nbytes", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__TreePlayer_414_0_50, 85, G__get_linked_tagnum(&G__G__TreePlayerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TTreePerfStats::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__TreePlayer_414_0_51, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TTreePerfStats::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__TreePlayer_414_0_52, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TTreePerfStats::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__TreePlayer_414_0_53, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TTreePerfStats::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__TreePlayerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__TreePlayer_414_0_57, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__TreePlayer_414_0_58, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TTreePerfStats::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__TreePlayer_414_0_59, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TTreePerfStats::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__TreePlayer_414_0_60, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TTreePerfStats::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__TreePlayer_414_0_61, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TTreePerfStats::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TTreePerfStats", 1408, G__G__TreePlayer_414_0_62, (int) ('i'), G__get_linked_tagnum(&G__G__TreePlayerLN_TTreePerfStats), -1, 0, 1, 1, 1, 0, "u 'TTreePerfStats' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TTreePerfStats", 1534, G__G__TreePlayer_414_0_63, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__TreePlayer_414_0_64, (int) ('u'), G__get_linked_tagnum(&G__G__TreePlayerLN_TTreePerfStats), -1, 1, 1, 1, 1, 0, "u 'TTreePerfStats' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTTreePlayer(void) {
   /* TTreePlayer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_TTreePlayer));
   G__memfunc_setup("TTreePlayer",1105,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_TTreePlayer), -1, 0, 1, 1, 4, 0, "u 'TTreePlayer' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__TreePlayerLN_TTreePlayer), -1, 1, 1, 1, 4, 0, "u 'TTreePlayer' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNameByIndex",1364,(G__InterfaceMethod) NULL, 67, -1, -1, 0, 3, 1, 2, 1, 
"u 'TString' - 1 - varexp I - 'Int_t' 0 - index "
"i - 'Int_t' 0 - colindex", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TakeAction",995,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 5, 1, 2, 0, 
"i - 'Int_t' 0 - nfill i - 'Int_t' 1 - npoints "
"i - 'Int_t' 1 - action U 'TObject' - 0 - obj "
"C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TakeEstimate",1217,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 5, 1, 2, 0, 
"i - 'Int_t' 0 - nfill i - 'Int_t' 1 - npoints "
"i - 'Int_t' 0 - action U 'TObject' - 0 - obj "
"C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteSelectorFromFile",2216,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TTreePlayer",1105,G__G__TreePlayer_415_0_7, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_TTreePlayer), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildIndex",1000,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__TreePlayerLN_TVirtualIndex), -1, 0, 3, 1, 1, 0, 
"U 'TTree' - 10 - T C - - 10 - majorname "
"C - - 10 - minorname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CopyTree",811,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__TreePlayerLN_TTree), -1, 0, 4, 1, 1, 0, 
"C - - 10 - selection C - 'Option_t' 10 - option "
"n - 'Long64_t' 0 - nentries n - 'Long64_t' 0 - firstentry", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawScript",1027,(G__InterfaceMethod) NULL,110, -1, G__defined_typename("Long64_t"), 0, 6, 1, 1, 0, 
"C - - 10 - wrapperPrefix C - - 10 - macrofilename "
"C - - 10 - cutfilename C - 'Option_t' 10 - option "
"n - 'Long64_t' 0 - nentries n - 'Long64_t' 0 - firstentry", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawSelect",1006,(G__InterfaceMethod) NULL,110, -1, G__defined_typename("Long64_t"), 0, 5, 1, 1, 0, 
"C - - 10 - varexp C - - 10 - selection "
"C - 'Option_t' 10 - option n - 'Long64_t' 0 - nentries "
"n - 'Long64_t' 0 - firstentry", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Fit",291,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 7, 1, 1, 0, 
"C - - 10 - formula C - - 10 - varexp "
"C - - 10 - selection C - 'Option_t' 10 - option "
"C - 'Option_t' 10 - goption n - 'Long64_t' 0 - nentries "
"n - 'Long64_t' 0 - firstentry", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDimension",1222,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetHistogram",1230,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__TreePlayerLN_TH1), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEntries",1018,(G__InterfaceMethod) NULL,110, -1, G__defined_typename("Long64_t"), 0, 1, 1, 1, 0, "C - - 10 - selection", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEntriesToProcess",1948,G__G__TreePlayer_415_0_16, 110, -1, G__defined_typename("Long64_t"), 0, 2, 1, 1, 8, 
"n - 'Long64_t' 0 - firstentry n - 'Long64_t' 0 - nentries", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNfill",789,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetScanFileName",1446,G__G__TreePlayer_415_0_18, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSelect",896,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormula), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSelectedRows",1524,(G__InterfaceMethod) NULL,110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSelector",1121,G__G__TreePlayer_415_0_21, 85, G__get_linked_tagnum(&G__G__TreePlayerLN_TSelector), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSelectorFromFile",1909,G__G__TreePlayer_415_0_22, 85, G__get_linked_tagnum(&G__G__TreePlayerLN_TSelector), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVar",585,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormula), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetVar1",634,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormula), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetVar2",635,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormula), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetVar3",636,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormula), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetVar4",637,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormula), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetVal",579,(G__InterfaceMethod) NULL,68, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetV1",423,(G__InterfaceMethod) NULL,68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetV2",424,(G__InterfaceMethod) NULL,68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetV3",425,(G__InterfaceMethod) NULL,68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetV4",426,(G__InterfaceMethod) NULL,68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetW",375,(G__InterfaceMethod) NULL,68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MakeClass",884,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - - 10 - classname C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MakeCode",761,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - - 10 - filename", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MakeProxy",928,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 5, 1, 1, 0, 
"C - - 10 - classname C - - 10 '0' macrofilename "
"C - - 10 '0' cutfilename C - - 10 '0' option "
"i - 'Int_t' 0 '3' maxUnrolling", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Principal",930,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__TreePlayerLN_TPrincipal), -1, 0, 5, 1, 1, 0, 
"C - - 10 - varexp C - - 10 - selection "
"C - 'Option_t' 10 - option n - 'Long64_t' 0 - nentries "
"n - 'Long64_t' 0 - firstentry", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL,110, -1, G__defined_typename("Long64_t"), 0, 4, 1, 1, 0, 
"C - - 10 - filename C - 'Option_t' 10 - option "
"n - 'Long64_t' 0 - nentries n - 'Long64_t' 0 - firstentry", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL,110, -1, G__defined_typename("Long64_t"), 0, 4, 1, 1, 0, 
"U 'TSelector' - 0 - selector C - 'Option_t' 10 - option "
"n - 'Long64_t' 0 - nentries n - 'Long64_t' 0 - firstentry", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("RecursiveRemove",1574,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Scan",389,(G__InterfaceMethod) NULL,110, -1, G__defined_typename("Long64_t"), 0, 5, 1, 1, 0, 
"C - - 10 - varexp C - - 10 - selection "
"C - 'Option_t' 10 - option n - 'Long64_t' 0 - nentries "
"n - 'Long64_t' 0 - firstentry", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ScanRedirected",1408,G__G__TreePlayer_415_0_42, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Query",534,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__TreePlayerLN_TSQLResult), -1, 0, 5, 1, 1, 0, 
"C - - 10 - varexp C - - 10 - selection "
"C - 'Option_t' 10 - option n - 'Long64_t' 0 - nentries "
"n - 'Long64_t' 0 - firstentry", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetEstimate",1128,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - n", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetScanRedirect",1507,G__G__TreePlayer_415_0_45, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kFALSE' on", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetScanFileName",1458,G__G__TreePlayer_415_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTree",700,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - t", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StartViewer",1152,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - ww i - 'Int_t' 0 - wh", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("UnbinnedFit",1110,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 6, 1, 1, 0, 
"C - - 10 - formula C - - 10 - varexp "
"C - - 10 - selection C - 'Option_t' 10 - option "
"n - 'Long64_t' 0 - nentries n - 'Long64_t' 0 - firstentry", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("UpdateFormulaLeaves",1945,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__TreePlayer_415_0_51, 85, G__get_linked_tagnum(&G__G__TreePlayerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TTreePlayer::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__TreePlayer_415_0_52, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TTreePlayer::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__TreePlayer_415_0_53, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TTreePlayer::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__TreePlayer_415_0_54, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TTreePlayer::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__TreePlayerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__TreePlayer_415_0_58, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__TreePlayer_415_0_59, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TTreePlayer::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__TreePlayer_415_0_60, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TTreePlayer::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__TreePlayer_415_0_61, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TTreePlayer::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__TreePlayer_415_0_62, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TTreePlayer::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TTreePlayer", 1231, G__G__TreePlayer_415_0_63, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTTreeTableInterface(void) {
   /* TTreeTableInterface */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeTableInterface));
   G__memfunc_setup("SetVariablesExpression",2293,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "C - - 10 - varexp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SyncFormulas",1254,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitEntries",1134,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TTreeTableInterface",1885,G__G__TreePlayer_420_0_4, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeTableInterface), -1, 0, 6, 1, 1, 0, 
"U 'TTree' - 0 '0' tree C - - 10 '0' varexp "
"C - - 10 '0' selection C - 'Option_t' 10 '0' option "
"n - 'Long64_t' 0 '0' nentries n - 'Long64_t' 0 '0' firstentry", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetValue",797,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - row h - 'UInt_t' 0 - column", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetValueAsString",1608,(G__InterfaceMethod) NULL,67, -1, -1, 0, 2, 1, 1, 1, 
"h - 'UInt_t' 0 - row h - 'UInt_t' 0 - column", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRowHeader",1185,(G__InterfaceMethod) NULL,67, -1, -1, 0, 1, 1, 1, 1, "h - 'UInt_t' 0 - row", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetColumnHeader",1495,(G__InterfaceMethod) NULL,67, -1, -1, 0, 1, 1, 1, 1, "h - 'UInt_t' 0 - column", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNRows",793,(G__InterfaceMethod) NULL,104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNColumns",1103,(G__InterfaceMethod) NULL,104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEntryList",1230,G__G__TreePlayer_420_0_11, 85, G__get_linked_tagnum(&G__G__TreePlayerLN_TEntryList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddColumn",887,G__G__TreePlayer_420_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - expression h - 'UInt_t' 0 - position", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddColumn",887,G__G__TreePlayer_420_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TTreeFormula' - 0 - formula h - 'UInt_t' 0 - position", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("RemoveColumn",1244,G__G__TreePlayer_420_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - position", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFormula",1026,G__G__TreePlayer_420_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TTreeFormula' - 0 - formula h - 'UInt_t' 0 - position", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetSelection",1234,G__G__TreePlayer_420_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - selection", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetEntryList",1242,G__G__TreePlayer_420_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TEntryList' - 0 '0' entrylist", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__TreePlayer_420_0_18, 85, G__get_linked_tagnum(&G__G__TreePlayerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TTreeTableInterface::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__TreePlayer_420_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TTreeTableInterface::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__TreePlayer_420_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TTreeTableInterface::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__TreePlayer_420_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TTreeTableInterface::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__TreePlayerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__TreePlayer_420_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__TreePlayer_420_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TTreeTableInterface::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__TreePlayer_420_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TTreeTableInterface::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__TreePlayer_420_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TTreeTableInterface::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__TreePlayer_420_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TTreeTableInterface::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TTreeTableInterface", 1885, G__G__TreePlayer_420_0_30, (int) ('i'), G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeTableInterface), -1, 0, 1, 1, 1, 0, "u 'TTreeTableInterface' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TTreeTableInterface", 2011, G__G__TreePlayer_420_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__TreePlayer_420_0_32, (int) ('u'), G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeTableInterface), -1, 1, 1, 1, 1, 0, "u 'TTreeTableInterface' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR(void) {
   /* ROOT::TArrayProxy<ROOT::TArrayType<short,0> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR));
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<short,0> >",3522,G__G__TreePlayer_422_0_1, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<short,0> >",3522,G__G__TreePlayer_422_0_2, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR), -1, 0, 2, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<short,0> >",3522,G__G__TreePlayer_422_0_3, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR), -1, 0, 3, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<short,0> >",3522,G__G__TreePlayer_422_0_4, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR), -1, 0, 4, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name C - - 10 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<short,0> >",3522,G__G__TreePlayer_422_0_5, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR), -1, 0, 5, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director U 'ROOT::TBranchProxy' - 0 - parent "
"C - - 10 - name C - - 10 '0' top "
"C - - 10 '0' mid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("At",181,G__G__TreePlayer_422_0_7, 115, -1, G__defined_typename("ROOT::TArrayProxy<ROOT::TArrayType<short,0> >::array_t"), 1, 1, 1, 1, 1, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_422_0_8, 115, -1, G__defined_typename("ROOT::TArrayProxy<ROOT::TArrayType<short,0> >::array_t"), 1, 1, 1, 1, 1, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_422_0_9, 115, -1, G__defined_typename("ROOT::TArrayProxy<ROOT::TArrayType<short,0> >::array_t"), 1, 1, 1, 1, 1, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<short,0> >", 3522, G__G__TreePlayer_422_0_10, (int) ('i'), 
G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::TArrayProxy<ROOT::TArrayType<short,0> >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArrayProxy<ROOT::TArrayType<short,0> >", 3648, G__G__TreePlayer_422_0_11, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR(void) {
   /* ROOT::TArrayProxy<ROOT::TArrayType<char,0> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR));
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<char,0> >",3376,G__G__TreePlayer_423_0_1, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<char,0> >",3376,G__G__TreePlayer_423_0_2, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR), -1, 0, 2, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<char,0> >",3376,G__G__TreePlayer_423_0_3, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR), -1, 0, 3, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<char,0> >",3376,G__G__TreePlayer_423_0_4, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR), -1, 0, 4, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name C - - 10 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<char,0> >",3376,G__G__TreePlayer_423_0_5, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR), -1, 0, 5, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director U 'ROOT::TBranchProxy' - 0 - parent "
"C - - 10 - name C - - 10 '0' top "
"C - - 10 '0' mid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("At",181,G__G__TreePlayer_423_0_7, 99, -1, G__defined_typename("ROOT::TArrayProxy<ROOT::TArrayType<char,0> >::array_t"), 1, 1, 1, 1, 1, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_423_0_8, 99, -1, G__defined_typename("ROOT::TArrayProxy<ROOT::TArrayType<char,0> >::array_t"), 1, 1, 1, 1, 1, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_423_0_9, 99, -1, G__defined_typename("ROOT::TArrayProxy<ROOT::TArrayType<char,0> >::array_t"), 1, 1, 1, 1, 1, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TArrayProxy<ROOT::TArrayType<char,0> >", 3376, G__G__TreePlayer_423_0_10, (int) ('i'), 
G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::TArrayProxy<ROOT::TArrayType<char,0> >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArrayProxy<ROOT::TArrayType<char,0> >", 3502, G__G__TreePlayer_423_0_11, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR(void) {
   /* ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR));
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<short,0> >",3794,G__G__TreePlayer_424_0_2, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<short,0> >",3794,G__G__TreePlayer_424_0_3, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR), -1, 0, 2, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<short,0> >",3794,G__G__TreePlayer_424_0_4, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR), -1, 0, 3, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<short,0> >",3794,G__G__TreePlayer_424_0_5, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR), -1, 0, 4, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director C - - 10 - top "
"C - - 10 - name C - - 10 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<short,0> >",3794,G__G__TreePlayer_424_0_6, 105, G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR), -1, 0, 5, 1, 1, 0, 
"U 'ROOT::TBranchProxyDirector' - 0 - director U 'ROOT::TBranchProxy' - 0 - parent "
"C - - 10 - name C - - 10 '0' top "
"C - - 10 '0' mid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__TreePlayer_424_0_7, 83, -1, G__defined_typename("ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> >::array_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_424_0_8, 83, -1, G__defined_typename("ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> >::array_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__TreePlayer_424_0_9, 83, -1, G__defined_typename("ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> >::array_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TClaArrayProxy<ROOT::TArrayType<short,0> >", 3794, G__G__TreePlayer_424_0_10, (int) ('i'), 
G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TClaArrayProxy<ROOT::TArrayType<short,0> >", 3920, G__G__TreePlayer_424_0_11, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__TreePlayer() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__TreePlayer() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__TreePlayer() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__TreePlayerLN_type_info = { "type_info" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_TDirectory = { "TDirectory" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_TVirtualCollectionProxy = { "TVirtualCollectionProxy" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_TVirtualIsAProxy = { "TVirtualIsAProxy" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOT = { "ROOT" , 110 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTInitBehavior = { "ROOT::TInitBehavior" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR = { "basic_ostream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_TBrowser = { "TBrowser" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_TVirtualStreamerInfo = { "TVirtualStreamerInfo" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_TStreamerElement = { "TStreamerElement" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__G__TreePlayerLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTBranchProxyDescriptor = { "ROOT::TBranchProxyDescriptor" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTBranchProxyClassDescriptor = { "ROOT::TBranchProxyClassDescriptor" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTBranchProxyClassDescriptorcLcLELocation = { "ROOT::TBranchProxyClassDescriptor::ELocation" , 101 , -1 };
G__linked_taginfo G__G__TreePlayerLN_TLeaf = { "TLeaf" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_TBranch = { "TBranch" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_TArrayI = { "TArrayI" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_TMethodCall = { "TMethodCall" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_TH1 = { "TH1" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_TTreeFormula = { "TTreeFormula" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_TSQLResult = { "TSQLResult" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_TSelector = { "TSelector" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_TPrincipal = { "TPrincipal" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_TVirtualIndex = { "TVirtualIndex" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_TVirtualTreePlayer = { "TVirtualTreePlayer" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_TEntryList = { "TEntryList" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTBranchProxy = { "ROOT::TBranchProxy" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTFriendProxy = { "ROOT::TFriendProxy" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTBranchProxyDirector = { "ROOT::TBranchProxyDirector" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_listlEROOTcLcLTBranchProxymUcOallocatorlEROOTcLcLTBranchProxymUgRsPgR = { "list<ROOT::TBranchProxy*,allocator<ROOT::TBranchProxy*> >" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_listlEROOTcLcLTFriendProxymUcOallocatorlEROOTcLcLTFriendProxymUgRsPgR = { "list<ROOT::TFriendProxy*,allocator<ROOT::TFriendProxy*> >" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTImpProxylEdoublegR = { "ROOT::TImpProxy<double>" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTImpProxylEDouble32_tgR = { "ROOT::TImpProxy<Double32_t>" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTImpProxylEfloatgR = { "ROOT::TImpProxy<float>" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTImpProxylEFloat16_tgR = { "ROOT::TImpProxy<Float16_t>" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPintgR = { "ROOT::TImpProxy<unsigned int>" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPlonggR = { "ROOT::TImpProxy<unsigned long>" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPlongsPlonggR = { "ROOT::TImpProxy<unsigned long long>" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPshortgR = { "ROOT::TImpProxy<unsigned short>" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPchargR = { "ROOT::TImpProxy<unsigned char>" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTImpProxylEintgR = { "ROOT::TImpProxy<int>" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTImpProxylElonggR = { "ROOT::TImpProxy<long>" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTImpProxylElongsPlonggR = { "ROOT::TImpProxy<long long>" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTImpProxylEshortgR = { "ROOT::TImpProxy<short>" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTImpProxylEchargR = { "ROOT::TImpProxy<char>" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTImpProxylEboolgR = { "ROOT::TImpProxy<bool>" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTArrayTypelEdoublecO0gR = { "ROOT::TArrayType<double,0>" , 115 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR = { "ROOT::TArrayProxy<ROOT::TArrayType<double,0> >" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTArrayTypelEDouble32_tcO0gR = { "ROOT::TArrayType<Double32_t,0>" , 115 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEDouble32_tcO0gRsPgR = { "ROOT::TArrayProxy<ROOT::TArrayType<Double32_t,0> >" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTArrayTypelEfloatcO0gR = { "ROOT::TArrayType<float,0>" , 115 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR = { "ROOT::TArrayProxy<ROOT::TArrayType<float,0> >" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTArrayTypelEFloat16_tcO0gR = { "ROOT::TArrayType<Float16_t,0>" , 115 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEFloat16_tcO0gRsPgR = { "ROOT::TArrayProxy<ROOT::TArrayType<Float16_t,0> >" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTArrayTypelEunsignedsPintcO0gR = { "ROOT::TArrayType<unsigned int,0>" , 115 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR = { "ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTArrayTypelEunsignedsPlongcO0gR = { "ROOT::TArrayType<unsigned long,0>" , 115 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR = { "ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gR = { "ROOT::TArrayType<unsigned long long,0>" , 115 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR = { "ROOT::TArrayProxy<ROOT::TArrayType<unsigned long long,0> >" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTArrayTypelEunsignedsPshortcO0gR = { "ROOT::TArrayType<unsigned short,0>" , 115 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR = { "ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTArrayTypelEunsignedsPcharcO0gR = { "ROOT::TArrayType<unsigned char,0>" , 115 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR = { "ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTArrayTypelEintcO0gR = { "ROOT::TArrayType<int,0>" , 115 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR = { "ROOT::TArrayProxy<ROOT::TArrayType<int,0> >" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTArrayTypelElongcO0gR = { "ROOT::TArrayType<long,0>" , 115 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR = { "ROOT::TArrayProxy<ROOT::TArrayType<long,0> >" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTArrayTypelElongsPlongcO0gR = { "ROOT::TArrayType<long long,0>" , 115 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR = { "ROOT::TArrayProxy<ROOT::TArrayType<long long,0> >" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTArrayTypelEboolcO0gR = { "ROOT::TArrayType<bool,0>" , 115 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR = { "ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEdoublegR = { "ROOT::TClaImpProxy<double>" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEDouble32_tgR = { "ROOT::TClaImpProxy<Double32_t>" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEfloatgR = { "ROOT::TClaImpProxy<float>" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEFloat16_tgR = { "ROOT::TClaImpProxy<Float16_t>" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPintgR = { "ROOT::TClaImpProxy<unsigned int>" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPlonggR = { "ROOT::TClaImpProxy<unsigned long>" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPlongsPlonggR = { "ROOT::TClaImpProxy<unsigned long long>" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPshortgR = { "ROOT::TClaImpProxy<unsigned short>" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPchargR = { "ROOT::TClaImpProxy<unsigned char>" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEintgR = { "ROOT::TClaImpProxy<int>" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTClaImpProxylElonggR = { "ROOT::TClaImpProxy<long>" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTClaImpProxylElongsPlonggR = { "ROOT::TClaImpProxy<long long>" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEshortgR = { "ROOT::TClaImpProxy<short>" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEchargR = { "ROOT::TClaImpProxy<char>" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEboolgR = { "ROOT::TClaImpProxy<bool>" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR = { "ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> >" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEDouble32_tcO0gRsPgR = { "ROOT::TClaArrayProxy<ROOT::TArrayType<Double32_t,0> >" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR = { "ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> >" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEFloat16_tcO0gRsPgR = { "ROOT::TClaArrayProxy<ROOT::TArrayType<Float16_t,0> >" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR = { "ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR = { "ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR = { "ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long long,0> >" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR = { "ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR = { "ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR = { "ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR = { "ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR = { "ROOT::TClaArrayProxy<ROOT::TArrayType<long long,0> >" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTArrayTypelEcharcO0gR = { "ROOT::TArrayType<char,0>" , 115 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR = { "ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR = { "ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEdoublegR = { "ROOT::TStlImpProxy<double>" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEDouble32_tgR = { "ROOT::TStlImpProxy<Double32_t>" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEfloatgR = { "ROOT::TStlImpProxy<float>" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEFloat16_tgR = { "ROOT::TStlImpProxy<Float16_t>" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEunsignedsPintgR = { "ROOT::TStlImpProxy<unsigned int>" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEunsignedsPlonggR = { "ROOT::TStlImpProxy<unsigned long>" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEunsignedsPlongsPlonggR = { "ROOT::TStlImpProxy<unsigned long long>" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEunsignedsPshortgR = { "ROOT::TStlImpProxy<unsigned short>" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEunsignedsPchargR = { "ROOT::TStlImpProxy<unsigned char>" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEintgR = { "ROOT::TStlImpProxy<int>" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTStlImpProxylElonggR = { "ROOT::TStlImpProxy<long>" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTStlImpProxylElongsPlonggR = { "ROOT::TStlImpProxy<long long>" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEshortgR = { "ROOT::TStlImpProxy<short>" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEchargR = { "ROOT::TStlImpProxy<char>" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEboolgR = { "ROOT::TStlImpProxy<bool>" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR = { "ROOT::TStlArrayProxy<ROOT::TArrayType<double,0> >" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEDouble32_tcO0gRsPgR = { "ROOT::TStlArrayProxy<ROOT::TArrayType<Double32_t,0> >" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR = { "ROOT::TStlArrayProxy<ROOT::TArrayType<float,0> >" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEFloat16_tcO0gRsPgR = { "ROOT::TStlArrayProxy<ROOT::TArrayType<Float16_t,0> >" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR = { "ROOT::TStlArrayProxy<ROOT::TArrayType<unsigned int,0> >" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR = { "ROOT::TStlArrayProxy<ROOT::TArrayType<unsigned long,0> >" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR = { "ROOT::TStlArrayProxy<ROOT::TArrayType<unsigned long long,0> >" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR = { "ROOT::TStlArrayProxy<ROOT::TArrayType<unsigned short,0> >" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR = { "ROOT::TStlArrayProxy<ROOT::TArrayType<unsigned char,0> >" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR = { "ROOT::TStlArrayProxy<ROOT::TArrayType<int,0> >" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR = { "ROOT::TStlArrayProxy<ROOT::TArrayType<long,0> >" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR = { "ROOT::TStlArrayProxy<ROOT::TArrayType<long long,0> >" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR = { "ROOT::TStlArrayProxy<ROOT::TArrayType<char,0> >" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR = { "ROOT::TStlArrayProxy<ROOT::TArrayType<bool,0> >" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_TChainIndex = { "TChainIndex" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_TChainIndexcLcLTChainIndexEntry = { "TChainIndex::TChainIndexEntry" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_vectorlETChainIndexcLcLTChainIndexEntrycOallocatorlETChainIndexcLcLTChainIndexEntrygRsPgR = { "vector<TChainIndex::TChainIndexEntry,allocator<TChainIndex::TChainIndexEntry> >" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_reverse_iteratorlEvectorlETChainIndexcLcLTChainIndexEntrycOallocatorlETChainIndexcLcLTChainIndexEntrygRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TChainIndex::TChainIndexEntry,allocator<TChainIndex::TChainIndexEntry> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_pairlETVirtualIndexmUcOintgR = { "pair<TVirtualIndex*,int>" , 115 , -1 };
G__linked_taginfo G__G__TreePlayerLN_TBox = { "TBox" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_TFileDrawMap = { "TFileDrawMap" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_TBranchElement = { "TBranchElement" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_pairlEintcOintgR = { "pair<int,int>" , 115 , -1 };
G__linked_taginfo G__G__TreePlayerLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR = { "vector<pair<int,int>,allocator<pair<int,int> > >" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_reverse_iteratorlEvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<int,int>,allocator<pair<int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_TFormLeafInfo = { "TFormLeafInfo" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_TFormLeafInfoMultiVarDim = { "TFormLeafInfoMultiVarDim" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTFriendProxyDescriptor = { "ROOT::TFriendProxyDescriptor" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_TTreeFormulaManager = { "TTreeFormulaManager" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_TSelectorDraw = { "TSelectorDraw" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_TSelectorDrawcLcLdA = { "TSelectorDraw::$" , 101 , -1 };
G__linked_taginfo G__G__TreePlayerLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_TSelectorEntries = { "TSelectorEntries" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_TTreeDrawArgsParser = { "TTreeDrawArgsParser" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_TTreeDrawArgsParsercLcLEOutputType = { "TTreeDrawArgsParser::EOutputType" , 101 , -1 };
G__linked_taginfo G__G__TreePlayerLN_TFormula = { "TFormula" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_TAxis = { "TAxis" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_TTreeFormulacLcLdA = { "TTreeFormula::$" , 101 , -1 };
G__linked_taginfo G__G__TreePlayerLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_TTreeIndex = { "TTreeIndex" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_TVirtualPerfStats = { "TVirtualPerfStats" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_TVirtualPerfStatscLcLEEventType = { "TVirtualPerfStats::EEventType" , 101 , -1 };
G__linked_taginfo G__G__TreePlayerLN_TStopwatch = { "TStopwatch" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_TPaveText = { "TPaveText" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_TGraphErrors = { "TGraphErrors" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_TGaxis = { "TGaxis" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_TText = { "TText" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_TTreePerfStats = { "TTreePerfStats" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_TTreePlayer = { "TTreePlayer" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_TVirtualTableInterface = { "TVirtualTableInterface" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_TTreeTableInterface = { "TTreeTableInterface" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTArrayTypelEshortcO0gR = { "ROOT::TArrayType<short,0>" , 115 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR = { "ROOT::TArrayProxy<ROOT::TArrayType<short,0> >" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR = { "ROOT::TArrayProxy<ROOT::TArrayType<char,0> >" , 99 , -1 };
G__linked_taginfo G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR = { "ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> >" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__TreePlayer() {
  G__G__TreePlayerLN_type_info.tagnum = -1 ;
  G__G__TreePlayerLN_TClass.tagnum = -1 ;
  G__G__TreePlayerLN_TBuffer.tagnum = -1 ;
  G__G__TreePlayerLN_TDirectory.tagnum = -1 ;
  G__G__TreePlayerLN_TMemberInspector.tagnum = -1 ;
  G__G__TreePlayerLN_TObject.tagnum = -1 ;
  G__G__TreePlayerLN_TNamed.tagnum = -1 ;
  G__G__TreePlayerLN_TVirtualCollectionProxy.tagnum = -1 ;
  G__G__TreePlayerLN_TVirtualIsAProxy.tagnum = -1 ;
  G__G__TreePlayerLN_ROOT.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTInitBehavior.tagnum = -1 ;
  G__G__TreePlayerLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__G__TreePlayerLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__TreePlayerLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__TreePlayerLN_TList.tagnum = -1 ;
  G__G__TreePlayerLN_TBrowser.tagnum = -1 ;
  G__G__TreePlayerLN_TObjArray.tagnum = -1 ;
  G__G__TreePlayerLN_TVirtualStreamerInfo.tagnum = -1 ;
  G__G__TreePlayerLN_TStreamerElement.tagnum = -1 ;
  G__G__TreePlayerLN_TString.tagnum = -1 ;
  G__G__TreePlayerLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__G__TreePlayerLN_TTree.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTBranchProxyDescriptor.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTBranchProxyClassDescriptor.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTBranchProxyClassDescriptorcLcLELocation.tagnum = -1 ;
  G__G__TreePlayerLN_TLeaf.tagnum = -1 ;
  G__G__TreePlayerLN_TFile.tagnum = -1 ;
  G__G__TreePlayerLN_TBranch.tagnum = -1 ;
  G__G__TreePlayerLN_TArrayI.tagnum = -1 ;
  G__G__TreePlayerLN_TMethodCall.tagnum = -1 ;
  G__G__TreePlayerLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__G__TreePlayerLN_TH1.tagnum = -1 ;
  G__G__TreePlayerLN_TTreeFormula.tagnum = -1 ;
  G__G__TreePlayerLN_TSQLResult.tagnum = -1 ;
  G__G__TreePlayerLN_TSelector.tagnum = -1 ;
  G__G__TreePlayerLN_TPrincipal.tagnum = -1 ;
  G__G__TreePlayerLN_TVirtualIndex.tagnum = -1 ;
  G__G__TreePlayerLN_TVirtualTreePlayer.tagnum = -1 ;
  G__G__TreePlayerLN_TEntryList.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTBranchProxy.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTFriendProxy.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTBranchProxyDirector.tagnum = -1 ;
  G__G__TreePlayerLN_listlEROOTcLcLTBranchProxymUcOallocatorlEROOTcLcLTBranchProxymUgRsPgR.tagnum = -1 ;
  G__G__TreePlayerLN_listlEROOTcLcLTFriendProxymUcOallocatorlEROOTcLcLTFriendProxymUgRsPgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTImpProxylEdoublegR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTImpProxylEDouble32_tgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTImpProxylEfloatgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTImpProxylEFloat16_tgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPintgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPlonggR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPlongsPlonggR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPshortgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPchargR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTImpProxylEintgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTImpProxylElonggR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTImpProxylElongsPlonggR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTImpProxylEshortgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTImpProxylEchargR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTImpProxylEboolgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTArrayTypelEdoublecO0gR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTArrayTypelEDouble32_tcO0gR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEDouble32_tcO0gRsPgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTArrayTypelEfloatcO0gR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTArrayTypelEFloat16_tcO0gR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEFloat16_tcO0gRsPgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTArrayTypelEunsignedsPintcO0gR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTArrayTypelEunsignedsPlongcO0gR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTArrayTypelEunsignedsPshortcO0gR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTArrayTypelEunsignedsPcharcO0gR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTArrayTypelEintcO0gR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTArrayTypelElongcO0gR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTArrayTypelElongsPlongcO0gR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTArrayTypelEboolcO0gR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEdoublegR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEDouble32_tgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEfloatgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEFloat16_tgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPintgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPlonggR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPlongsPlonggR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPshortgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPchargR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEintgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTClaImpProxylElonggR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTClaImpProxylElongsPlonggR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEshortgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEchargR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEboolgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEDouble32_tcO0gRsPgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEFloat16_tcO0gRsPgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTArrayTypelEcharcO0gR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEdoublegR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEDouble32_tgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEfloatgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEFloat16_tgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEunsignedsPintgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEunsignedsPlonggR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEunsignedsPlongsPlonggR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEunsignedsPshortgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEunsignedsPchargR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEintgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTStlImpProxylElonggR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTStlImpProxylElongsPlonggR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEshortgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEchargR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEboolgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEDouble32_tcO0gRsPgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEFloat16_tcO0gRsPgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR.tagnum = -1 ;
  G__G__TreePlayerLN_TChainIndex.tagnum = -1 ;
  G__G__TreePlayerLN_TChainIndexcLcLTChainIndexEntry.tagnum = -1 ;
  G__G__TreePlayerLN_vectorlETChainIndexcLcLTChainIndexEntrycOallocatorlETChainIndexcLcLTChainIndexEntrygRsPgR.tagnum = -1 ;
  G__G__TreePlayerLN_reverse_iteratorlEvectorlETChainIndexcLcLTChainIndexEntrycOallocatorlETChainIndexcLcLTChainIndexEntrygRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__TreePlayerLN_pairlETVirtualIndexmUcOintgR.tagnum = -1 ;
  G__G__TreePlayerLN_TBox.tagnum = -1 ;
  G__G__TreePlayerLN_TFileDrawMap.tagnum = -1 ;
  G__G__TreePlayerLN_TBranchElement.tagnum = -1 ;
  G__G__TreePlayerLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__G__TreePlayerLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__TreePlayerLN_pairlEintcOintgR.tagnum = -1 ;
  G__G__TreePlayerLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR.tagnum = -1 ;
  G__G__TreePlayerLN_reverse_iteratorlEvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__TreePlayerLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__G__TreePlayerLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__TreePlayerLN_TFormLeafInfo.tagnum = -1 ;
  G__G__TreePlayerLN_TFormLeafInfoMultiVarDim.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTFriendProxyDescriptor.tagnum = -1 ;
  G__G__TreePlayerLN_TTreeFormulaManager.tagnum = -1 ;
  G__G__TreePlayerLN_TSelectorDraw.tagnum = -1 ;
  G__G__TreePlayerLN_TSelectorDrawcLcLdA.tagnum = -1 ;
  G__G__TreePlayerLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__G__TreePlayerLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__TreePlayerLN_TSelectorEntries.tagnum = -1 ;
  G__G__TreePlayerLN_TTreeDrawArgsParser.tagnum = -1 ;
  G__G__TreePlayerLN_TTreeDrawArgsParsercLcLEOutputType.tagnum = -1 ;
  G__G__TreePlayerLN_TFormula.tagnum = -1 ;
  G__G__TreePlayerLN_TAxis.tagnum = -1 ;
  G__G__TreePlayerLN_TTreeFormulacLcLdA.tagnum = -1 ;
  G__G__TreePlayerLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__G__TreePlayerLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__TreePlayerLN_TTreeIndex.tagnum = -1 ;
  G__G__TreePlayerLN_TVirtualPerfStats.tagnum = -1 ;
  G__G__TreePlayerLN_TVirtualPerfStatscLcLEEventType.tagnum = -1 ;
  G__G__TreePlayerLN_TStopwatch.tagnum = -1 ;
  G__G__TreePlayerLN_TPaveText.tagnum = -1 ;
  G__G__TreePlayerLN_TGraphErrors.tagnum = -1 ;
  G__G__TreePlayerLN_TGaxis.tagnum = -1 ;
  G__G__TreePlayerLN_TText.tagnum = -1 ;
  G__G__TreePlayerLN_TTreePerfStats.tagnum = -1 ;
  G__G__TreePlayerLN_TTreePlayer.tagnum = -1 ;
  G__G__TreePlayerLN_TVirtualTableInterface.tagnum = -1 ;
  G__G__TreePlayerLN_TTreeTableInterface.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTArrayTypelEshortcO0gR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR.tagnum = -1 ;
  G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__TreePlayer() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_type_info);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_TDirectory);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_TNamed);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_TVirtualCollectionProxy);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_TVirtualIsAProxy);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOT),0,-1,0,(char*)NULL,G__setup_memvarROOT,G__setup_memfuncROOT);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_ROOTcLcLTInitBehavior);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_TList);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_TBrowser);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_TVirtualStreamerInfo);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_TStreamerElement);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_TString);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_TTree);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxyDescriptor),sizeof(ROOT::TBranchProxyDescriptor),-1,61440,"Describe the proxy for a branch",G__setup_memvarROOTcLcLTBranchProxyDescriptor,G__setup_memfuncROOTcLcLTBranchProxyDescriptor);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxyClassDescriptor),sizeof(ROOT::TBranchProxyClassDescriptor),-1,64000,"Class to cache the information we gathered about the branch and its content",G__setup_memvarROOTcLcLTBranchProxyClassDescriptor,G__setup_memfuncROOTcLcLTBranchProxyClassDescriptor);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_ROOTcLcLTBranchProxyClassDescriptorcLcLELocation);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_TLeaf);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_TFile);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_TBranch);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_TArrayI);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_TMethodCall);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_TH1);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormula),sizeof(TTreeFormula),-1,130816,"The Tree formula",G__setup_memvarTTreeFormula,G__setup_memfuncTTreeFormula);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_TSQLResult);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_TSelector);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_TPrincipal);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_TVirtualIndex);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_TVirtualTreePlayer);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_TEntryList);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxy),sizeof(ROOT::TBranchProxy),-1,296192,(char*)NULL,G__setup_memvarROOTcLcLTBranchProxy,G__setup_memfuncROOTcLcLTBranchProxy);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTFriendProxy),sizeof(ROOT::TFriendProxy),-1,295168,(char*)NULL,G__setup_memvarROOTcLcLTFriendProxy,G__setup_memfuncROOTcLcLTFriendProxy);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTBranchProxyDirector),sizeof(ROOT::TBranchProxyDirector),-1,297472,(char*)NULL,G__setup_memvarROOTcLcLTBranchProxyDirector,G__setup_memfuncROOTcLcLTBranchProxyDirector);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_listlEROOTcLcLTBranchProxymUcOallocatorlEROOTcLcLTBranchProxymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_listlEROOTcLcLTFriendProxymUcOallocatorlEROOTcLcLTFriendProxymUgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEdoublegR),sizeof(ROOT::TImpProxy<double>),-1,298240,(char*)NULL,G__setup_memvarROOTcLcLTImpProxylEdoublegR,G__setup_memfuncROOTcLcLTImpProxylEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEDouble32_tgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEfloatgR),sizeof(ROOT::TImpProxy<float>),-1,298240,(char*)NULL,G__setup_memvarROOTcLcLTImpProxylEfloatgR,G__setup_memfuncROOTcLcLTImpProxylEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEFloat16_tgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPintgR),sizeof(ROOT::TImpProxy<unsigned int>),-1,298240,(char*)NULL,G__setup_memvarROOTcLcLTImpProxylEunsignedsPintgR,G__setup_memfuncROOTcLcLTImpProxylEunsignedsPintgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPlonggR),sizeof(ROOT::TImpProxy<unsigned long>),-1,298240,(char*)NULL,G__setup_memvarROOTcLcLTImpProxylEunsignedsPlonggR,G__setup_memfuncROOTcLcLTImpProxylEunsignedsPlonggR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPlongsPlonggR),sizeof(ROOT::TImpProxy<unsigned long long>),-1,298240,(char*)NULL,G__setup_memvarROOTcLcLTImpProxylEunsignedsPlongsPlonggR,G__setup_memfuncROOTcLcLTImpProxylEunsignedsPlongsPlonggR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPshortgR),sizeof(ROOT::TImpProxy<unsigned short>),-1,298240,(char*)NULL,G__setup_memvarROOTcLcLTImpProxylEunsignedsPshortgR,G__setup_memfuncROOTcLcLTImpProxylEunsignedsPshortgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEunsignedsPchargR),sizeof(ROOT::TImpProxy<unsigned char>),-1,298240,(char*)NULL,G__setup_memvarROOTcLcLTImpProxylEunsignedsPchargR,G__setup_memfuncROOTcLcLTImpProxylEunsignedsPchargR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEintgR),sizeof(ROOT::TImpProxy<int>),-1,298240,(char*)NULL,G__setup_memvarROOTcLcLTImpProxylEintgR,G__setup_memfuncROOTcLcLTImpProxylEintgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylElonggR),sizeof(ROOT::TImpProxy<long>),-1,298240,(char*)NULL,G__setup_memvarROOTcLcLTImpProxylElonggR,G__setup_memfuncROOTcLcLTImpProxylElonggR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylElongsPlonggR),sizeof(ROOT::TImpProxy<long long>),-1,298240,(char*)NULL,G__setup_memvarROOTcLcLTImpProxylElongsPlonggR,G__setup_memfuncROOTcLcLTImpProxylElongsPlonggR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEshortgR),sizeof(ROOT::TImpProxy<short>),-1,298240,(char*)NULL,G__setup_memvarROOTcLcLTImpProxylEshortgR,G__setup_memfuncROOTcLcLTImpProxylEshortgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEchargR),sizeof(ROOT::TImpProxy<char>),-1,298240,(char*)NULL,G__setup_memvarROOTcLcLTImpProxylEchargR,G__setup_memfuncROOTcLcLTImpProxylEchargR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTImpProxylEboolgR),sizeof(ROOT::TImpProxy<bool>),-1,298240,(char*)NULL,G__setup_memvarROOTcLcLTImpProxylEboolgR,G__setup_memfuncROOTcLcLTImpProxylEboolgR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_ROOTcLcLTArrayTypelEdoublecO0gR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR),sizeof(ROOT::TArrayProxy<ROOT::TArrayType<double,0> >),-1,296192,(char*)NULL,G__setup_memvarROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR,G__setup_memfuncROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_ROOTcLcLTArrayTypelEDouble32_tcO0gR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEDouble32_tcO0gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_ROOTcLcLTArrayTypelEfloatcO0gR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR),sizeof(ROOT::TArrayProxy<ROOT::TArrayType<float,0> >),-1,296192,(char*)NULL,G__setup_memvarROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR,G__setup_memfuncROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_ROOTcLcLTArrayTypelEFloat16_tcO0gR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEFloat16_tcO0gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_ROOTcLcLTArrayTypelEunsignedsPintcO0gR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR),sizeof(ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >),-1,296192,(char*)NULL,G__setup_memvarROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR,G__setup_memfuncROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_ROOTcLcLTArrayTypelEunsignedsPlongcO0gR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR),sizeof(ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >),-1,296192,(char*)NULL,G__setup_memvarROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR,G__setup_memfuncROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_ROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR),sizeof(ROOT::TArrayProxy<ROOT::TArrayType<unsigned long long,0> >),-1,296192,(char*)NULL,G__setup_memvarROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR,G__setup_memfuncROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_ROOTcLcLTArrayTypelEunsignedsPshortcO0gR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR),sizeof(ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >),-1,296192,(char*)NULL,G__setup_memvarROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR,G__setup_memfuncROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_ROOTcLcLTArrayTypelEunsignedsPcharcO0gR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR),sizeof(ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >),-1,296192,(char*)NULL,G__setup_memvarROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR,G__setup_memfuncROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_ROOTcLcLTArrayTypelEintcO0gR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR),sizeof(ROOT::TArrayProxy<ROOT::TArrayType<int,0> >),-1,296192,(char*)NULL,G__setup_memvarROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR,G__setup_memfuncROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_ROOTcLcLTArrayTypelElongcO0gR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR),sizeof(ROOT::TArrayProxy<ROOT::TArrayType<long,0> >),-1,296192,(char*)NULL,G__setup_memvarROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR,G__setup_memfuncROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_ROOTcLcLTArrayTypelElongsPlongcO0gR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR),sizeof(ROOT::TArrayProxy<ROOT::TArrayType<long long,0> >),-1,296192,(char*)NULL,G__setup_memvarROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR,G__setup_memfuncROOTcLcLTArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_ROOTcLcLTArrayTypelEboolcO0gR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR),sizeof(ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >),-1,296192,(char*)NULL,G__setup_memvarROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR,G__setup_memfuncROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEdoublegR),sizeof(ROOT::TClaImpProxy<double>),-1,298240,(char*)NULL,G__setup_memvarROOTcLcLTClaImpProxylEdoublegR,G__setup_memfuncROOTcLcLTClaImpProxylEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEDouble32_tgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEfloatgR),sizeof(ROOT::TClaImpProxy<float>),-1,298240,(char*)NULL,G__setup_memvarROOTcLcLTClaImpProxylEfloatgR,G__setup_memfuncROOTcLcLTClaImpProxylEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEFloat16_tgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPintgR),sizeof(ROOT::TClaImpProxy<unsigned int>),-1,298240,(char*)NULL,G__setup_memvarROOTcLcLTClaImpProxylEunsignedsPintgR,G__setup_memfuncROOTcLcLTClaImpProxylEunsignedsPintgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPlonggR),sizeof(ROOT::TClaImpProxy<unsigned long>),-1,298240,(char*)NULL,G__setup_memvarROOTcLcLTClaImpProxylEunsignedsPlonggR,G__setup_memfuncROOTcLcLTClaImpProxylEunsignedsPlonggR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPlongsPlonggR),sizeof(ROOT::TClaImpProxy<unsigned long long>),-1,298240,(char*)NULL,G__setup_memvarROOTcLcLTClaImpProxylEunsignedsPlongsPlonggR,G__setup_memfuncROOTcLcLTClaImpProxylEunsignedsPlongsPlonggR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPshortgR),sizeof(ROOT::TClaImpProxy<unsigned short>),-1,298240,(char*)NULL,G__setup_memvarROOTcLcLTClaImpProxylEunsignedsPshortgR,G__setup_memfuncROOTcLcLTClaImpProxylEunsignedsPshortgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEunsignedsPchargR),sizeof(ROOT::TClaImpProxy<unsigned char>),-1,298240,(char*)NULL,G__setup_memvarROOTcLcLTClaImpProxylEunsignedsPchargR,G__setup_memfuncROOTcLcLTClaImpProxylEunsignedsPchargR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEintgR),sizeof(ROOT::TClaImpProxy<int>),-1,298240,(char*)NULL,G__setup_memvarROOTcLcLTClaImpProxylEintgR,G__setup_memfuncROOTcLcLTClaImpProxylEintgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylElonggR),sizeof(ROOT::TClaImpProxy<long>),-1,298240,(char*)NULL,G__setup_memvarROOTcLcLTClaImpProxylElonggR,G__setup_memfuncROOTcLcLTClaImpProxylElonggR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylElongsPlonggR),sizeof(ROOT::TClaImpProxy<long long>),-1,298240,(char*)NULL,G__setup_memvarROOTcLcLTClaImpProxylElongsPlonggR,G__setup_memfuncROOTcLcLTClaImpProxylElongsPlonggR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEshortgR),sizeof(ROOT::TClaImpProxy<short>),-1,298240,(char*)NULL,G__setup_memvarROOTcLcLTClaImpProxylEshortgR,G__setup_memfuncROOTcLcLTClaImpProxylEshortgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEchargR),sizeof(ROOT::TClaImpProxy<char>),-1,298240,(char*)NULL,G__setup_memvarROOTcLcLTClaImpProxylEchargR,G__setup_memfuncROOTcLcLTClaImpProxylEchargR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaImpProxylEboolgR),sizeof(ROOT::TClaImpProxy<bool>),-1,298240,(char*)NULL,G__setup_memvarROOTcLcLTClaImpProxylEboolgR,G__setup_memfuncROOTcLcLTClaImpProxylEboolgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR),sizeof(ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> >),-1,296192,(char*)NULL,G__setup_memvarROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR,G__setup_memfuncROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEDouble32_tcO0gRsPgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR),sizeof(ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> >),-1,296192,(char*)NULL,G__setup_memvarROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR,G__setup_memfuncROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEFloat16_tcO0gRsPgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR),sizeof(ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >),-1,296192,(char*)NULL,G__setup_memvarROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR,G__setup_memfuncROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR),sizeof(ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> >),-1,296192,(char*)NULL,G__setup_memvarROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR,G__setup_memfuncROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR),sizeof(ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long long,0> >),-1,296192,(char*)NULL,G__setup_memvarROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR,G__setup_memfuncROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR),sizeof(ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> >),-1,296192,(char*)NULL,G__setup_memvarROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR,G__setup_memfuncROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR),sizeof(ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> >),-1,296192,(char*)NULL,G__setup_memvarROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR,G__setup_memfuncROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR),sizeof(ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >),-1,296192,(char*)NULL,G__setup_memvarROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR,G__setup_memfuncROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR),sizeof(ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >),-1,296192,(char*)NULL,G__setup_memvarROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR,G__setup_memfuncROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR),sizeof(ROOT::TClaArrayProxy<ROOT::TArrayType<long long,0> >),-1,296192,(char*)NULL,G__setup_memvarROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR,G__setup_memfuncROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_ROOTcLcLTArrayTypelEcharcO0gR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR),sizeof(ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >),-1,296192,(char*)NULL,G__setup_memvarROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR,G__setup_memfuncROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR),sizeof(ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >),-1,296192,(char*)NULL,G__setup_memvarROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR,G__setup_memfuncROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEDouble32_tgR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEFloat16_tgR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEunsignedsPintgR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEunsignedsPlonggR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEunsignedsPlongsPlonggR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEunsignedsPshortgR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEunsignedsPchargR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEintgR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_ROOTcLcLTStlImpProxylElonggR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_ROOTcLcLTStlImpProxylElongsPlonggR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEshortgR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEchargR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_ROOTcLcLTStlImpProxylEboolgR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEdoublecO0gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEDouble32_tcO0gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEfloatcO0gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEFloat16_tcO0gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEunsignedsPintcO0gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongcO0gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEunsignedsPlongsPlongcO0gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEunsignedsPshortcO0gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEunsignedsPcharcO0gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEintcO0gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelElongcO0gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelElongsPlongcO0gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_ROOTcLcLTStlArrayProxylEROOTcLcLTArrayTypelEboolcO0gRsPgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_TChainIndex),sizeof(TChainIndex),-1,324864,"A Tree Index with majorname and minorname.",G__setup_memvarTChainIndex,G__setup_memfuncTChainIndex);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_TChainIndexcLcLTChainIndexEntry),sizeof(TChainIndex::TChainIndexEntry),-1,262400,(char*)NULL,G__setup_memvarTChainIndexcLcLTChainIndexEntry,G__setup_memfuncTChainIndexcLcLTChainIndexEntry);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_vectorlETChainIndexcLcLTChainIndexEntrycOallocatorlETChainIndexcLcLTChainIndexEntrygRsPgR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_reverse_iteratorlEvectorlETChainIndexcLcLTChainIndexEntrycOallocatorlETChainIndexcLcLTChainIndexEntrygRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_pairlETVirtualIndexmUcOintgR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_TBox);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_TFileDrawMap),sizeof(TFileDrawMap),-1,324864,"Draw a 2-d map of the objects in a file",G__setup_memvarTFileDrawMap,G__setup_memfuncTFileDrawMap);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_TBranchElement);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_pairlEintcOintgR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_reverse_iteratorlEvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_TFormLeafInfo);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_TFormLeafInfoMultiVarDim);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTFriendProxyDescriptor),sizeof(ROOT::TFriendProxyDescriptor),-1,64000,"Describe a branch from a TTreeFriend.",G__setup_memvarROOTcLcLTFriendProxyDescriptor,G__setup_memfuncROOTcLcLTFriendProxyDescriptor);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeFormulaManager),sizeof(TTreeFormulaManager),-1,32512,"A class coordinating several TTreeFormula objects.",G__setup_memvarTTreeFormulaManager,G__setup_memfuncTTreeFormulaManager);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_TSelectorDraw),sizeof(TSelectorDraw),-1,32512,"A specialized TSelector for TTree::Draw",G__setup_memvarTSelectorDraw,G__setup_memfuncTSelectorDraw);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_TSelectorDrawcLcLdA);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_TSelectorEntries),sizeof(TSelectorEntries),-1,62720,"A specialized TSelector for TTree::GetEntries(selection)",G__setup_memvarTSelectorEntries,G__setup_memfuncTSelectorEntries);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeDrawArgsParser),sizeof(TTreeDrawArgsParser),-1,292096,"Helper class to parse the argument to TTree::Draw",G__setup_memvarTTreeDrawArgsParser,G__setup_memfuncTTreeDrawArgsParser);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_TTreeDrawArgsParsercLcLEOutputType);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_TFormula);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_TAxis);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_TTreeFormulacLcLdA);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeIndex),sizeof(TTreeIndex),-1,128256,"A Tree Index with majorname and minorname.",G__setup_memvarTTreeIndex,G__setup_memfuncTTreeIndex);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_TVirtualPerfStats);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_TVirtualPerfStatscLcLEEventType);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_TStopwatch);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_TPaveText);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_TGraphErrors);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_TGaxis);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_TText);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_TTreePerfStats),sizeof(TTreePerfStats),-1,324864,"TTree I/O performance measurement",G__setup_memvarTTreePerfStats,G__setup_memfuncTTreePerfStats);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_TTreePlayer),sizeof(TTreePlayer),-1,294656,"Manager class to play with TTrees",G__setup_memvarTTreePlayer,G__setup_memfuncTTreePlayer);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_TVirtualTableInterface);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_TTreeTableInterface),sizeof(TTreeTableInterface),-1,1280,"Interface to data in a TTree",G__setup_memvarTTreeTableInterface,G__setup_memfuncTTreeTableInterface);
   G__get_linked_tagnum_fwd(&G__G__TreePlayerLN_ROOTcLcLTArrayTypelEshortcO0gR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR),sizeof(ROOT::TArrayProxy<ROOT::TArrayType<short,0> >),-1,296192,(char*)NULL,G__setup_memvarROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR,G__setup_memfuncROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR),sizeof(ROOT::TArrayProxy<ROOT::TArrayType<char,0> >),-1,296192,(char*)NULL,G__setup_memvarROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR,G__setup_memfuncROOTcLcLTArrayProxylEROOTcLcLTArrayTypelEcharcO0gRsPgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreePlayerLN_ROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR),sizeof(ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> >),-1,296192,(char*)NULL,G__setup_memvarROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR,G__setup_memfuncROOTcLcLTClaArrayProxylEROOTcLcLTArrayTypelEshortcO0gRsPgR);
}
extern "C" void G__cpp_setupG__TreePlayer(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__TreePlayer()");
  G__set_cpp_environmentG__TreePlayer();
  G__cpp_setup_tagtableG__TreePlayer();

  G__cpp_setup_inheritanceG__TreePlayer();

  G__cpp_setup_typetableG__TreePlayer();

  G__cpp_setup_memvarG__TreePlayer();

  G__cpp_setup_memfuncG__TreePlayer();
  G__cpp_setup_globalG__TreePlayer();
  G__cpp_setup_funcG__TreePlayer();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__TreePlayer();
  return;
}
class G__cpp_setup_initG__TreePlayer {
  public:
    G__cpp_setup_initG__TreePlayer() { G__add_setup_func("G__TreePlayer",(G__incsetup)(&G__cpp_setupG__TreePlayer)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__TreePlayer() { G__remove_setup_func("G__TreePlayer"); }
};
G__cpp_setup_initG__TreePlayer G__cpp_setup_initializerG__TreePlayer;

