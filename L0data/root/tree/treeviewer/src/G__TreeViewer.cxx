//
// File generated by core/utils/src/rootcint_tmp at Mon Apr 13 13:44:45 2015

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__TreeViewer.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TTreeViewer_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TTreeViewer(void *p = 0);
   static void *newArray_TTreeViewer(Long_t size, void *p);
   static void delete_TTreeViewer(void *p);
   static void deleteArray_TTreeViewer(void *p);
   static void destruct_TTreeViewer(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TTreeViewer*)
   {
      ::TTreeViewer *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TTreeViewer >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TTreeViewer", ::TTreeViewer::Class_Version(), "include/TTreeViewer.h", 56,
                  typeid(::TTreeViewer), DefineBehavior(ptr, ptr),
                  &::TTreeViewer::Dictionary, isa_proxy, 4,
                  sizeof(::TTreeViewer) );
      instance.SetNew(&new_TTreeViewer);
      instance.SetNewArray(&newArray_TTreeViewer);
      instance.SetDelete(&delete_TTreeViewer);
      instance.SetDeleteArray(&deleteArray_TTreeViewer);
      instance.SetDestructor(&destruct_TTreeViewer);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TTreeViewer*)
   {
      return GenerateInitInstanceLocal((::TTreeViewer*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TTreeViewer*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TTVLVContainer_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TTVLVContainer(void *p);
   static void deleteArray_TTVLVContainer(void *p);
   static void destruct_TTVLVContainer(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TTVLVContainer*)
   {
      ::TTVLVContainer *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TTVLVContainer >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TTVLVContainer", ::TTVLVContainer::Class_Version(), "include/TTVLVContainer.h", 112,
                  typeid(::TTVLVContainer), DefineBehavior(ptr, ptr),
                  &::TTVLVContainer::Dictionary, isa_proxy, 4,
                  sizeof(::TTVLVContainer) );
      instance.SetDelete(&delete_TTVLVContainer);
      instance.SetDeleteArray(&deleteArray_TTVLVContainer);
      instance.SetDestructor(&destruct_TTVLVContainer);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TTVLVContainer*)
   {
      return GenerateInitInstanceLocal((::TTVLVContainer*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TTVLVContainer*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TTVLVEntry_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TTVLVEntry(void *p);
   static void deleteArray_TTVLVEntry(void *p);
   static void destruct_TTVLVEntry(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TTVLVEntry*)
   {
      ::TTVLVEntry *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TTVLVEntry >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TTVLVEntry", ::TTVLVEntry::Class_Version(), "include/TTVLVContainer.h", 58,
                  typeid(::TTVLVEntry), DefineBehavior(ptr, ptr),
                  &::TTVLVEntry::Dictionary, isa_proxy, 4,
                  sizeof(::TTVLVEntry) );
      instance.SetDelete(&delete_TTVLVEntry);
      instance.SetDeleteArray(&deleteArray_TTVLVEntry);
      instance.SetDestructor(&destruct_TTVLVEntry);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TTVLVEntry*)
   {
      return GenerateInitInstanceLocal((::TTVLVEntry*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TTVLVEntry*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TTVSession_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TTVSession(void *p);
   static void deleteArray_TTVSession(void *p);
   static void destruct_TTVSession(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TTVSession*)
   {
      ::TTVSession *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TTVSession >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TTVSession", ::TTVSession::Class_Version(), "include/TTVSession.h", 71,
                  typeid(::TTVSession), DefineBehavior(ptr, ptr),
                  &::TTVSession::Dictionary, isa_proxy, 4,
                  sizeof(::TTVSession) );
      instance.SetDelete(&delete_TTVSession);
      instance.SetDeleteArray(&deleteArray_TTVSession);
      instance.SetDestructor(&destruct_TTVSession);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TTVSession*)
   {
      return GenerateInitInstanceLocal((::TTVSession*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TTVSession*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TGSelectBox_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TGSelectBox(void *p);
   static void deleteArray_TGSelectBox(void *p);
   static void destruct_TGSelectBox(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TGSelectBox*)
   {
      ::TGSelectBox *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TGSelectBox >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TGSelectBox", ::TGSelectBox::Class_Version(), "include/TTVLVContainer.h", 158,
                  typeid(::TGSelectBox), DefineBehavior(ptr, ptr),
                  &::TGSelectBox::Dictionary, isa_proxy, 4,
                  sizeof(::TGSelectBox) );
      instance.SetDelete(&delete_TGSelectBox);
      instance.SetDeleteArray(&deleteArray_TGSelectBox);
      instance.SetDestructor(&destruct_TGSelectBox);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TGSelectBox*)
   {
      return GenerateInitInstanceLocal((::TGSelectBox*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TGSelectBox*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TTVRecord_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TTVRecord(void *p = 0);
   static void *newArray_TTVRecord(Long_t size, void *p);
   static void delete_TTVRecord(void *p);
   static void deleteArray_TTVRecord(void *p);
   static void destruct_TTVRecord(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TTVRecord*)
   {
      ::TTVRecord *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TTVRecord >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TTVRecord", ::TTVRecord::Class_Version(), "include/TTVSession.h", 30,
                  typeid(::TTVRecord), DefineBehavior(ptr, ptr),
                  &::TTVRecord::Dictionary, isa_proxy, 4,
                  sizeof(::TTVRecord) );
      instance.SetNew(&new_TTVRecord);
      instance.SetNewArray(&newArray_TTVRecord);
      instance.SetDelete(&delete_TTVRecord);
      instance.SetDeleteArray(&deleteArray_TTVRecord);
      instance.SetDestructor(&destruct_TTVRecord);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TTVRecord*)
   {
      return GenerateInitInstanceLocal((::TTVRecord*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TTVRecord*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TGItemContext_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TGItemContext(void *p = 0);
   static void *newArray_TGItemContext(Long_t size, void *p);
   static void delete_TGItemContext(void *p);
   static void deleteArray_TGItemContext(void *p);
   static void destruct_TGItemContext(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TGItemContext*)
   {
      ::TGItemContext *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TGItemContext >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TGItemContext", ::TGItemContext::Class_Version(), "include/TTVLVContainer.h", 38,
                  typeid(::TGItemContext), DefineBehavior(ptr, ptr),
                  &::TGItemContext::Dictionary, isa_proxy, 4,
                  sizeof(::TGItemContext) );
      instance.SetNew(&new_TGItemContext);
      instance.SetNewArray(&newArray_TGItemContext);
      instance.SetDelete(&delete_TGItemContext);
      instance.SetDeleteArray(&deleteArray_TGItemContext);
      instance.SetDestructor(&destruct_TGItemContext);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TGItemContext*)
   {
      return GenerateInitInstanceLocal((::TGItemContext*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TGItemContext*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSpider_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TSpider(void *p = 0);
   static void *newArray_TSpider(Long_t size, void *p);
   static void delete_TSpider(void *p);
   static void deleteArray_TSpider(void *p);
   static void destruct_TSpider(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSpider*)
   {
      ::TSpider *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSpider >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSpider", ::TSpider::Class_Version(), "include/TSpider.h", 52,
                  typeid(::TSpider), DefineBehavior(ptr, ptr),
                  &::TSpider::Dictionary, isa_proxy, 4,
                  sizeof(::TSpider) );
      instance.SetNew(&new_TSpider);
      instance.SetNewArray(&newArray_TSpider);
      instance.SetDelete(&delete_TSpider);
      instance.SetDeleteArray(&deleteArray_TSpider);
      instance.SetDestructor(&destruct_TSpider);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSpider*)
   {
      return GenerateInitInstanceLocal((::TSpider*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSpider*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSpiderEditor_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TSpiderEditor(void *p = 0);
   static void *newArray_TSpiderEditor(Long_t size, void *p);
   static void delete_TSpiderEditor(void *p);
   static void deleteArray_TSpiderEditor(void *p);
   static void destruct_TSpiderEditor(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSpiderEditor*)
   {
      ::TSpiderEditor *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSpiderEditor >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSpiderEditor", ::TSpiderEditor::Class_Version(), "include/TSpiderEditor.h", 41,
                  typeid(::TSpiderEditor), DefineBehavior(ptr, ptr),
                  &::TSpiderEditor::Dictionary, isa_proxy, 0,
                  sizeof(::TSpiderEditor) );
      instance.SetNew(&new_TSpiderEditor);
      instance.SetNewArray(&newArray_TSpiderEditor);
      instance.SetDelete(&delete_TSpiderEditor);
      instance.SetDeleteArray(&deleteArray_TSpiderEditor);
      instance.SetDestructor(&destruct_TSpiderEditor);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSpiderEditor*)
   {
      return GenerateInitInstanceLocal((::TSpiderEditor*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSpiderEditor*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TParallelCoordSelect_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TParallelCoordSelect(void *p = 0);
   static void *newArray_TParallelCoordSelect(Long_t size, void *p);
   static void delete_TParallelCoordSelect(void *p);
   static void deleteArray_TParallelCoordSelect(void *p);
   static void destruct_TParallelCoordSelect(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TParallelCoordSelect*)
   {
      ::TParallelCoordSelect *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TParallelCoordSelect >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TParallelCoordSelect", ::TParallelCoordSelect::Class_Version(), "include/TParallelCoordRange.h", 87,
                  typeid(::TParallelCoordSelect), DefineBehavior(ptr, ptr),
                  &::TParallelCoordSelect::Dictionary, isa_proxy, 4,
                  sizeof(::TParallelCoordSelect) );
      instance.SetNew(&new_TParallelCoordSelect);
      instance.SetNewArray(&newArray_TParallelCoordSelect);
      instance.SetDelete(&delete_TParallelCoordSelect);
      instance.SetDeleteArray(&deleteArray_TParallelCoordSelect);
      instance.SetDestructor(&destruct_TParallelCoordSelect);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TParallelCoordSelect*)
   {
      return GenerateInitInstanceLocal((::TParallelCoordSelect*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TParallelCoordSelect*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TParallelCoordVar_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TParallelCoordVar(void *p = 0);
   static void *newArray_TParallelCoordVar(Long_t size, void *p);
   static void delete_TParallelCoordVar(void *p);
   static void deleteArray_TParallelCoordVar(void *p);
   static void destruct_TParallelCoordVar(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TParallelCoordVar*)
   {
      ::TParallelCoordVar *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TParallelCoordVar >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TParallelCoordVar", ::TParallelCoordVar::Class_Version(), "include/TParallelCoordVar.h", 30,
                  typeid(::TParallelCoordVar), DefineBehavior(ptr, ptr),
                  &::TParallelCoordVar::Dictionary, isa_proxy, 4,
                  sizeof(::TParallelCoordVar) );
      instance.SetNew(&new_TParallelCoordVar);
      instance.SetNewArray(&newArray_TParallelCoordVar);
      instance.SetDelete(&delete_TParallelCoordVar);
      instance.SetDeleteArray(&deleteArray_TParallelCoordVar);
      instance.SetDestructor(&destruct_TParallelCoordVar);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TParallelCoordVar*)
   {
      return GenerateInitInstanceLocal((::TParallelCoordVar*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TParallelCoordVar*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TParallelCoordRange_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TParallelCoordRange(void *p = 0);
   static void *newArray_TParallelCoordRange(Long_t size, void *p);
   static void delete_TParallelCoordRange(void *p);
   static void deleteArray_TParallelCoordRange(void *p);
   static void destruct_TParallelCoordRange(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TParallelCoordRange*)
   {
      ::TParallelCoordRange *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TParallelCoordRange >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TParallelCoordRange", ::TParallelCoordRange::Class_Version(), "include/TParallelCoordRange.h", 29,
                  typeid(::TParallelCoordRange), DefineBehavior(ptr, ptr),
                  &::TParallelCoordRange::Dictionary, isa_proxy, 4,
                  sizeof(::TParallelCoordRange) );
      instance.SetNew(&new_TParallelCoordRange);
      instance.SetNewArray(&newArray_TParallelCoordRange);
      instance.SetDelete(&delete_TParallelCoordRange);
      instance.SetDeleteArray(&deleteArray_TParallelCoordRange);
      instance.SetDestructor(&destruct_TParallelCoordRange);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TParallelCoordRange*)
   {
      return GenerateInitInstanceLocal((::TParallelCoordRange*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TParallelCoordRange*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TParallelCoord_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TParallelCoord(void *p = 0);
   static void *newArray_TParallelCoord(Long_t size, void *p);
   static void delete_TParallelCoord(void *p);
   static void deleteArray_TParallelCoord(void *p);
   static void destruct_TParallelCoord(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TParallelCoord*)
   {
      ::TParallelCoord *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TParallelCoord >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TParallelCoord", ::TParallelCoord::Class_Version(), "include/TParallelCoord.h", 32,
                  typeid(::TParallelCoord), DefineBehavior(ptr, ptr),
                  &::TParallelCoord::Dictionary, isa_proxy, 4,
                  sizeof(::TParallelCoord) );
      instance.SetNew(&new_TParallelCoord);
      instance.SetNewArray(&newArray_TParallelCoord);
      instance.SetDelete(&delete_TParallelCoord);
      instance.SetDeleteArray(&deleteArray_TParallelCoord);
      instance.SetDestructor(&destruct_TParallelCoord);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TParallelCoord*)
   {
      return GenerateInitInstanceLocal((::TParallelCoord*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TParallelCoord*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TParallelCoordEditor_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TParallelCoordEditor(void *p = 0);
   static void *newArray_TParallelCoordEditor(Long_t size, void *p);
   static void delete_TParallelCoordEditor(void *p);
   static void deleteArray_TParallelCoordEditor(void *p);
   static void destruct_TParallelCoordEditor(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TParallelCoordEditor*)
   {
      ::TParallelCoordEditor *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TParallelCoordEditor >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TParallelCoordEditor", ::TParallelCoordEditor::Class_Version(), "include/TParallelCoordEditor.h", 32,
                  typeid(::TParallelCoordEditor), DefineBehavior(ptr, ptr),
                  &::TParallelCoordEditor::Dictionary, isa_proxy, 0,
                  sizeof(::TParallelCoordEditor) );
      instance.SetNew(&new_TParallelCoordEditor);
      instance.SetNewArray(&newArray_TParallelCoordEditor);
      instance.SetDelete(&delete_TParallelCoordEditor);
      instance.SetDeleteArray(&deleteArray_TParallelCoordEditor);
      instance.SetDestructor(&destruct_TParallelCoordEditor);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TParallelCoordEditor*)
   {
      return GenerateInitInstanceLocal((::TParallelCoordEditor*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TParallelCoordEditor*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TGTreeTable_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TGTreeTable(void *p = 0);
   static void *newArray_TGTreeTable(Long_t size, void *p);
   static void delete_TGTreeTable(void *p);
   static void deleteArray_TGTreeTable(void *p);
   static void destruct_TGTreeTable(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TGTreeTable*)
   {
      ::TGTreeTable *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TGTreeTable >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TGTreeTable", ::TGTreeTable::Class_Version(), "include/TGTreeTable.h", 21,
                  typeid(::TGTreeTable), DefineBehavior(ptr, ptr),
                  &::TGTreeTable::Dictionary, isa_proxy, 0,
                  sizeof(::TGTreeTable) );
      instance.SetNew(&new_TGTreeTable);
      instance.SetNewArray(&newArray_TGTreeTable);
      instance.SetDelete(&delete_TGTreeTable);
      instance.SetDeleteArray(&deleteArray_TGTreeTable);
      instance.SetDestructor(&destruct_TGTreeTable);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TGTreeTable*)
   {
      return GenerateInitInstanceLocal((::TGTreeTable*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TGTreeTable*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TTreeViewer::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TTreeViewer::Class_Name()
{
   return "TTreeViewer";
}

//______________________________________________________________________________
const char *TTreeViewer::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TTreeViewer*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTreeViewer::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TTreeViewer*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTreeViewer::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TTreeViewer*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTreeViewer::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TTreeViewer*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TTVLVContainer::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TTVLVContainer::Class_Name()
{
   return "TTVLVContainer";
}

//______________________________________________________________________________
const char *TTVLVContainer::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TTVLVContainer*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTVLVContainer::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TTVLVContainer*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTVLVContainer::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TTVLVContainer*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTVLVContainer::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TTVLVContainer*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TTVLVEntry::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TTVLVEntry::Class_Name()
{
   return "TTVLVEntry";
}

//______________________________________________________________________________
const char *TTVLVEntry::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TTVLVEntry*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTVLVEntry::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TTVLVEntry*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTVLVEntry::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TTVLVEntry*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTVLVEntry::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TTVLVEntry*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TTVSession::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TTVSession::Class_Name()
{
   return "TTVSession";
}

//______________________________________________________________________________
const char *TTVSession::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TTVSession*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTVSession::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TTVSession*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTVSession::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TTVSession*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTVSession::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TTVSession*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGSelectBox::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGSelectBox::Class_Name()
{
   return "TGSelectBox";
}

//______________________________________________________________________________
const char *TGSelectBox::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TGSelectBox*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGSelectBox::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TGSelectBox*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGSelectBox::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TGSelectBox*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGSelectBox::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TGSelectBox*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TTVRecord::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TTVRecord::Class_Name()
{
   return "TTVRecord";
}

//______________________________________________________________________________
const char *TTVRecord::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TTVRecord*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTVRecord::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TTVRecord*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTVRecord::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TTVRecord*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTVRecord::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TTVRecord*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGItemContext::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGItemContext::Class_Name()
{
   return "TGItemContext";
}

//______________________________________________________________________________
const char *TGItemContext::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TGItemContext*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGItemContext::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TGItemContext*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGItemContext::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TGItemContext*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGItemContext::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TGItemContext*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSpider::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSpider::Class_Name()
{
   return "TSpider";
}

//______________________________________________________________________________
const char *TSpider::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSpider*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSpider::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSpider*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSpider::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSpider*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSpider::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSpider*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSpiderEditor::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSpiderEditor::Class_Name()
{
   return "TSpiderEditor";
}

//______________________________________________________________________________
const char *TSpiderEditor::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSpiderEditor*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSpiderEditor::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSpiderEditor*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSpiderEditor::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSpiderEditor*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSpiderEditor::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSpiderEditor*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TParallelCoordSelect::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TParallelCoordSelect::Class_Name()
{
   return "TParallelCoordSelect";
}

//______________________________________________________________________________
const char *TParallelCoordSelect::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TParallelCoordSelect*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TParallelCoordSelect::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TParallelCoordSelect*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TParallelCoordSelect::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TParallelCoordSelect*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TParallelCoordSelect::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TParallelCoordSelect*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TParallelCoordVar::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TParallelCoordVar::Class_Name()
{
   return "TParallelCoordVar";
}

//______________________________________________________________________________
const char *TParallelCoordVar::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TParallelCoordVar*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TParallelCoordVar::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TParallelCoordVar*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TParallelCoordVar::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TParallelCoordVar*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TParallelCoordVar::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TParallelCoordVar*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TParallelCoordRange::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TParallelCoordRange::Class_Name()
{
   return "TParallelCoordRange";
}

//______________________________________________________________________________
const char *TParallelCoordRange::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TParallelCoordRange*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TParallelCoordRange::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TParallelCoordRange*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TParallelCoordRange::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TParallelCoordRange*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TParallelCoordRange::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TParallelCoordRange*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TParallelCoord::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TParallelCoord::Class_Name()
{
   return "TParallelCoord";
}

//______________________________________________________________________________
const char *TParallelCoord::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TParallelCoord*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TParallelCoord::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TParallelCoord*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TParallelCoord::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TParallelCoord*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TParallelCoord::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TParallelCoord*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TParallelCoordEditor::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TParallelCoordEditor::Class_Name()
{
   return "TParallelCoordEditor";
}

//______________________________________________________________________________
const char *TParallelCoordEditor::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TParallelCoordEditor*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TParallelCoordEditor::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TParallelCoordEditor*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TParallelCoordEditor::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TParallelCoordEditor*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TParallelCoordEditor::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TParallelCoordEditor*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGTreeTable::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGTreeTable::Class_Name()
{
   return "TGTreeTable";
}

//______________________________________________________________________________
const char *TGTreeTable::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TGTreeTable*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGTreeTable::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TGTreeTable*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGTreeTable::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TGTreeTable*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGTreeTable::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TGTreeTable*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TTreeViewer::Streamer(TBuffer &R__b)
{
   // Stream an object of class TTreeViewer.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TTreeViewer::Class(),this);
   } else {
      R__b.WriteClassBuffer(TTreeViewer::Class(),this);
   }
}

//______________________________________________________________________________
void TTreeViewer::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TTreeViewer.
      TClass *R__cl = ::TTreeViewer::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fTree", &fTree);
      R__insp.Inspect(R__cl, R__parent, "*fSession", &fSession);
      R__insp.Inspect(R__cl, R__parent, "*fFilename", &fFilename);
      R__insp.Inspect(R__cl, R__parent, "*fSourceFile", &fSourceFile);
      R__insp.Inspect(R__cl, R__parent, "fLastOption", &fLastOption);
      fLastOption.ShowMembers(R__insp, strcat(R__parent,"fLastOption.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fMappedTree", &fMappedTree);
      R__insp.Inspect(R__cl, R__parent, "*fMappedBranch", &fMappedBranch);
      R__insp.Inspect(R__cl, R__parent, "fDimension", &fDimension);
      R__insp.Inspect(R__cl, R__parent, "fVarDraw", &fVarDraw);
      R__insp.Inspect(R__cl, R__parent, "fScanMode", &fScanMode);
      R__insp.Inspect(R__cl, R__parent, "*fContextMenu", &fContextMenu);
      R__insp.Inspect(R__cl, R__parent, "*fDialogBox", &fDialogBox);
      R__insp.Inspect(R__cl, R__parent, "*fTreeList", &fTreeList);
      R__insp.Inspect(R__cl, R__parent, "fTreeIndex", &fTreeIndex);
      R__insp.Inspect(R__cl, R__parent, "*fPicX", &fPicX);
      R__insp.Inspect(R__cl, R__parent, "*fPicY", &fPicY);
      R__insp.Inspect(R__cl, R__parent, "*fPicZ", &fPicZ);
      R__insp.Inspect(R__cl, R__parent, "*fPicDraw", &fPicDraw);
      R__insp.Inspect(R__cl, R__parent, "*fPicStop", &fPicStop);
      R__insp.Inspect(R__cl, R__parent, "*fPicRefr", &fPicRefr);
      R__insp.Inspect(R__cl, R__parent, "fDefaultCursor", &fDefaultCursor);
      R__insp.Inspect(R__cl, R__parent, "fWatchCursor", &fWatchCursor);
      R__insp.Inspect(R__cl, R__parent, "*fTimer", &fTimer);
      R__insp.Inspect(R__cl, R__parent, "fCounting", &fCounting);
      R__insp.Inspect(R__cl, R__parent, "fStopMapping", &fStopMapping);
      R__insp.Inspect(R__cl, R__parent, "fEnableCut", &fEnableCut);
      R__insp.Inspect(R__cl, R__parent, "fNexpressions", &fNexpressions);
      R__insp.Inspect(R__cl, R__parent, "*fMenuBarLayout", &fMenuBarLayout);
      R__insp.Inspect(R__cl, R__parent, "*fMenuBarItemLayout", &fMenuBarItemLayout);
      R__insp.Inspect(R__cl, R__parent, "*fMenuBarHelpLayout", &fMenuBarHelpLayout);
      R__insp.Inspect(R__cl, R__parent, "*fMenuBar", &fMenuBar);
      R__insp.Inspect(R__cl, R__parent, "*fFileMenu", &fFileMenu);
      R__insp.Inspect(R__cl, R__parent, "*fEditMenu", &fEditMenu);
      R__insp.Inspect(R__cl, R__parent, "*fRunMenu", &fRunMenu);
      R__insp.Inspect(R__cl, R__parent, "*fOptionsMenu", &fOptionsMenu);
      R__insp.Inspect(R__cl, R__parent, "*fOptionsGen", &fOptionsGen);
      R__insp.Inspect(R__cl, R__parent, "*fOptions1D", &fOptions1D);
      R__insp.Inspect(R__cl, R__parent, "*fOptions2D", &fOptions2D);
      R__insp.Inspect(R__cl, R__parent, "*fHelpMenu", &fHelpMenu);
      R__insp.Inspect(R__cl, R__parent, "*fToolBar", &fToolBar);
      R__insp.Inspect(R__cl, R__parent, "*fBarLayout", &fBarLayout);
      R__insp.Inspect(R__cl, R__parent, "*fBarLbl1", &fBarLbl1);
      R__insp.Inspect(R__cl, R__parent, "*fBarLbl2", &fBarLbl2);
      R__insp.Inspect(R__cl, R__parent, "*fBarLbl3", &fBarLbl3);
      R__insp.Inspect(R__cl, R__parent, "*fBarH", &fBarH);
      R__insp.Inspect(R__cl, R__parent, "*fBarScan", &fBarScan);
      R__insp.Inspect(R__cl, R__parent, "*fBarRec", &fBarRec);
      R__insp.Inspect(R__cl, R__parent, "*fBarCommand", &fBarCommand);
      R__insp.Inspect(R__cl, R__parent, "*fBarOption", &fBarOption);
      R__insp.Inspect(R__cl, R__parent, "*fBarHist", &fBarHist);
      R__insp.Inspect(R__cl, R__parent, "*fHf", &fHf);
      R__insp.Inspect(R__cl, R__parent, "*fSlider", &fSlider);
      R__insp.Inspect(R__cl, R__parent, "*fV1", &fV1);
      R__insp.Inspect(R__cl, R__parent, "*fV2", &fV2);
      R__insp.Inspect(R__cl, R__parent, "*fTreeHdr", &fTreeHdr);
      R__insp.Inspect(R__cl, R__parent, "*fListHdr", &fListHdr);
      R__insp.Inspect(R__cl, R__parent, "*fLbl1", &fLbl1);
      R__insp.Inspect(R__cl, R__parent, "*fLbl2", &fLbl2);
      R__insp.Inspect(R__cl, R__parent, "*fBFrame", &fBFrame);
      R__insp.Inspect(R__cl, R__parent, "*fHpb", &fHpb);
      R__insp.Inspect(R__cl, R__parent, "*fProgressBar", &fProgressBar);
      R__insp.Inspect(R__cl, R__parent, "*fBLbl4", &fBLbl4);
      R__insp.Inspect(R__cl, R__parent, "*fBLbl5", &fBLbl5);
      R__insp.Inspect(R__cl, R__parent, "*fBarListIn", &fBarListIn);
      R__insp.Inspect(R__cl, R__parent, "*fBarListOut", &fBarListOut);
      R__insp.Inspect(R__cl, R__parent, "*fDRAW", &fDRAW);
      R__insp.Inspect(R__cl, R__parent, "*fSPIDER", &fSPIDER);
      R__insp.Inspect(R__cl, R__parent, "*fSTOP", &fSTOP);
      R__insp.Inspect(R__cl, R__parent, "*fREFR", &fREFR);
      R__insp.Inspect(R__cl, R__parent, "*fStatusBar", &fStatusBar);
      R__insp.Inspect(R__cl, R__parent, "*fCombo", &fCombo);
      R__insp.Inspect(R__cl, R__parent, "*fBGFirst", &fBGFirst);
      R__insp.Inspect(R__cl, R__parent, "*fBGPrevious", &fBGPrevious);
      R__insp.Inspect(R__cl, R__parent, "*fBGRecord", &fBGRecord);
      R__insp.Inspect(R__cl, R__parent, "*fBGNext", &fBGNext);
      R__insp.Inspect(R__cl, R__parent, "*fBGLast", &fBGLast);
      R__insp.Inspect(R__cl, R__parent, "*fReset", &fReset);
      R__insp.Inspect(R__cl, R__parent, "*fTreeView", &fTreeView);
      R__insp.Inspect(R__cl, R__parent, "*fLt", &fLt);
      R__insp.Inspect(R__cl, R__parent, "*fListView", &fListView);
      R__insp.Inspect(R__cl, R__parent, "*fLVContainer", &fLVContainer);
      R__insp.Inspect(R__cl, R__parent, "*fWidgets", &fWidgets);
      TGMainFrame::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TTreeViewer(void *p) {
      return  p ? new(p) ::TTreeViewer : new ::TTreeViewer;
   }
   static void *newArray_TTreeViewer(Long_t nElements, void *p) {
      return p ? new(p) ::TTreeViewer[nElements] : new ::TTreeViewer[nElements];
   }
   // Wrapper around operator delete
   static void delete_TTreeViewer(void *p) {
      delete ((::TTreeViewer*)p);
   }
   static void deleteArray_TTreeViewer(void *p) {
      delete [] ((::TTreeViewer*)p);
   }
   static void destruct_TTreeViewer(void *p) {
      typedef ::TTreeViewer current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TTreeViewer

//______________________________________________________________________________
void TTVLVContainer::Streamer(TBuffer &R__b)
{
   // Stream an object of class TTVLVContainer.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TTVLVContainer::Class(),this);
   } else {
      R__b.WriteClassBuffer(TTVLVContainer::Class(),this);
   }
}

//______________________________________________________________________________
void TTVLVContainer::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TTVLVContainer.
      TClass *R__cl = ::TTVLVContainer::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fCursor", &fCursor);
      R__insp.Inspect(R__cl, R__parent, "fDefaultCursor", &fDefaultCursor);
      R__insp.Inspect(R__cl, R__parent, "*fListView", &fListView);
      R__insp.Inspect(R__cl, R__parent, "*fViewer", &fViewer);
      R__insp.Inspect(R__cl, R__parent, "*fExpressionList", &fExpressionList);
      TGLVContainer::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TTVLVContainer(void *p) {
      delete ((::TTVLVContainer*)p);
   }
   static void deleteArray_TTVLVContainer(void *p) {
      delete [] ((::TTVLVContainer*)p);
   }
   static void destruct_TTVLVContainer(void *p) {
      typedef ::TTVLVContainer current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TTVLVContainer

//______________________________________________________________________________
void TTVLVEntry::Streamer(TBuffer &R__b)
{
   // Stream an object of class TTVLVEntry.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TTVLVEntry::Class(),this);
   } else {
      R__b.WriteClassBuffer(TTVLVEntry::Class(),this);
   }
}

//______________________________________________________________________________
void TTVLVEntry::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TTVLVEntry.
      TClass *R__cl = ::TTVLVEntry::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fContainer", &fContainer);
      R__insp.Inspect(R__cl, R__parent, "fTrueName", &fTrueName);
      fTrueName.ShowMembers(R__insp, strcat(R__parent,"fTrueName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fAlias", &fAlias);
      fAlias.ShowMembers(R__insp, strcat(R__parent,"fAlias.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fConvName", &fConvName);
      fConvName.ShowMembers(R__insp, strcat(R__parent,"fConvName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fTip", &fTip);
      R__insp.Inspect(R__cl, R__parent, "fIsCut", &fIsCut);
      R__insp.Inspect(R__cl, R__parent, "*fContext", &fContext);
      TGLVEntry::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TTVLVEntry(void *p) {
      delete ((::TTVLVEntry*)p);
   }
   static void deleteArray_TTVLVEntry(void *p) {
      delete [] ((::TTVLVEntry*)p);
   }
   static void destruct_TTVLVEntry(void *p) {
      typedef ::TTVLVEntry current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TTVLVEntry

//______________________________________________________________________________
void TGSelectBox::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGSelectBox.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TGSelectBox::Class(),this);
   } else {
      R__b.WriteClassBuffer(TGSelectBox::Class(),this);
   }
}

//______________________________________________________________________________
void TGSelectBox::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGSelectBox.
      TClass *R__cl = ::TGSelectBox::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fViewer", &fViewer);
      R__insp.Inspect(R__cl, R__parent, "*fLabel", &fLabel);
      R__insp.Inspect(R__cl, R__parent, "*fEntry", &fEntry);
      R__insp.Inspect(R__cl, R__parent, "*fTe", &fTe);
      R__insp.Inspect(R__cl, R__parent, "*fLabelAlias", &fLabelAlias);
      R__insp.Inspect(R__cl, R__parent, "*fTeAlias", &fTeAlias);
      R__insp.Inspect(R__cl, R__parent, "fOldAlias", &fOldAlias);
      fOldAlias.ShowMembers(R__insp, strcat(R__parent,"fOldAlias.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fLayout", &fLayout);
      R__insp.Inspect(R__cl, R__parent, "*fBLayout", &fBLayout);
      R__insp.Inspect(R__cl, R__parent, "*fBLayout1", &fBLayout1);
      R__insp.Inspect(R__cl, R__parent, "*fBf", &fBf);
      R__insp.Inspect(R__cl, R__parent, "*fDONE", &fDONE);
      R__insp.Inspect(R__cl, R__parent, "*fCANCEL", &fCANCEL);
      TGTransientFrame::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TGSelectBox(void *p) {
      delete ((::TGSelectBox*)p);
   }
   static void deleteArray_TGSelectBox(void *p) {
      delete [] ((::TGSelectBox*)p);
   }
   static void destruct_TGSelectBox(void *p) {
      typedef ::TGSelectBox current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGSelectBox

//______________________________________________________________________________
void TGItemContext::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGItemContext.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TGItemContext::Class(),this);
   } else {
      R__b.WriteClassBuffer(TGItemContext::Class(),this);
   }
}

//______________________________________________________________________________
void TGItemContext::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGItemContext.
      TClass *R__cl = ::TGItemContext::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fItem", &fItem);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TGItemContext(void *p) {
      return  p ? new(p) ::TGItemContext : new ::TGItemContext;
   }
   static void *newArray_TGItemContext(Long_t nElements, void *p) {
      return p ? new(p) ::TGItemContext[nElements] : new ::TGItemContext[nElements];
   }
   // Wrapper around operator delete
   static void delete_TGItemContext(void *p) {
      delete ((::TGItemContext*)p);
   }
   static void deleteArray_TGItemContext(void *p) {
      delete [] ((::TGItemContext*)p);
   }
   static void destruct_TGItemContext(void *p) {
      typedef ::TGItemContext current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGItemContext

//______________________________________________________________________________
void TTVRecord::Streamer(TBuffer &R__b)
{
   // Stream an object of class TTVRecord.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TTVRecord::Class(),this);
   } else {
      R__b.WriteClassBuffer(TTVRecord::Class(),this);
   }
}

//______________________________________________________________________________
void TTVRecord::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TTVRecord.
      TClass *R__cl = ::TTVRecord::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fName", &fName);
      fName.ShowMembers(R__insp, strcat(R__parent,"fName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fX", &fX);
      fX.ShowMembers(R__insp, strcat(R__parent,"fX.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fXAlias", &fXAlias);
      fXAlias.ShowMembers(R__insp, strcat(R__parent,"fXAlias.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fY", &fY);
      fY.ShowMembers(R__insp, strcat(R__parent,"fY.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fYAlias", &fYAlias);
      fYAlias.ShowMembers(R__insp, strcat(R__parent,"fYAlias.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fZ", &fZ);
      fZ.ShowMembers(R__insp, strcat(R__parent,"fZ.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fZAlias", &fZAlias);
      fZAlias.ShowMembers(R__insp, strcat(R__parent,"fZAlias.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fCut", &fCut);
      fCut.ShowMembers(R__insp, strcat(R__parent,"fCut.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fCutAlias", &fCutAlias);
      fCutAlias.ShowMembers(R__insp, strcat(R__parent,"fCutAlias.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fOption", &fOption);
      fOption.ShowMembers(R__insp, strcat(R__parent,"fOption.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fScanRedirected", &fScanRedirected);
      R__insp.Inspect(R__cl, R__parent, "fCutEnabled", &fCutEnabled);
      R__insp.Inspect(R__cl, R__parent, "fUserCode", &fUserCode);
      fUserCode.ShowMembers(R__insp, strcat(R__parent,"fUserCode.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fAutoexec", &fAutoexec);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TTVRecord(void *p) {
      return  p ? new(p) ::TTVRecord : new ::TTVRecord;
   }
   static void *newArray_TTVRecord(Long_t nElements, void *p) {
      return p ? new(p) ::TTVRecord[nElements] : new ::TTVRecord[nElements];
   }
   // Wrapper around operator delete
   static void delete_TTVRecord(void *p) {
      delete ((::TTVRecord*)p);
   }
   static void deleteArray_TTVRecord(void *p) {
      delete [] ((::TTVRecord*)p);
   }
   static void destruct_TTVRecord(void *p) {
      typedef ::TTVRecord current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TTVRecord

//______________________________________________________________________________
void TTVSession::Streamer(TBuffer &R__b)
{
   // Stream an object of class TTVSession.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TTVSession::Class(),this);
   } else {
      R__b.WriteClassBuffer(TTVSession::Class(),this);
   }
}

//______________________________________________________________________________
void TTVSession::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TTVSession.
      TClass *R__cl = ::TTVSession::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fList", &fList);
      R__insp.Inspect(R__cl, R__parent, "fName", &fName);
      fName.ShowMembers(R__insp, strcat(R__parent,"fName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fViewer", &fViewer);
      R__insp.Inspect(R__cl, R__parent, "fCurrent", &fCurrent);
      R__insp.Inspect(R__cl, R__parent, "fRecords", &fRecords);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TTVSession(void *p) {
      delete ((::TTVSession*)p);
   }
   static void deleteArray_TTVSession(void *p) {
      delete [] ((::TTVSession*)p);
   }
   static void destruct_TTVSession(void *p) {
      typedef ::TTVSession current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TTVSession

//______________________________________________________________________________
void TSpider::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSpider.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSpider::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSpider::Class(),this);
   }
}

//______________________________________________________________________________
void TSpider::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TSpider.
      TClass *R__cl = ::TSpider::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fNx", &fNx);
      R__insp.Inspect(R__cl, R__parent, "fNy", &fNy);
      R__insp.Inspect(R__cl, R__parent, "fNcols", &fNcols);
      R__insp.Inspect(R__cl, R__parent, "fArraySize", &fArraySize);
      R__insp.Inspect(R__cl, R__parent, "fEntry", &fEntry);
      R__insp.Inspect(R__cl, R__parent, "fNentries", &fNentries);
      R__insp.Inspect(R__cl, R__parent, "fFirstEntry", &fFirstEntry);
      R__insp.Inspect(R__cl, R__parent, "*fCurrentEntries", &fCurrentEntries);
      R__insp.Inspect(R__cl, R__parent, "*fAve", &fAve);
      R__insp.Inspect(R__cl, R__parent, "*fMax", &fMax);
      R__insp.Inspect(R__cl, R__parent, "*fMin", &fMin);
      R__insp.Inspect(R__cl, R__parent, "*fSuperposed", &fSuperposed);
      R__insp.Inspect(R__cl, R__parent, "*fTree", &fTree);
      R__insp.Inspect(R__cl, R__parent, "*fAveragePoly", &fAveragePoly);
      R__insp.Inspect(R__cl, R__parent, "*fAverageSlices", &fAverageSlices);
      R__insp.Inspect(R__cl, R__parent, "*fCanvas", &fCanvas);
      R__insp.Inspect(R__cl, R__parent, "*fFormulas", &fFormulas);
      R__insp.Inspect(R__cl, R__parent, "*fInput", &fInput);
      R__insp.Inspect(R__cl, R__parent, "*fManager", &fManager);
      R__insp.Inspect(R__cl, R__parent, "*fPolargram", &fPolargram);
      R__insp.Inspect(R__cl, R__parent, "*fPolyList", &fPolyList);
      R__insp.Inspect(R__cl, R__parent, "*fSelect", &fSelect);
      R__insp.Inspect(R__cl, R__parent, "*fSelector", &fSelector);
      R__insp.Inspect(R__cl, R__parent, "fAngularLabels", &fAngularLabels);
      R__insp.Inspect(R__cl, R__parent, "fDisplayAverage", &fDisplayAverage);
      R__insp.Inspect(R__cl, R__parent, "fForceDim", &fForceDim);
      R__insp.Inspect(R__cl, R__parent, "fSegmentDisplay", &fSegmentDisplay);
      R__insp.Inspect(R__cl, R__parent, "fShowRange", &fShowRange);
      TObject::ShowMembers(R__insp, R__parent);
      TAttFill::ShowMembers(R__insp, R__parent);
      TAttLine::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSpider(void *p) {
      return  p ? new(p) ::TSpider : new ::TSpider;
   }
   static void *newArray_TSpider(Long_t nElements, void *p) {
      return p ? new(p) ::TSpider[nElements] : new ::TSpider[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSpider(void *p) {
      delete ((::TSpider*)p);
   }
   static void deleteArray_TSpider(void *p) {
      delete [] ((::TSpider*)p);
   }
   static void destruct_TSpider(void *p) {
      typedef ::TSpider current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSpider

//______________________________________________________________________________
void TSpiderEditor::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSpiderEditor.

   TGedFrame::Streamer(R__b);
}

//______________________________________________________________________________
void TSpiderEditor::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TSpiderEditor.
      TClass *R__cl = ::TSpiderEditor::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fSpider", &fSpider);
      R__insp.Inspect(R__cl, R__parent, "*fDisplayAverage", &fDisplayAverage);
      R__insp.Inspect(R__cl, R__parent, "*fAvLineStyleCombo", &fAvLineStyleCombo);
      R__insp.Inspect(R__cl, R__parent, "*fAvLineWidthCombo", &fAvLineWidthCombo);
      R__insp.Inspect(R__cl, R__parent, "*fAvLineColorSelect", &fAvLineColorSelect);
      R__insp.Inspect(R__cl, R__parent, "*fAvFillColorSelect", &fAvFillColorSelect);
      R__insp.Inspect(R__cl, R__parent, "*fAvFillPatternSelect", &fAvFillPatternSelect);
      R__insp.Inspect(R__cl, R__parent, "*fSetNx", &fSetNx);
      R__insp.Inspect(R__cl, R__parent, "*fSetNy", &fSetNy);
      R__insp.Inspect(R__cl, R__parent, "*fBgroup", &fBgroup);
      R__insp.Inspect(R__cl, R__parent, "*fPolyLines", &fPolyLines);
      R__insp.Inspect(R__cl, R__parent, "*fSegment", &fSegment);
      R__insp.Inspect(R__cl, R__parent, "*fBrowse", &fBrowse);
      R__insp.Inspect(R__cl, R__parent, "*fGotoEntry", &fGotoEntry);
      R__insp.Inspect(R__cl, R__parent, "*fGotoNext", &fGotoNext);
      R__insp.Inspect(R__cl, R__parent, "*fPicNext", &fPicNext);
      R__insp.Inspect(R__cl, R__parent, "*fGotoPrevious", &fGotoPrevious);
      R__insp.Inspect(R__cl, R__parent, "*fPicPrevious", &fPicPrevious);
      R__insp.Inspect(R__cl, R__parent, "*fGotoFollowing", &fGotoFollowing);
      R__insp.Inspect(R__cl, R__parent, "*fPicFollowing", &fPicFollowing);
      R__insp.Inspect(R__cl, R__parent, "*fGotoPreceding", &fGotoPreceding);
      R__insp.Inspect(R__cl, R__parent, "*fPicPreceding", &fPicPreceding);
      R__insp.Inspect(R__cl, R__parent, "*fAddVar", &fAddVar);
      R__insp.Inspect(R__cl, R__parent, "*fDeleteVar", &fDeleteVar);
      TGedFrame::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSpiderEditor(void *p) {
      return  p ? new(p) ::TSpiderEditor : new ::TSpiderEditor;
   }
   static void *newArray_TSpiderEditor(Long_t nElements, void *p) {
      return p ? new(p) ::TSpiderEditor[nElements] : new ::TSpiderEditor[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSpiderEditor(void *p) {
      delete ((::TSpiderEditor*)p);
   }
   static void deleteArray_TSpiderEditor(void *p) {
      delete [] ((::TSpiderEditor*)p);
   }
   static void destruct_TSpiderEditor(void *p) {
      typedef ::TSpiderEditor current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSpiderEditor

//______________________________________________________________________________
void TParallelCoord::Streamer(TBuffer &R__b)
{
   // Stream an object of class TParallelCoord.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TParallelCoord::Class(),this);
   } else {
      R__b.WriteClassBuffer(TParallelCoord::Class(),this);
   }
}

//______________________________________________________________________________
void TParallelCoord::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TParallelCoord.
      TClass *R__cl = ::TParallelCoord::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fNvar", &fNvar);
      R__insp.Inspect(R__cl, R__parent, "fCurrentFirst", &fCurrentFirst);
      R__insp.Inspect(R__cl, R__parent, "fCurrentN", &fCurrentN);
      R__insp.Inspect(R__cl, R__parent, "fNentries", &fNentries);
      R__insp.Inspect(R__cl, R__parent, "fDotsSpacing", &fDotsSpacing);
      R__insp.Inspect(R__cl, R__parent, "fLineColor", &fLineColor);
      R__insp.Inspect(R__cl, R__parent, "fLineWidth", &fLineWidth);
      R__insp.Inspect(R__cl, R__parent, "fWeightCut", &fWeightCut);
      R__insp.Inspect(R__cl, R__parent, "*fCurrentEntries", &fCurrentEntries);
      R__insp.Inspect(R__cl, R__parent, "*fInitEntries", &fInitEntries);
      R__insp.Inspect(R__cl, R__parent, "*fTree", &fTree);
      R__insp.Inspect(R__cl, R__parent, "fTreeName", &fTreeName);
      fTreeName.ShowMembers(R__insp, strcat(R__parent,"fTreeName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fTreeFileName", &fTreeFileName);
      fTreeFileName.ShowMembers(R__insp, strcat(R__parent,"fTreeFileName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fVarList", &fVarList);
      R__insp.Inspect(R__cl, R__parent, "*fSelectList", &fSelectList);
      R__insp.Inspect(R__cl, R__parent, "*fCurrentSelection", &fCurrentSelection);
      R__insp.Inspect(R__cl, R__parent, "*fCandleAxis", &fCandleAxis);
      TNamed::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TParallelCoord(void *p) {
      return  p ? new(p) ::TParallelCoord : new ::TParallelCoord;
   }
   static void *newArray_TParallelCoord(Long_t nElements, void *p) {
      return p ? new(p) ::TParallelCoord[nElements] : new ::TParallelCoord[nElements];
   }
   // Wrapper around operator delete
   static void delete_TParallelCoord(void *p) {
      delete ((::TParallelCoord*)p);
   }
   static void deleteArray_TParallelCoord(void *p) {
      delete [] ((::TParallelCoord*)p);
   }
   static void destruct_TParallelCoord(void *p) {
      typedef ::TParallelCoord current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TParallelCoord

//______________________________________________________________________________
void TParallelCoordVar::Streamer(TBuffer &R__b)
{
   // Stream an object of class TParallelCoordVar.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TParallelCoordVar::Class(),this);
   } else {
      R__b.WriteClassBuffer(TParallelCoordVar::Class(),this);
   }
}

//______________________________________________________________________________
void TParallelCoordVar::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TParallelCoordVar.
      TClass *R__cl = ::TParallelCoordVar::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fNbins", &fNbins);
      R__insp.Inspect(R__cl, R__parent, "fHistoLW", &fHistoLW);
      R__insp.Inspect(R__cl, R__parent, "fId", &fId);
      R__insp.Inspect(R__cl, R__parent, "fNentries", &fNentries);
      R__insp.Inspect(R__cl, R__parent, "fX1", &fX1);
      R__insp.Inspect(R__cl, R__parent, "fX2", &fX2);
      R__insp.Inspect(R__cl, R__parent, "fY1", &fY1);
      R__insp.Inspect(R__cl, R__parent, "fY2", &fY2);
      R__insp.Inspect(R__cl, R__parent, "fMinInit", &fMinInit);
      R__insp.Inspect(R__cl, R__parent, "fMaxInit", &fMaxInit);
      R__insp.Inspect(R__cl, R__parent, "fMean", &fMean);
      R__insp.Inspect(R__cl, R__parent, "fMinCurrent", &fMinCurrent);
      R__insp.Inspect(R__cl, R__parent, "fMaxCurrent", &fMaxCurrent);
      R__insp.Inspect(R__cl, R__parent, "fMed", &fMed);
      R__insp.Inspect(R__cl, R__parent, "fQua1", &fQua1);
      R__insp.Inspect(R__cl, R__parent, "fQua3", &fQua3);
      R__insp.Inspect(R__cl, R__parent, "fHistoHeight", &fHistoHeight);
      R__insp.Inspect(R__cl, R__parent, "*fVal", &fVal);
      R__insp.Inspect(R__cl, R__parent, "*fRanges", &fRanges);
      R__insp.Inspect(R__cl, R__parent, "*fParallel", &fParallel);
      R__insp.Inspect(R__cl, R__parent, "*fHistogram", &fHistogram);
      TNamed::ShowMembers(R__insp, R__parent);
      TAttLine::ShowMembers(R__insp, R__parent);
      TAttFill::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TParallelCoordVar(void *p) {
      return  p ? new(p) ::TParallelCoordVar : new ::TParallelCoordVar;
   }
   static void *newArray_TParallelCoordVar(Long_t nElements, void *p) {
      return p ? new(p) ::TParallelCoordVar[nElements] : new ::TParallelCoordVar[nElements];
   }
   // Wrapper around operator delete
   static void delete_TParallelCoordVar(void *p) {
      delete ((::TParallelCoordVar*)p);
   }
   static void deleteArray_TParallelCoordVar(void *p) {
      delete [] ((::TParallelCoordVar*)p);
   }
   static void destruct_TParallelCoordVar(void *p) {
      typedef ::TParallelCoordVar current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TParallelCoordVar

//______________________________________________________________________________
void TParallelCoordRange::Streamer(TBuffer &R__b)
{
   // Stream an object of class TParallelCoordRange.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TParallelCoordRange::Class(),this);
   } else {
      R__b.WriteClassBuffer(TParallelCoordRange::Class(),this);
   }
}

//______________________________________________________________________________
void TParallelCoordRange::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TParallelCoordRange.
      TClass *R__cl = ::TParallelCoordRange::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fMin", &fMin);
      R__insp.Inspect(R__cl, R__parent, "fMax", &fMax);
      R__insp.Inspect(R__cl, R__parent, "fSize", &fSize);
      R__insp.Inspect(R__cl, R__parent, "*fVar", &fVar);
      R__insp.Inspect(R__cl, R__parent, "*fSelect", &fSelect);
      TNamed::ShowMembers(R__insp, R__parent);
      TAttLine::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TParallelCoordRange(void *p) {
      return  p ? new(p) ::TParallelCoordRange : new ::TParallelCoordRange;
   }
   static void *newArray_TParallelCoordRange(Long_t nElements, void *p) {
      return p ? new(p) ::TParallelCoordRange[nElements] : new ::TParallelCoordRange[nElements];
   }
   // Wrapper around operator delete
   static void delete_TParallelCoordRange(void *p) {
      delete ((::TParallelCoordRange*)p);
   }
   static void deleteArray_TParallelCoordRange(void *p) {
      delete [] ((::TParallelCoordRange*)p);
   }
   static void destruct_TParallelCoordRange(void *p) {
      typedef ::TParallelCoordRange current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TParallelCoordRange

//______________________________________________________________________________
void TParallelCoordSelect::Streamer(TBuffer &R__b)
{
   // Stream an object of class TParallelCoordSelect.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TParallelCoordSelect::Class(),this);
   } else {
      R__b.WriteClassBuffer(TParallelCoordSelect::Class(),this);
   }
}

//______________________________________________________________________________
void TParallelCoordSelect::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TParallelCoordSelect.
      TClass *R__cl = ::TParallelCoordSelect::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fTitle", &fTitle);
      fTitle.ShowMembers(R__insp, strcat(R__parent,"fTitle.")); R__parent[R__ncp] = 0;
      TList::ShowMembers(R__insp, R__parent);
      TAttLine::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TParallelCoordSelect(void *p) {
      return  p ? new(p) ::TParallelCoordSelect : new ::TParallelCoordSelect;
   }
   static void *newArray_TParallelCoordSelect(Long_t nElements, void *p) {
      return p ? new(p) ::TParallelCoordSelect[nElements] : new ::TParallelCoordSelect[nElements];
   }
   // Wrapper around operator delete
   static void delete_TParallelCoordSelect(void *p) {
      delete ((::TParallelCoordSelect*)p);
   }
   static void deleteArray_TParallelCoordSelect(void *p) {
      delete [] ((::TParallelCoordSelect*)p);
   }
   static void destruct_TParallelCoordSelect(void *p) {
      typedef ::TParallelCoordSelect current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TParallelCoordSelect

//______________________________________________________________________________
void TParallelCoordEditor::Streamer(TBuffer &R__b)
{
   // Stream an object of class TParallelCoordEditor.

   TGedFrame::Streamer(R__b);
}

//______________________________________________________________________________
void TParallelCoordEditor::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TParallelCoordEditor.
      TClass *R__cl = ::TParallelCoordEditor::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fVarTab", &fVarTab);
      R__insp.Inspect(R__cl, R__parent, "*fParallel", &fParallel);
      R__insp.Inspect(R__cl, R__parent, "*fGlobalLineColor", &fGlobalLineColor);
      R__insp.Inspect(R__cl, R__parent, "*fGlobalLineWidth", &fGlobalLineWidth);
      R__insp.Inspect(R__cl, R__parent, "*fDotsSpacing", &fDotsSpacing);
      R__insp.Inspect(R__cl, R__parent, "*fDotsSpacingField", &fDotsSpacingField);
      R__insp.Inspect(R__cl, R__parent, "*fLineTypeBgroup", &fLineTypeBgroup);
      R__insp.Inspect(R__cl, R__parent, "*fLineTypePoly", &fLineTypePoly);
      R__insp.Inspect(R__cl, R__parent, "*fLineTypeCurves", &fLineTypeCurves);
      R__insp.Inspect(R__cl, R__parent, "*fHideAllRanges", &fHideAllRanges);
      R__insp.Inspect(R__cl, R__parent, "*fSelectionSelect", &fSelectionSelect);
      R__insp.Inspect(R__cl, R__parent, "*fSelectLineColor", &fSelectLineColor);
      R__insp.Inspect(R__cl, R__parent, "*fSelectLineWidth", &fSelectLineWidth);
      R__insp.Inspect(R__cl, R__parent, "*fActivateSelection", &fActivateSelection);
      R__insp.Inspect(R__cl, R__parent, "*fShowRanges", &fShowRanges);
      R__insp.Inspect(R__cl, R__parent, "*fDeleteSelection", &fDeleteSelection);
      R__insp.Inspect(R__cl, R__parent, "*fAddSelection", &fAddSelection);
      R__insp.Inspect(R__cl, R__parent, "*fAddSelectionField", &fAddSelectionField);
      R__insp.Inspect(R__cl, R__parent, "*fPaintEntries", &fPaintEntries);
      R__insp.Inspect(R__cl, R__parent, "*fEntriesToDraw", &fEntriesToDraw);
      R__insp.Inspect(R__cl, R__parent, "*fFirstEntry", &fFirstEntry);
      R__insp.Inspect(R__cl, R__parent, "*fNentries", &fNentries);
      R__insp.Inspect(R__cl, R__parent, "*fApplySelect", &fApplySelect);
      R__insp.Inspect(R__cl, R__parent, "*fUnApply", &fUnApply);
      R__insp.Inspect(R__cl, R__parent, "*fDelayDrawing", &fDelayDrawing);
      R__insp.Inspect(R__cl, R__parent, "*fAddVariable", &fAddVariable);
      R__insp.Inspect(R__cl, R__parent, "*fButtonAddVar", &fButtonAddVar);
      R__insp.Inspect(R__cl, R__parent, "*fVariables", &fVariables);
      R__insp.Inspect(R__cl, R__parent, "*fDeleteVar", &fDeleteVar);
      R__insp.Inspect(R__cl, R__parent, "*fHistShowBoxes", &fHistShowBoxes);
      R__insp.Inspect(R__cl, R__parent, "*fHistWidth", &fHistWidth);
      R__insp.Inspect(R__cl, R__parent, "*fHistBinning", &fHistBinning);
      R__insp.Inspect(R__cl, R__parent, "*fRenameVar", &fRenameVar);
      R__insp.Inspect(R__cl, R__parent, "*fWeightCut", &fWeightCut);
      R__insp.Inspect(R__cl, R__parent, "*fWeightCutField", &fWeightCutField);
      R__insp.Inspect(R__cl, R__parent, "*fHistColorSelect", &fHistColorSelect);
      R__insp.Inspect(R__cl, R__parent, "*fHistPatternSelect", &fHistPatternSelect);
      R__insp.Inspect(R__cl, R__parent, "fDelay", &fDelay);
      TGedFrame::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TParallelCoordEditor(void *p) {
      return  p ? new(p) ::TParallelCoordEditor : new ::TParallelCoordEditor;
   }
   static void *newArray_TParallelCoordEditor(Long_t nElements, void *p) {
      return p ? new(p) ::TParallelCoordEditor[nElements] : new ::TParallelCoordEditor[nElements];
   }
   // Wrapper around operator delete
   static void delete_TParallelCoordEditor(void *p) {
      delete ((::TParallelCoordEditor*)p);
   }
   static void deleteArray_TParallelCoordEditor(void *p) {
      delete [] ((::TParallelCoordEditor*)p);
   }
   static void destruct_TParallelCoordEditor(void *p) {
      typedef ::TParallelCoordEditor current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TParallelCoordEditor

//______________________________________________________________________________
void TGTreeTable::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGTreeTable.

   TGTable::Streamer(R__b);
}

//______________________________________________________________________________
void TGTreeTable::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGTreeTable.
      TClass *R__cl = ::TGTreeTable::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fTree", &fTree);
      TGTable::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TGTreeTable(void *p) {
      return  p ? new(p) ::TGTreeTable : new ::TGTreeTable;
   }
   static void *newArray_TGTreeTable(Long_t nElements, void *p) {
      return p ? new(p) ::TGTreeTable[nElements] : new ::TGTreeTable[nElements];
   }
   // Wrapper around operator delete
   static void delete_TGTreeTable(void *p) {
      delete ((::TGTreeTable*)p);
   }
   static void deleteArray_TGTreeTable(void *p) {
      delete [] ((::TGTreeTable*)p);
   }
   static void destruct_TGTreeTable(void *p) {
      typedef ::TGTreeTable current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGTreeTable

/********************************************************
* tree/treeviewer/src/G__TreeViewer.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__TreeViewer();

extern "C" void G__set_cpp_environmentG__TreeViewer() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("TTreeViewer.h");
  G__add_compiledheader("TTVSession.h");
  G__add_compiledheader("TTVLVContainer.h");
  G__add_compiledheader("HelpTextTV.h");
  G__add_compiledheader("TSpider.h");
  G__add_compiledheader("TSpiderEditor.h");
  G__add_compiledheader("TParallelCoord.h");
  G__add_compiledheader("TParallelCoordVar.h");
  G__add_compiledheader("TParallelCoordRange.h");
  G__add_compiledheader("TParallelCoordEditor.h");
  G__add_compiledheader("TGTreeTable.h");
  G__cpp_reset_tagtableG__TreeViewer();
}
#include <new>
extern "C" int G__cpp_dllrevG__TreeViewer() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TTreeViewer */
static int G__G__TreeViewer_216_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TTreeViewer* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TTreeViewer((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TTreeViewer((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TTreeViewer[n];
       } else {
         p = new((void*) gvp) TTreeViewer[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TTreeViewer;
       } else {
         p = new((void*) gvp) TTreeViewer;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreeViewerLN_TTreeViewer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_216_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TTreeViewer* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TTreeViewer((const TTree*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TTreeViewer((const TTree*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreeViewerLN_TTreeViewer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_216_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTreeViewer*) G__getstructoffset())->AppendTree((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_216_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTreeViewer*) G__getstructoffset())->ActivateButtons((Bool_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_216_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTreeViewer*) G__getstructoffset())->DoRefresh();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_216_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTreeViewer*) G__getstructoffset())->EditExpression();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_216_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTreeViewer*) G__getstructoffset())->Empty();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_216_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTreeViewer*) G__getstructoffset())->EmptyAll();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_216_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TTreeViewer*) G__getstructoffset())->ExecuteCommand((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TTreeViewer*) G__getstructoffset())->ExecuteCommand((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_216_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTreeViewer*) G__getstructoffset())->ExecuteDraw();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_216_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTreeViewer*) G__getstructoffset())->ExecuteSpider();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_216_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TTreeViewer*) G__getstructoffset())->ExpressionItem((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_216_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TTreeViewer*) G__getstructoffset())->ExpressionList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_216_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TTreeViewer*) G__getstructoffset())->GetGrOpt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_216_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TTreeViewer*) G__getstructoffset())->GetTree());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_216_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TTreeViewer*) G__getstructoffset())->IsCutEnabled());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_216_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TTreeViewer*) G__getstructoffset())->IsScanRedirected());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_216_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((TTreeViewer*) G__getstructoffset())->MakeSelector((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((TTreeViewer*) G__getstructoffset())->MakeSelector());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_216_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTreeViewer*) G__getstructoffset())->NewExpression();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_216_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTreeViewer*) G__getstructoffset())->PrintEntries();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_216_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letLonglong(result7, 110, (G__int64) ((TTreeViewer*) G__getstructoffset())->Process((const char*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])
, (Long64_t) G__Longlong(libp->para[2]), (Long64_t) G__Longlong(libp->para[3])));
      break;
   case 3:
      G__letLonglong(result7, 110, (G__int64) ((TTreeViewer*) G__getstructoffset())->Process((const char*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])
, (Long64_t) G__Longlong(libp->para[2])));
      break;
   case 2:
      G__letLonglong(result7, 110, (G__int64) ((TTreeViewer*) G__getstructoffset())->Process((const char*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])));
      break;
   case 1:
      G__letLonglong(result7, 110, (G__int64) ((TTreeViewer*) G__getstructoffset())->Process((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_216_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTreeViewer*) G__getstructoffset())->RemoveItem();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_216_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTreeViewer*) G__getstructoffset())->RemoveLastRecord();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_216_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTreeViewer*) G__getstructoffset())->SetHistogramTitle((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_216_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TTreeViewer*) G__getstructoffset())->SetCutMode((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TTreeViewer*) G__getstructoffset())->SetCutMode();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_216_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTreeViewer*) G__getstructoffset())->SetCurrentRecord((Long64_t) G__Longlong(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_216_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTreeViewer*) G__getstructoffset())->SetGrOpt((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_216_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTreeViewer*) G__getstructoffset())->SetNexpressions((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_216_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTreeViewer*) G__getstructoffset())->SetRecordName((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_216_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TTreeViewer*) G__getstructoffset())->SetScanFileName((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TTreeViewer*) G__getstructoffset())->SetScanFileName();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_216_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TTreeViewer*) G__getstructoffset())->SetScanMode((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TTreeViewer*) G__getstructoffset())->SetScanMode();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_216_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTreeViewer*) G__getstructoffset())->SetScanRedirect((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_216_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTreeViewer*) G__getstructoffset())->SetSession((TTVSession*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_216_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TTreeViewer*) G__getstructoffset())->SetUserCode((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TTreeViewer*) G__getstructoffset())->SetUserCode((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_216_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTreeViewer*) G__getstructoffset())->SetTreeName((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_216_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TTreeViewer*) G__getstructoffset())->SwitchTree((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_216_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTreeViewer*) G__getstructoffset())->UpdateCombo();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_216_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TTreeViewer*) G__getstructoffset())->UpdateRecord((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TTreeViewer*) G__getstructoffset())->UpdateRecord();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_216_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TTreeViewer::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_216_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TTreeViewer::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_216_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TTreeViewer::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_216_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TTreeViewer::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_216_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTreeViewer*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_216_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TTreeViewer::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_216_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TTreeViewer::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_216_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TTreeViewer::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_216_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TTreeViewer::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TTreeViewer G__TTTreeViewer;
static int G__G__TreeViewer_216_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TTreeViewer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TTreeViewer*) (soff+(sizeof(TTreeViewer)*i)))->~G__TTTreeViewer();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TTreeViewer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TTreeViewer*) (soff))->~G__TTTreeViewer();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TTVLVContainer */
static int G__G__TreeViewer_217_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TTVLVContainer* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TTVLVContainer(
(const TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TTVLVContainer(
(const TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TTVLVContainer(
(const TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TTVLVContainer(
(const TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreeViewerLN_TTVLVContainer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_217_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTVLVContainer*) G__getstructoffset())->AddThisItem((TTVLVEntry*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_217_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TTVLVContainer*) G__getstructoffset())->Cut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_217_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTVLVContainer*) G__getstructoffset())->EmptyAll();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_217_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TTVLVContainer*) G__getstructoffset())->ExpressionItem((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_217_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TTVLVContainer*) G__getstructoffset())->ExpressionList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_217_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TTVLVContainer*) G__getstructoffset())->Ex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_217_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TTVLVContainer*) G__getstructoffset())->Ey());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_217_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TTVLVContainer*) G__getstructoffset())->Ez());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_217_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TTVLVContainer*) G__getstructoffset())->GetViewer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_217_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTVLVContainer*) G__getstructoffset())->SetViewer((TTreeViewer*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_217_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTVLVContainer*) G__getstructoffset())->RemoveNonStatic();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_217_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TTVLVContainer*) G__getstructoffset())->ScanList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_217_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTVLVContainer*) G__getstructoffset())->SelectItem((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_217_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TTVLVContainer::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_217_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TTVLVContainer::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_217_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TTVLVContainer::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_217_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TTVLVContainer::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_217_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTVLVContainer*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_217_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TTVLVContainer::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_217_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TTVLVContainer::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_217_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TTVLVContainer::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_217_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TTVLVContainer::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TTVLVContainer G__TTTVLVContainer;
static int G__G__TreeViewer_217_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TTVLVContainer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TTVLVContainer*) (soff+(sizeof(TTVLVContainer)*i)))->~G__TTTVLVContainer();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TTVLVContainer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TTVLVContainer*) (soff))->~G__TTTVLVContainer();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TTVLVEntry */
static int G__G__TreeViewer_218_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TTVLVEntry* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TTVLVEntry(
(const TGWindow*) G__int(libp->para[0]), (const TGPicture*) G__int(libp->para[1])
, (const TGPicture*) G__int(libp->para[2]), (TGString*) G__int(libp->para[3])
, (TGString**) G__int(libp->para[4]), (EListViewMode) G__int(libp->para[5]));
   } else {
     p = new((void*) gvp) TTVLVEntry(
(const TGWindow*) G__int(libp->para[0]), (const TGPicture*) G__int(libp->para[1])
, (const TGPicture*) G__int(libp->para[2]), (TGString*) G__int(libp->para[3])
, (TGString**) G__int(libp->para[4]), (EListViewMode) G__int(libp->para[5]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreeViewerLN_TTVLVEntry));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_218_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TTVLVEntry*) G__getstructoffset())->ConvertAliases());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_218_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTVLVEntry*) G__getstructoffset())->CopyItem((TTVLVEntry*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_218_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TTVLVEntry*) G__getstructoffset())->GetAlias());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_218_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TTVLVEntry*) G__getstructoffset())->GetContainer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_218_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TTVLVEntry*) G__getstructoffset())->GetContext());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_218_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TTVLVEntry*) G__getstructoffset())->GetConvName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_218_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TTVLVEntry*) G__getstructoffset())->GetTrueName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_218_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TTVLVEntry*) G__getstructoffset())->GetTip());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_218_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TTVLVEntry*) G__getstructoffset())->HasAlias());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_218_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TTVLVEntry*) G__getstructoffset())->IsCut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_218_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTVLVEntry*) G__getstructoffset())->PrependTilde();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_218_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TTVLVEntry*) G__getstructoffset())->SetCutType((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TTVLVEntry*) G__getstructoffset())->SetCutType();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_218_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTVLVEntry*) G__getstructoffset())->SetItemName((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_218_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTVLVEntry*) G__getstructoffset())->SetAlias((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_218_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((TTVLVEntry*) G__getstructoffset())->SetExpression((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((TTVLVEntry*) G__getstructoffset())->SetExpression((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_218_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTVLVEntry*) G__getstructoffset())->SetTrueName((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_218_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TTVLVEntry*) G__getstructoffset())->SetToolTipText((const char*) G__int(libp->para[0]), (Long_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TTVLVEntry*) G__getstructoffset())->SetToolTipText((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_218_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTVLVEntry*) G__getstructoffset())->SetSmallPic((const TGPicture*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_218_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTVLVEntry*) G__getstructoffset())->Empty();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_218_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TTVLVEntry::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_218_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TTVLVEntry::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_218_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TTVLVEntry::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_218_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TTVLVEntry::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_218_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTVLVEntry*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_218_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TTVLVEntry::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_218_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TTVLVEntry::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_218_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TTVLVEntry::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_218_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TTVLVEntry::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TTVLVEntry G__TTTVLVEntry;
static int G__G__TreeViewer_218_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TTVLVEntry*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TTVLVEntry*) (soff+(sizeof(TTVLVEntry)*i)))->~G__TTTVLVEntry();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TTVLVEntry*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TTVLVEntry*) (soff))->~G__TTTVLVEntry();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TTVSession */
static int G__G__TreeViewer_219_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TTVSession* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TTVSession((TTreeViewer*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TTVSession((TTreeViewer*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreeViewerLN_TTVSession));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_219_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTVSession*) G__getstructoffset())->SetName((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_219_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTVSession*) G__getstructoffset())->SetRecordName((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_219_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((TTVSession*) G__getstructoffset())->AddRecord((Bool_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((TTVSession*) G__getstructoffset())->AddRecord());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_219_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TTVSession*) G__getstructoffset())->GetEntries());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_219_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TTVSession*) G__getstructoffset())->GetCurrent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_219_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TTVSession*) G__getstructoffset())->GetRecord((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_219_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TTVSession*) G__getstructoffset())->First());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_219_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TTVSession*) G__getstructoffset())->Last());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_219_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TTVSession*) G__getstructoffset())->Next());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_219_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TTVSession*) G__getstructoffset())->Previous());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_219_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTVSession*) G__getstructoffset())->RemoveLastRecord();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_219_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTVSession*) G__getstructoffset())->Show((TTVRecord*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_219_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTVSession*) G__getstructoffset())->SaveSource(*(ofstream*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_219_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTVSession*) G__getstructoffset())->UpdateRecord((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_219_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TTVSession::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_219_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TTVSession::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_219_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TTVSession::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_219_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TTVSession::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_219_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTVSession*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_219_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TTVSession::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_219_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TTVSession::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_219_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TTVSession::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_219_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TTVSession::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreeViewer_219_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TTVSession* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TTVSession(*(TTVSession*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreeViewerLN_TTVSession));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TTVSession G__TTTVSession;
static int G__G__TreeViewer_219_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TTVSession*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TTVSession*) (soff+(sizeof(TTVSession)*i)))->~G__TTTVSession();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TTVSession*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TTVSession*) (soff))->~G__TTTVSession();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__TreeViewer_219_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TTVSession* dest = (TTVSession*) G__getstructoffset();
   *dest = *(TTVSession*) libp->para[0].ref;
   const TTVSession& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGSelectBox */
static int G__G__TreeViewer_220_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TGSelectBox* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGSelectBox(
(const TGWindow*) G__int(libp->para[0]), (const TGWindow*) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TGSelectBox(
(const TGWindow*) G__int(libp->para[0]), (const TGWindow*) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGSelectBox(
(const TGWindow*) G__int(libp->para[0]), (const TGWindow*) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TGSelectBox(
(const TGWindow*) G__int(libp->para[0]), (const TGWindow*) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGSelectBox((const TGWindow*) G__int(libp->para[0]), (const TGWindow*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TGSelectBox((const TGWindow*) G__int(libp->para[0]), (const TGWindow*) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreeViewerLN_TGSelectBox));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_220_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TGSelectBox*) G__getstructoffset())->EditedEntry());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_220_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGSelectBox*) G__getstructoffset())->GrabPointer();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_220_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGSelectBox*) G__getstructoffset())->SetLabel((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_220_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGSelectBox*) G__getstructoffset())->SetEntry((TTVLVEntry*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_220_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGSelectBox*) G__getstructoffset())->SaveText();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_220_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGSelectBox*) G__getstructoffset())->InsertText((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_220_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TGSelectBox*) G__getstructoffset())->ValidateAlias());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_220_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TGSelectBox::GetInstance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_220_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TGSelectBox::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_220_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGSelectBox::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_220_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TGSelectBox::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_220_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TGSelectBox::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_220_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGSelectBox*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_220_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGSelectBox::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_220_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TGSelectBox::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_220_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGSelectBox::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_220_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TGSelectBox::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGSelectBox G__TTGSelectBox;
static int G__G__TreeViewer_220_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TGSelectBox*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TGSelectBox*) (soff+(sizeof(TGSelectBox)*i)))->~G__TTGSelectBox();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TGSelectBox*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TGSelectBox*) (soff))->~G__TTGSelectBox();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TTVRecord */
static int G__G__TreeViewer_242_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TTVRecord* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TTVRecord[n];
     } else {
       p = new((void*) gvp) TTVRecord[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TTVRecord;
     } else {
       p = new((void*) gvp) TTVRecord;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreeViewerLN_TTVRecord));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_242_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTVRecord*) G__getstructoffset())->ExecuteUserCode();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_242_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTVRecord*) G__getstructoffset())->FormFrom((TTreeViewer*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_242_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTVRecord*) G__getstructoffset())->PlugIn((TTreeViewer*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_242_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TTVRecord*) G__getstructoffset())->GetX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_242_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TTVRecord*) G__getstructoffset())->GetY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_242_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TTVRecord*) G__getstructoffset())->GetZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_242_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TTVRecord*) G__getstructoffset())->GetUserCode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_242_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TTVRecord*) G__getstructoffset())->HasUserCode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_242_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TTVRecord*) G__getstructoffset())->MustExecuteCode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_242_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TTVRecord*) G__getstructoffset())->SetAutoexec((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TTVRecord*) G__getstructoffset())->SetAutoexec();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_242_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TTVRecord*) G__getstructoffset())->SetName((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TTVRecord*) G__getstructoffset())->SetName();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_242_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TTVRecord*) G__getstructoffset())->SetX((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TTVRecord*) G__getstructoffset())->SetX((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TTVRecord*) G__getstructoffset())->SetX();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_242_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TTVRecord*) G__getstructoffset())->SetY((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TTVRecord*) G__getstructoffset())->SetY((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TTVRecord*) G__getstructoffset())->SetY();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_242_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TTVRecord*) G__getstructoffset())->SetZ((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TTVRecord*) G__getstructoffset())->SetZ((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TTVRecord*) G__getstructoffset())->SetZ();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_242_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TTVRecord*) G__getstructoffset())->SetCut((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TTVRecord*) G__getstructoffset())->SetCut((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TTVRecord*) G__getstructoffset())->SetCut();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_242_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TTVRecord*) G__getstructoffset())->SetOption((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TTVRecord*) G__getstructoffset())->SetOption();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_242_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TTVRecord*) G__getstructoffset())->SetRC((Bool_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TTVRecord*) G__getstructoffset())->SetRC((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TTVRecord*) G__getstructoffset())->SetRC();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_242_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TTVRecord*) G__getstructoffset())->SetUserCode((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TTVRecord*) G__getstructoffset())->SetUserCode((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_242_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTVRecord*) G__getstructoffset())->SaveSource(*(ofstream*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_242_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TTVRecord::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_242_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TTVRecord::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_242_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TTVRecord::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_242_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TTVRecord::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_242_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTVRecord*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_242_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TTVRecord::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_242_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TTVRecord::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_242_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TTVRecord::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_242_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TTVRecord::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreeViewer_242_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TTVRecord* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TTVRecord(*(TTVRecord*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreeViewerLN_TTVRecord));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TTVRecord G__TTTVRecord;
static int G__G__TreeViewer_242_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TTVRecord*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TTVRecord*) (soff+(sizeof(TTVRecord)*i)))->~G__TTTVRecord();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TTVRecord*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TTVRecord*) (soff))->~G__TTTVRecord();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__TreeViewer_242_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TTVRecord* dest = (TTVRecord*) G__getstructoffset();
   *dest = *(TTVRecord*) libp->para[0].ref;
   const TTVRecord& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGItemContext */
static int G__G__TreeViewer_263_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TGItemContext* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGItemContext[n];
     } else {
       p = new((void*) gvp) TGItemContext[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGItemContext;
     } else {
       p = new((void*) gvp) TGItemContext;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreeViewerLN_TGItemContext));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_263_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGItemContext*) G__getstructoffset())->Associate((TTVLVEntry*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_263_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGItemContext*) G__getstructoffset())->EditExpression();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_263_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGItemContext*) G__getstructoffset())->Empty();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_263_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGItemContext*) G__getstructoffset())->RemoveItem();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_263_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGItemContext*) G__getstructoffset())->Scan();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_263_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((TGItemContext*) G__getstructoffset())->SetExpression((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((TGItemContext*) G__getstructoffset())->SetExpression((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TGItemContext*) G__getstructoffset())->SetExpression((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TGItemContext*) G__getstructoffset())->SetExpression();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_263_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TGItemContext::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_263_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGItemContext::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_263_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TGItemContext::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_263_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TGItemContext::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_263_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGItemContext*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_263_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGItemContext::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_263_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TGItemContext::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_263_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGItemContext::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_263_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TGItemContext::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreeViewer_263_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TGItemContext* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TGItemContext(*(TGItemContext*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreeViewerLN_TGItemContext));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGItemContext G__TTGItemContext;
static int G__G__TreeViewer_263_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TGItemContext*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TGItemContext*) (soff+(sizeof(TGItemContext)*i)))->~G__TTGItemContext();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TGItemContext*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TGItemContext*) (soff))->~G__TTGItemContext();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__TreeViewer_263_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TGItemContext* dest = (TGItemContext*) G__getstructoffset();
   *dest = *(TGItemContext*) libp->para[0].ref;
   const TGItemContext& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSpider */
static int G__G__TreeViewer_272_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSpider* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSpider[n];
     } else {
       p = new((void*) gvp) TSpider[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSpider;
     } else {
       p = new((void*) gvp) TSpider;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreeViewerLN_TSpider));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_272_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSpider* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSpider(
(TTree*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Option_t*) G__int(libp->para[3])
, (Long64_t) G__Longlong(libp->para[4]), (Long64_t) G__Longlong(libp->para[5]));
     } else {
       p = new((void*) gvp) TSpider(
(TTree*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Option_t*) G__int(libp->para[3])
, (Long64_t) G__Longlong(libp->para[4]), (Long64_t) G__Longlong(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSpider(
(TTree*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Option_t*) G__int(libp->para[3])
, (Long64_t) G__Longlong(libp->para[4]));
     } else {
       p = new((void*) gvp) TSpider(
(TTree*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Option_t*) G__int(libp->para[3])
, (Long64_t) G__Longlong(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSpider(
(TTree*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Option_t*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TSpider(
(TTree*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Option_t*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSpider(
(TTree*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TSpider(
(TTree*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreeViewerLN_TSpider));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_272_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSpider*) G__getstructoffset())->AddSuperposed((TSpider*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_272_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSpider*) G__getstructoffset())->AddVariable((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_272_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSpider*) G__getstructoffset())->DeleteVariable((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_272_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const TSpider*) G__getstructoffset())->GetAverageLineStyle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_272_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const TSpider*) G__getstructoffset())->GetAverageLineColor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_272_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const TSpider*) G__getstructoffset())->GetAverageLineWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_272_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const TSpider*) G__getstructoffset())->GetAverageFillColor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_272_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const TSpider*) G__getstructoffset())->GetAverageFillStyle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_272_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TSpider*) G__getstructoffset())->GetDisplayAverage());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_272_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((const TSpider*) G__getstructoffset())->GetCurrentEntry());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_272_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((const TSpider*) G__getstructoffset())->GetEntriesToProcess((Long64_t) G__Longlong(libp->para[0]), (Long64_t) G__Longlong(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_272_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSpider*) G__getstructoffset())->GetNx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_272_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSpider*) G__getstructoffset())->GetNy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_272_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TSpider*) G__getstructoffset())->GetSegmentDisplay());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_272_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSpider*) G__getstructoffset())->GotoEntry((Long64_t) G__Longlong(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_272_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSpider*) G__getstructoffset())->GotoNext();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_272_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSpider*) G__getstructoffset())->GotoPrevious();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_272_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSpider*) G__getstructoffset())->GotoFollowing();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_272_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSpider*) G__getstructoffset())->GotoPreceding();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_272_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSpider*) G__getstructoffset())->SetAverageLineStyle((Style_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_272_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSpider*) G__getstructoffset())->SetAverageLineColor((Color_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_272_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSpider*) G__getstructoffset())->SetAverageLineWidth((Width_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_272_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSpider*) G__getstructoffset())->SetAverageFillColor((Color_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_272_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSpider*) G__getstructoffset())->SetAverageFillStyle((Style_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_272_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSpider*) G__getstructoffset())->SetDisplayAverage((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_272_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSpider*) G__getstructoffset())->SetVariablesExpression((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_272_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSpider*) G__getstructoffset())->SetNdivRadial((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_272_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSpider*) G__getstructoffset())->SetNx((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_272_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSpider*) G__getstructoffset())->SetNy((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_272_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSpider*) G__getstructoffset())->SetSelectionExpression((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_272_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSpider*) G__getstructoffset())->SetSegmentDisplay((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_272_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSpider*) G__getstructoffset())->SetShowRange((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_272_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSpider*) G__getstructoffset())->SuperposeTo((TSpider*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_272_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSpider::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_272_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSpider::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_272_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSpider::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_272_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSpider::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_272_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSpider*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_272_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSpider::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_272_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSpider::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_272_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSpider::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_272_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSpider::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreeViewer_272_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSpider* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSpider(*(TSpider*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreeViewerLN_TSpider));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSpider G__TTSpider;
static int G__G__TreeViewer_272_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSpider*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSpider*) (soff+(sizeof(TSpider)*i)))->~G__TTSpider();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSpider*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSpider*) (soff))->~G__TTSpider();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__TreeViewer_272_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSpider* dest = (TSpider*) G__getstructoffset();
   *dest = *(TSpider*) libp->para[0].ref;
   const TSpider& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSpiderEditor */
static int G__G__TreeViewer_287_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSpiderEditor* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSpiderEditor(
(const TGWindow*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (Pixel_t) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) TSpiderEditor(
(const TGWindow*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (Pixel_t) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSpiderEditor(
(const TGWindow*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TSpiderEditor(
(const TGWindow*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSpiderEditor(
(const TGWindow*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TSpiderEditor(
(const TGWindow*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSpiderEditor((const TGWindow*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TSpiderEditor((const TGWindow*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSpiderEditor((const TGWindow*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TSpiderEditor((const TGWindow*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TSpiderEditor[n];
       } else {
         p = new((void*) gvp) TSpiderEditor[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TSpiderEditor;
       } else {
         p = new((void*) gvp) TSpiderEditor;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreeViewerLN_TSpiderEditor));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_287_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSpiderEditor*) G__getstructoffset())->DoAddVar();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_287_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSpiderEditor*) G__getstructoffset())->DoDeleteVar();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_287_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSpiderEditor*) G__getstructoffset())->DoDisplayAverage((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_287_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSpiderEditor*) G__getstructoffset())->DoGotoEntry();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_287_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSpiderEditor*) G__getstructoffset())->DoGotoNext();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_287_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSpiderEditor*) G__getstructoffset())->DoGotoPrevious();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_287_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSpiderEditor*) G__getstructoffset())->DoGotoFollowing();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_287_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSpiderEditor*) G__getstructoffset())->DoGotoPreceding();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_287_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSpiderEditor*) G__getstructoffset())->DoSetNx();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_287_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSpiderEditor*) G__getstructoffset())->DoSetNy();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_287_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSpiderEditor*) G__getstructoffset())->DoSetPlotType();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_287_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSpiderEditor*) G__getstructoffset())->DoAvLineStyle((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_287_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSpiderEditor*) G__getstructoffset())->DoAvLineWidth((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_287_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSpiderEditor*) G__getstructoffset())->DoAvLineColor((Pixel_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_287_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSpiderEditor*) G__getstructoffset())->DoAvFillColor((Pixel_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_287_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSpiderEditor*) G__getstructoffset())->DoAvFillPattern((Style_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_287_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSpiderEditor::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_287_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSpiderEditor::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_287_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSpiderEditor::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_287_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSpiderEditor::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_287_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSpiderEditor*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_287_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSpiderEditor::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_287_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSpiderEditor::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_287_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSpiderEditor::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_287_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSpiderEditor::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSpiderEditor G__TTSpiderEditor;
static int G__G__TreeViewer_287_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSpiderEditor*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSpiderEditor*) (soff+(sizeof(TSpiderEditor)*i)))->~G__TTSpiderEditor();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSpiderEditor*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSpiderEditor*) (soff))->~G__TTSpiderEditor();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TParallelCoordSelect */
static int G__G__TreeViewer_290_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TParallelCoordSelect* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TParallelCoordSelect[n];
     } else {
       p = new((void*) gvp) TParallelCoordSelect[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TParallelCoordSelect;
     } else {
       p = new((void*) gvp) TParallelCoordSelect;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordSelect));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_290_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TParallelCoordSelect* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TParallelCoordSelect((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TParallelCoordSelect((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordSelect));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_290_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordSelect*) G__getstructoffset())->SetActivated((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_290_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordSelect*) G__getstructoffset())->SetShowRanges((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_290_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordSelect*) G__getstructoffset())->SetTitle((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_290_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TParallelCoordSelect::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_290_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TParallelCoordSelect::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_290_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TParallelCoordSelect::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_290_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TParallelCoordSelect::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_290_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordSelect*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_290_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TParallelCoordSelect::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_290_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TParallelCoordSelect::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_290_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TParallelCoordSelect::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_290_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TParallelCoordSelect::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TParallelCoordSelect G__TTParallelCoordSelect;
static int G__G__TreeViewer_290_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TParallelCoordSelect*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TParallelCoordSelect*) (soff+(sizeof(TParallelCoordSelect)*i)))->~G__TTParallelCoordSelect();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TParallelCoordSelect*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TParallelCoordSelect*) (soff))->~G__TTParallelCoordSelect();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TParallelCoordVar */
static int G__G__TreeViewer_291_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TParallelCoordVar* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TParallelCoordVar[n];
     } else {
       p = new((void*) gvp) TParallelCoordVar[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TParallelCoordVar;
     } else {
       p = new((void*) gvp) TParallelCoordVar;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordVar));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_291_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TParallelCoordVar* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TParallelCoordVar(
(Double_t*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (TParallelCoord*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) TParallelCoordVar(
(Double_t*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (TParallelCoord*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordVar));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_291_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordVar*) G__getstructoffset())->AddRange((TParallelCoordRange*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_291_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordVar*) G__getstructoffset())->AddRange();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_291_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordVar*) G__getstructoffset())->DeleteVariable();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_291_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TParallelCoordVar*) G__getstructoffset())->Eval((Long64_t) G__Longlong(libp->para[0]), (TParallelCoordSelect*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_291_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TParallelCoordVar*) G__getstructoffset())->GetBarHisto());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_291_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TParallelCoordVar*) G__getstructoffset())->GetBoxPlot());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_291_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TParallelCoordVar*) G__getstructoffset())->GetHistogram());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_291_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TParallelCoordVar*) G__getstructoffset())->GetId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_291_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TParallelCoordVar*) G__getstructoffset())->GetLogScale());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_291_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TParallelCoordVar*) G__getstructoffset())->GetHistBinning());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_291_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TParallelCoordVar*) G__getstructoffset())->GetCurrentMin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_291_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TParallelCoordVar*) G__getstructoffset())->GetCurrentMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_291_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TParallelCoordVar*) G__getstructoffset())->GetCurrentAverage());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_291_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordVar*) G__getstructoffset())->GetEntryXY((Long64_t) G__Longlong(libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_291_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TParallelCoordVar*) G__getstructoffset())->GetEntryWeight((Long64_t) G__Longlong(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_291_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TParallelCoordVar*) G__getstructoffset())->GetHistHeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_291_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TParallelCoordVar*) G__getstructoffset())->GetHistLineWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_291_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordVar*) G__getstructoffset())->GetMinMaxMean();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_291_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordVar*) G__getstructoffset())->GetQuantiles();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_291_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TParallelCoordVar*) G__getstructoffset())->GetX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_291_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TParallelCoordVar*) G__getstructoffset())->GetY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_291_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TParallelCoordVar*) G__getstructoffset())->GetNbins());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_291_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((const TParallelCoordVar*) G__getstructoffset())->GetNentries());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_291_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TParallelCoordVar*) G__getstructoffset())->GetParallel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_291_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TParallelCoordVar*) G__getstructoffset())->GetRanges());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_291_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TParallelCoordVar*) G__getstructoffset())->GetValues());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_291_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TParallelCoordVar*) G__getstructoffset())->GetValuefromXY((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_291_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TParallelCoordVar*) G__getstructoffset())->GetVert());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_291_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordVar*) G__getstructoffset())->GetXYfromValue((Double_t) G__double(libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_291_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordVar*) G__getstructoffset())->Init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_291_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordVar*) G__getstructoffset())->PaintBoxPlot();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_291_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordVar*) G__getstructoffset())->PaintHistogram();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_291_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordVar*) G__getstructoffset())->PaintLabels();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_291_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordVar*) G__getstructoffset())->SetBoxPlot((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_291_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordVar*) G__getstructoffset())->SetBarHisto((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_291_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TParallelCoordVar*) G__getstructoffset())->SetHistogramLineWidth((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TParallelCoordVar*) G__getstructoffset())->SetHistogramLineWidth();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_291_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TParallelCoordVar*) G__getstructoffset())->SetHistogramHeight((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TParallelCoordVar*) G__getstructoffset())->SetHistogramHeight();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_291_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TParallelCoordVar*) G__getstructoffset())->SetHistogramBinning((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TParallelCoordVar*) G__getstructoffset())->SetHistogramBinning();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_291_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordVar*) G__getstructoffset())->SetCurrentLimits((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_291_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordVar*) G__getstructoffset())->SetCurrentMin((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_291_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordVar*) G__getstructoffset())->SetCurrentMax((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_291_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordVar*) G__getstructoffset())->SetInitMin((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_291_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordVar*) G__getstructoffset())->SetInitMax((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_291_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordVar*) G__getstructoffset())->SetLiveRangesUpdate((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_291_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordVar*) G__getstructoffset())->SetLogScale((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_291_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordVar*) G__getstructoffset())->SetValues((Long64_t) G__Longlong(libp->para[0]), (Double_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_291_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordVar*) G__getstructoffset())->SetX((Double_t) G__double(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_291_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordVar*) G__getstructoffset())->SetY((Double_t) G__double(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_291_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordVar*) G__getstructoffset())->Unzoom();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_291_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TParallelCoordVar::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_291_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TParallelCoordVar::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_291_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TParallelCoordVar::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_291_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TParallelCoordVar::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_291_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordVar*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_291_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TParallelCoordVar::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_291_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TParallelCoordVar::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_291_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TParallelCoordVar::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_291_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TParallelCoordVar::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreeViewer_291_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TParallelCoordVar* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TParallelCoordVar(*(TParallelCoordVar*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordVar));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TParallelCoordVar G__TTParallelCoordVar;
static int G__G__TreeViewer_291_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TParallelCoordVar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TParallelCoordVar*) (soff+(sizeof(TParallelCoordVar)*i)))->~G__TTParallelCoordVar();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TParallelCoordVar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TParallelCoordVar*) (soff))->~G__TTParallelCoordVar();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__TreeViewer_291_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TParallelCoordVar* dest = (TParallelCoordVar*) G__getstructoffset();
   *dest = *(TParallelCoordVar*) libp->para[0].ref;
   const TParallelCoordVar& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TParallelCoordRange */
static int G__G__TreeViewer_292_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TParallelCoordRange* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TParallelCoordRange[n];
     } else {
       p = new((void*) gvp) TParallelCoordRange[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TParallelCoordRange;
     } else {
       p = new((void*) gvp) TParallelCoordRange;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordRange));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_292_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TParallelCoordRange* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TParallelCoordRange(
(TParallelCoordVar*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (TParallelCoordSelect*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TParallelCoordRange(
(TParallelCoordVar*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (TParallelCoordSelect*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TParallelCoordRange(
(TParallelCoordVar*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     } else {
       p = new((void*) gvp) TParallelCoordRange(
(TParallelCoordVar*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TParallelCoordRange((TParallelCoordVar*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) TParallelCoordRange((TParallelCoordVar*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TParallelCoordRange((TParallelCoordVar*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TParallelCoordRange((TParallelCoordVar*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordRange));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_292_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordRange*) G__getstructoffset())->BringOnTop();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_292_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TParallelCoordRange*) G__getstructoffset())->GetMin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_292_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TParallelCoordRange*) G__getstructoffset())->GetMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_292_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TParallelCoordRange*) G__getstructoffset())->GetVar());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_292_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TParallelCoordRange*) G__getstructoffset())->GetSelection());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_292_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TParallelCoordRange*) G__getstructoffset())->IsIn((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_292_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordRange*) G__getstructoffset())->SendToBack();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_292_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TParallelCoordRange::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_292_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TParallelCoordRange::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_292_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TParallelCoordRange::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_292_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TParallelCoordRange::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_292_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordRange*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_292_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TParallelCoordRange::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_292_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TParallelCoordRange::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_292_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TParallelCoordRange::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_292_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TParallelCoordRange::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreeViewer_292_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TParallelCoordRange* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TParallelCoordRange(*(TParallelCoordRange*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordRange));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TParallelCoordRange G__TTParallelCoordRange;
static int G__G__TreeViewer_292_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TParallelCoordRange*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TParallelCoordRange*) (soff+(sizeof(TParallelCoordRange)*i)))->~G__TTParallelCoordRange();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TParallelCoordRange*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TParallelCoordRange*) (soff))->~G__TTParallelCoordRange();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TParallelCoord */
static int G__G__TreeViewer_294_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TParallelCoord* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TParallelCoord[n];
     } else {
       p = new((void*) gvp) TParallelCoord[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TParallelCoord;
     } else {
       p = new((void*) gvp) TParallelCoord;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoord));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TParallelCoord* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TParallelCoord((Long64_t) G__Longlong(libp->para[0]));
   } else {
     p = new((void*) gvp) TParallelCoord((Long64_t) G__Longlong(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoord));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TParallelCoord* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TParallelCoord((TTree*) G__int(libp->para[0]), (Long64_t) G__Longlong(libp->para[1]));
   } else {
     p = new((void*) gvp) TParallelCoord((TTree*) G__int(libp->para[0]), (Long64_t) G__Longlong(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoord));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TParallelCoord*) G__getstructoffset())->AddVariable((Double_t*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TParallelCoord*) G__getstructoffset())->AddVariable((Double_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoord*) G__getstructoffset())->AddVariable((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoord*) G__getstructoffset())->AddSelection((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoord*) G__getstructoffset())->ApplySelectionToTree();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TParallelCoord::BuildParallelCoord((TSelectorDraw*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoord*) G__getstructoffset())->CleanUpSelections((TParallelCoordRange*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoord*) G__getstructoffset())->RemoveVariable((TParallelCoordVar*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TParallelCoord*) G__getstructoffset())->RemoveVariable((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoord*) G__getstructoffset())->DeleteSelection((TParallelCoordSelect*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TParallelCoord*) G__getstructoffset())->GetCandleChart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((TParallelCoord*) G__getstructoffset())->GetCurrentFirst());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((TParallelCoord*) G__getstructoffset())->GetCurrentN());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TParallelCoord*) G__getstructoffset())->GetCurrentSelection());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TParallelCoord*) G__getstructoffset())->GetCurveDisplay());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TParallelCoord*) G__getstructoffset())->GetDotsSpacing());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((TParallelCoord*) G__getstructoffset())->GetEntryList((Bool_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((TParallelCoord*) G__getstructoffset())->GetEntryList());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TParallelCoord*) G__getstructoffset())->GetGlobalMin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TParallelCoord*) G__getstructoffset())->GetGlobalMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TParallelCoord*) G__getstructoffset())->GetGlobalScale());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TParallelCoord*) G__getstructoffset())->GetGlobalLogScale());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((TParallelCoord*) G__getstructoffset())->GetLineColor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((TParallelCoord*) G__getstructoffset())->GetLineWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TParallelCoord*) G__getstructoffset())->GetNbins());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TParallelCoord*) G__getstructoffset())->GetNvar());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((TParallelCoord*) G__getstructoffset())->GetNentries());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TParallelCoord*) G__getstructoffset())->GetSelectList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TParallelCoord*) G__getstructoffset())->GetSelection((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TParallelCoord*) G__getstructoffset())->GetTree());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TParallelCoord*) G__getstructoffset())->GetVariable((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TParallelCoord*) G__getstructoffset())->GetVariable((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TParallelCoord*) G__getstructoffset())->GetVarList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TParallelCoord*) G__getstructoffset())->GetVertDisplay());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TParallelCoord*) G__getstructoffset())->GetWeightCut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoord*) G__getstructoffset())->ResetTree();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TParallelCoord*) G__getstructoffset())->SaveEntryLists((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TParallelCoord*) G__getstructoffset())->SaveEntryLists((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TParallelCoord*) G__getstructoffset())->SaveEntryLists();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TParallelCoord*) G__getstructoffset())->SaveTree((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TParallelCoord*) G__getstructoffset())->SaveTree((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TParallelCoord*) G__getstructoffset())->SaveTree();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TParallelCoord*) G__getstructoffset())->SetAxisHistogramBinning((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TParallelCoord*) G__getstructoffset())->SetAxisHistogramBinning();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TParallelCoord*) G__getstructoffset())->SetAxisHistogramHeight((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TParallelCoord*) G__getstructoffset())->SetAxisHistogramHeight();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TParallelCoord*) G__getstructoffset())->SetAxisHistogramLineWidth((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TParallelCoord*) G__getstructoffset())->SetAxisHistogramLineWidth();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoord*) G__getstructoffset())->SetCandleChart((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TParallelCoord*) G__getstructoffset())->SetCurveDisplay((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TParallelCoord*) G__getstructoffset())->SetCurveDisplay();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoord*) G__getstructoffset())->SetCurrentEntries((TEntryList*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoord*) G__getstructoffset())->SetCurrentFirst((Long64_t) G__Longlong(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoord*) G__getstructoffset())->SetCurrentN((Long64_t) G__Longlong(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TParallelCoord*) G__getstructoffset())->SetCurrentSelection((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoord*) G__getstructoffset())->SetCurrentSelection((TParallelCoordSelect*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TParallelCoord*) G__getstructoffset())->SetDotsSpacing((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TParallelCoord*) G__getstructoffset())->SetDotsSpacing();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TParallelCoord::SetEntryList((TParallelCoord*) G__int(libp->para[0]), (TEntryList*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoord*) G__getstructoffset())->SetGlobalScale((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoord*) G__getstructoffset())->SetGlobalLogScale((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoord*) G__getstructoffset())->SetGlobalMin((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoord*) G__getstructoffset())->SetGlobalMax((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoord*) G__getstructoffset())->SetInitEntries((TEntryList*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoord*) G__getstructoffset())->SetLineColor((Color_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoord*) G__getstructoffset())->SetLineWidth((Width_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoord*) G__getstructoffset())->SetLiveRangesUpdate((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoord*) G__getstructoffset())->SetNentries((Long64_t) G__Longlong(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoord*) G__getstructoffset())->SetTree((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TParallelCoord*) G__getstructoffset())->SetVertDisplay((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TParallelCoord*) G__getstructoffset())->SetVertDisplay();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TParallelCoord*) G__getstructoffset())->SetWeightCut((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TParallelCoord*) G__getstructoffset())->SetWeightCut();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoord*) G__getstructoffset())->UnzoomAll();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TParallelCoord::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TParallelCoord::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TParallelCoord::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TParallelCoord::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoord*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TParallelCoord::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TParallelCoord::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TParallelCoord::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_294_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TParallelCoord::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__TreeViewer_294_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TParallelCoord* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TParallelCoord(*(TParallelCoord*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoord));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TParallelCoord G__TTParallelCoord;
static int G__G__TreeViewer_294_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TParallelCoord*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TParallelCoord*) (soff+(sizeof(TParallelCoord)*i)))->~G__TTParallelCoord();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TParallelCoord*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TParallelCoord*) (soff))->~G__TTParallelCoord();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__TreeViewer_294_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TParallelCoord* dest = (TParallelCoord*) G__getstructoffset();
   *dest = *(TParallelCoord*) libp->para[0].ref;
   const TParallelCoord& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TParallelCoordEditor */
static int G__G__TreeViewer_302_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TParallelCoordEditor* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TParallelCoordEditor(
(const TGWindow*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (Pixel_t) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) TParallelCoordEditor(
(const TGWindow*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (Pixel_t) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TParallelCoordEditor(
(const TGWindow*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TParallelCoordEditor(
(const TGWindow*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TParallelCoordEditor(
(const TGWindow*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TParallelCoordEditor(
(const TGWindow*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TParallelCoordEditor((const TGWindow*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TParallelCoordEditor((const TGWindow*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TParallelCoordEditor((const TGWindow*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TParallelCoordEditor((const TGWindow*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TParallelCoordEditor[n];
       } else {
         p = new((void*) gvp) TParallelCoordEditor[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TParallelCoordEditor;
       } else {
         p = new((void*) gvp) TParallelCoordEditor;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordEditor));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_302_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordEditor*) G__getstructoffset())->DoActivateSelection((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_302_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordEditor*) G__getstructoffset())->DoAddSelection();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_302_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordEditor*) G__getstructoffset())->DoAddVariable();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_302_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordEditor*) G__getstructoffset())->DoApplySelect();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_302_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordEditor*) G__getstructoffset())->DoDelayDrawing((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_302_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordEditor*) G__getstructoffset())->DoDeleteSelection();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_302_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordEditor*) G__getstructoffset())->DoDeleteVar();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_302_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordEditor*) G__getstructoffset())->DoDotsSpacing();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_302_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordEditor*) G__getstructoffset())->DoDotsSpacingField();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_302_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordEditor*) G__getstructoffset())->DoFirstEntry();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_302_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordEditor*) G__getstructoffset())->DoGlobalLineColor((Pixel_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_302_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordEditor*) G__getstructoffset())->DoGlobalLineWidth((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_302_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordEditor*) G__getstructoffset())->DoHideAllRanges((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_302_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordEditor*) G__getstructoffset())->DoHistShowBoxes((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_302_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordEditor*) G__getstructoffset())->DoHistWidth();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_302_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordEditor*) G__getstructoffset())->DoHistBinning();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_302_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordEditor*) G__getstructoffset())->DoHistColorSelect((Pixel_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_302_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordEditor*) G__getstructoffset())->DoHistPatternSelect((Style_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_302_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordEditor*) G__getstructoffset())->DoEntriesToDraw();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_302_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordEditor*) G__getstructoffset())->DoLineType();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_302_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordEditor*) G__getstructoffset())->DoLiveDotsSpacing((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_302_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordEditor*) G__getstructoffset())->DoLiveEntriesToDraw();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_302_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordEditor*) G__getstructoffset())->DoLiveWeightCut((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_302_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordEditor*) G__getstructoffset())->DoNentries();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_302_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordEditor*) G__getstructoffset())->DoPaintEntries((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_302_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordEditor*) G__getstructoffset())->DoSelectionSelect((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_302_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordEditor*) G__getstructoffset())->DoSelectLineColor((Pixel_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_302_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordEditor*) G__getstructoffset())->DoSelectLineWidth((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_302_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordEditor*) G__getstructoffset())->DoShowRanges((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_302_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordEditor*) G__getstructoffset())->DoUnApply();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_302_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordEditor*) G__getstructoffset())->DoVariableSelect((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_302_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordEditor*) G__getstructoffset())->DoWeightCut();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_302_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TParallelCoordEditor::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_302_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TParallelCoordEditor::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_302_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TParallelCoordEditor::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_302_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TParallelCoordEditor::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_302_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParallelCoordEditor*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_302_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TParallelCoordEditor::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_302_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TParallelCoordEditor::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_302_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TParallelCoordEditor::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_302_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TParallelCoordEditor::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TParallelCoordEditor G__TTParallelCoordEditor;
static int G__G__TreeViewer_302_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TParallelCoordEditor*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TParallelCoordEditor*) (soff+(sizeof(TParallelCoordEditor)*i)))->~G__TTParallelCoordEditor();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TParallelCoordEditor*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TParallelCoordEditor*) (soff))->~G__TTParallelCoordEditor();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGTreeTable */
static int G__G__TreeViewer_313_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TGTreeTable* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 8:
     //m: 8
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGTreeTable(
(TGWindow*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TTree*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (const char*) G__int(libp->para[5])
, (UInt_t) G__int(libp->para[6]), (UInt_t) G__int(libp->para[7]));
     } else {
       p = new((void*) gvp) TGTreeTable(
(TGWindow*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TTree*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (const char*) G__int(libp->para[5])
, (UInt_t) G__int(libp->para[6]), (UInt_t) G__int(libp->para[7]));
     }
     break;
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGTreeTable(
(TGWindow*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TTree*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (const char*) G__int(libp->para[5])
, (UInt_t) G__int(libp->para[6]));
     } else {
       p = new((void*) gvp) TGTreeTable(
(TGWindow*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TTree*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (const char*) G__int(libp->para[5])
, (UInt_t) G__int(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGTreeTable(
(TGWindow*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TTree*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (const char*) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) TGTreeTable(
(TGWindow*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TTree*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (const char*) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGTreeTable(
(TGWindow*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TTree*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) TGTreeTable(
(TGWindow*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TTree*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGTreeTable(
(TGWindow*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TTree*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TGTreeTable(
(TGWindow*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TTree*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGTreeTable(
(TGWindow*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TTree*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TGTreeTable(
(TGWindow*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TTree*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGTreeTable((TGWindow*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TGTreeTable((TGWindow*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGTreeTable((TGWindow*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TGTreeTable((TGWindow*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TGTreeTable[n];
       } else {
         p = new((void*) gvp) TGTreeTable[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TGTreeTable;
       } else {
         p = new((void*) gvp) TGTreeTable;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__TreeViewerLN_TGTreeTable));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_313_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TGTreeTable::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_313_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGTreeTable::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_313_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TGTreeTable::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_313_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TGTreeTable::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_313_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGTreeTable*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_313_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGTreeTable::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_313_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TGTreeTable::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_313_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGTreeTable::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__TreeViewer_313_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TGTreeTable::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGTreeTable G__TTGTreeTable;
static int G__G__TreeViewer_313_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TGTreeTable*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TGTreeTable*) (soff+(sizeof(TGTreeTable)*i)))->~G__TTGTreeTable();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TGTreeTable*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TGTreeTable*) (soff))->~G__TTGTreeTable();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TTreeViewer */

/* TTVLVContainer */

/* TTVLVEntry */

/* TTVSession */

/* TGSelectBox */

/* TTVRecord */

/* TGItemContext */

/* TSpider */

/* TSpiderEditor */

/* TParallelCoordSelect */

/* TParallelCoordVar */

/* TParallelCoordRange */

/* TParallelCoord */

/* TParallelCoordEditor */

/* TGTreeTable */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__TreeViewer {
 public:
  G__Sizep2memfuncG__TreeViewer(): p(&G__Sizep2memfuncG__TreeViewer::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__TreeViewer::*p)();
};

size_t G__get_sizep2memfuncG__TreeViewer()
{
  G__Sizep2memfuncG__TreeViewer a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__TreeViewer() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeViewerLN_TTreeViewer))) {
     TTreeViewer *G__Lderived;
     G__Lderived=(TTreeViewer*)0x1000;
     {
       TGMainFrame *G__Lpbase=(TGMainFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TTreeViewer),G__get_linked_tagnum(&G__G__TreeViewerLN_TGMainFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TTreeViewer),G__get_linked_tagnum(&G__G__TreeViewerLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TTreeViewer),G__get_linked_tagnum(&G__G__TreeViewerLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TTreeViewer),G__get_linked_tagnum(&G__G__TreeViewerLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TTreeViewer),G__get_linked_tagnum(&G__G__TreeViewerLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TTreeViewer),G__get_linked_tagnum(&G__G__TreeViewerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TTreeViewer),G__get_linked_tagnum(&G__G__TreeViewerLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeViewerLN_TTVLVContainer))) {
     TTVLVContainer *G__Lderived;
     G__Lderived=(TTVLVContainer*)0x1000;
     {
       TGLVContainer *G__Lpbase=(TGLVContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TTVLVContainer),G__get_linked_tagnum(&G__G__TreeViewerLN_TGLVContainer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGContainer *G__Lpbase=(TGContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TTVLVContainer),G__get_linked_tagnum(&G__G__TreeViewerLN_TGContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TTVLVContainer),G__get_linked_tagnum(&G__G__TreeViewerLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TTVLVContainer),G__get_linked_tagnum(&G__G__TreeViewerLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TTVLVContainer),G__get_linked_tagnum(&G__G__TreeViewerLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TTVLVContainer),G__get_linked_tagnum(&G__G__TreeViewerLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TTVLVContainer),G__get_linked_tagnum(&G__G__TreeViewerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TTVLVContainer),G__get_linked_tagnum(&G__G__TreeViewerLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeViewerLN_TTVLVEntry))) {
     TTVLVEntry *G__Lderived;
     G__Lderived=(TTVLVEntry*)0x1000;
     {
       TGLVEntry *G__Lpbase=(TGLVEntry*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TTVLVEntry),G__get_linked_tagnum(&G__G__TreeViewerLN_TGLVEntry),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TTVLVEntry),G__get_linked_tagnum(&G__G__TreeViewerLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TTVLVEntry),G__get_linked_tagnum(&G__G__TreeViewerLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TTVLVEntry),G__get_linked_tagnum(&G__G__TreeViewerLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TTVLVEntry),G__get_linked_tagnum(&G__G__TreeViewerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TTVLVEntry),G__get_linked_tagnum(&G__G__TreeViewerLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeViewerLN_TTVSession))) {
     TTVSession *G__Lderived;
     G__Lderived=(TTVSession*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TTVSession),G__get_linked_tagnum(&G__G__TreeViewerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeViewerLN_TGSelectBox))) {
     TGSelectBox *G__Lderived;
     G__Lderived=(TGSelectBox*)0x1000;
     {
       TGTransientFrame *G__Lpbase=(TGTransientFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TGSelectBox),G__get_linked_tagnum(&G__G__TreeViewerLN_TGTransientFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGMainFrame *G__Lpbase=(TGMainFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TGSelectBox),G__get_linked_tagnum(&G__G__TreeViewerLN_TGMainFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TGSelectBox),G__get_linked_tagnum(&G__G__TreeViewerLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TGSelectBox),G__get_linked_tagnum(&G__G__TreeViewerLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TGSelectBox),G__get_linked_tagnum(&G__G__TreeViewerLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TGSelectBox),G__get_linked_tagnum(&G__G__TreeViewerLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TGSelectBox),G__get_linked_tagnum(&G__G__TreeViewerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TGSelectBox),G__get_linked_tagnum(&G__G__TreeViewerLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeViewerLN_TTVRecord))) {
     TTVRecord *G__Lderived;
     G__Lderived=(TTVRecord*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TTVRecord),G__get_linked_tagnum(&G__G__TreeViewerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeViewerLN_TGContainer))) {
     TGContainer *G__Lderived;
     G__Lderived=(TGContainer*)0x1000;
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TGContainer),G__get_linked_tagnum(&G__G__TreeViewerLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TGContainer),G__get_linked_tagnum(&G__G__TreeViewerLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TGContainer),G__get_linked_tagnum(&G__G__TreeViewerLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TGContainer),G__get_linked_tagnum(&G__G__TreeViewerLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TGContainer),G__get_linked_tagnum(&G__G__TreeViewerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TGContainer),G__get_linked_tagnum(&G__G__TreeViewerLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeViewerLN_TGLVContainer))) {
     TGLVContainer *G__Lderived;
     G__Lderived=(TGLVContainer*)0x1000;
     {
       TGContainer *G__Lpbase=(TGContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TGLVContainer),G__get_linked_tagnum(&G__G__TreeViewerLN_TGContainer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TGLVContainer),G__get_linked_tagnum(&G__G__TreeViewerLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TGLVContainer),G__get_linked_tagnum(&G__G__TreeViewerLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TGLVContainer),G__get_linked_tagnum(&G__G__TreeViewerLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TGLVContainer),G__get_linked_tagnum(&G__G__TreeViewerLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TGLVContainer),G__get_linked_tagnum(&G__G__TreeViewerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TGLVContainer),G__get_linked_tagnum(&G__G__TreeViewerLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeViewerLN_TGLVEntry))) {
     TGLVEntry *G__Lderived;
     G__Lderived=(TGLVEntry*)0x1000;
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TGLVEntry),G__get_linked_tagnum(&G__G__TreeViewerLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TGLVEntry),G__get_linked_tagnum(&G__G__TreeViewerLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TGLVEntry),G__get_linked_tagnum(&G__G__TreeViewerLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TGLVEntry),G__get_linked_tagnum(&G__G__TreeViewerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TGLVEntry),G__get_linked_tagnum(&G__G__TreeViewerLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeViewerLN_TGItemContext))) {
     TGItemContext *G__Lderived;
     G__Lderived=(TGItemContext*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TGItemContext),G__get_linked_tagnum(&G__G__TreeViewerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeViewerLN_TSpider))) {
     TSpider *G__Lderived;
     G__Lderived=(TSpider*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TSpider),G__get_linked_tagnum(&G__G__TreeViewerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TSpider),G__get_linked_tagnum(&G__G__TreeViewerLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TSpider),G__get_linked_tagnum(&G__G__TreeViewerLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeViewerLN_TSpiderEditor))) {
     TSpiderEditor *G__Lderived;
     G__Lderived=(TSpiderEditor*)0x1000;
     {
       TGedFrame *G__Lpbase=(TGedFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TSpiderEditor),G__get_linked_tagnum(&G__G__TreeViewerLN_TGedFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TSpiderEditor),G__get_linked_tagnum(&G__G__TreeViewerLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TSpiderEditor),G__get_linked_tagnum(&G__G__TreeViewerLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TSpiderEditor),G__get_linked_tagnum(&G__G__TreeViewerLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TSpiderEditor),G__get_linked_tagnum(&G__G__TreeViewerLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TSpiderEditor),G__get_linked_tagnum(&G__G__TreeViewerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TSpiderEditor),G__get_linked_tagnum(&G__G__TreeViewerLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordSelect))) {
     TParallelCoordSelect *G__Lderived;
     G__Lderived=(TParallelCoordSelect*)0x1000;
     {
       TList *G__Lpbase=(TList*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordSelect),G__get_linked_tagnum(&G__G__TreeViewerLN_TList),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TSeqCollection *G__Lpbase=(TSeqCollection*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordSelect),G__get_linked_tagnum(&G__G__TreeViewerLN_TSeqCollection),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TCollection *G__Lpbase=(TCollection*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordSelect),G__get_linked_tagnum(&G__G__TreeViewerLN_TCollection),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordSelect),G__get_linked_tagnum(&G__G__TreeViewerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordSelect),G__get_linked_tagnum(&G__G__TreeViewerLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordVar))) {
     TParallelCoordVar *G__Lderived;
     G__Lderived=(TParallelCoordVar*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordVar),G__get_linked_tagnum(&G__G__TreeViewerLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordVar),G__get_linked_tagnum(&G__G__TreeViewerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordVar),G__get_linked_tagnum(&G__G__TreeViewerLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordVar),G__get_linked_tagnum(&G__G__TreeViewerLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordRange))) {
     TParallelCoordRange *G__Lderived;
     G__Lderived=(TParallelCoordRange*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordRange),G__get_linked_tagnum(&G__G__TreeViewerLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordRange),G__get_linked_tagnum(&G__G__TreeViewerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordRange),G__get_linked_tagnum(&G__G__TreeViewerLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoord))) {
     TParallelCoord *G__Lderived;
     G__Lderived=(TParallelCoord*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoord),G__get_linked_tagnum(&G__G__TreeViewerLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoord),G__get_linked_tagnum(&G__G__TreeViewerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordEditor))) {
     TParallelCoordEditor *G__Lderived;
     G__Lderived=(TParallelCoordEditor*)0x1000;
     {
       TGedFrame *G__Lpbase=(TGedFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordEditor),G__get_linked_tagnum(&G__G__TreeViewerLN_TGedFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordEditor),G__get_linked_tagnum(&G__G__TreeViewerLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordEditor),G__get_linked_tagnum(&G__G__TreeViewerLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordEditor),G__get_linked_tagnum(&G__G__TreeViewerLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordEditor),G__get_linked_tagnum(&G__G__TreeViewerLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordEditor),G__get_linked_tagnum(&G__G__TreeViewerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordEditor),G__get_linked_tagnum(&G__G__TreeViewerLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeViewerLN_TGTreeTable))) {
     TGTreeTable *G__Lderived;
     G__Lderived=(TGTreeTable*)0x1000;
     {
       TGTable *G__Lpbase=(TGTable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TGTreeTable),G__get_linked_tagnum(&G__G__TreeViewerLN_TGTable),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TGTreeTable),G__get_linked_tagnum(&G__G__TreeViewerLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TGTreeTable),G__get_linked_tagnum(&G__G__TreeViewerLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TGTreeTable),G__get_linked_tagnum(&G__G__TreeViewerLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TGTreeTable),G__get_linked_tagnum(&G__G__TreeViewerLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TGTreeTable),G__get_linked_tagnum(&G__G__TreeViewerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TGTreeTable),G__get_linked_tagnum(&G__G__TreeViewerLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWidget *G__Lpbase=(TGWidget*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TGTreeTable),G__get_linked_tagnum(&G__G__TreeViewerLN_TGWidget),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__TreeViewer() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Long_t",108,-1,0,-1);
   G__setnewtype(-1,"Signed long integer 4 bytes (long)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("Long64_t",110,-1,0,-1);
   G__setnewtype(-1,"Portable signed long integer 8 bytes",0);
   G__search_typename2("Style_t",115,-1,0,-1);
   G__setnewtype(-1,"Style number (short)",0);
   G__search_typename2("Width_t",115,-1,0,-1);
   G__setnewtype(-1,"Line width (short)",0);
   G__search_typename2("Color_t",115,-1,0,-1);
   G__setnewtype(-1,"Color number (short)",0);
   G__search_typename2("vector<TSchemaHelper>",117,G__get_linked_tagnum(&G__G__TreeViewerLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__TreeViewerLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__TreeViewerLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__TreeViewerLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__TreeViewerLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__TreeViewerLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Pixel_t",107,-1,0,-1);
   G__setnewtype(-1,"Pixel value",0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__TreeViewerLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__G__TreeViewerLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__G__TreeViewerLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__G__TreeViewerLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TTreeViewer */
static void G__setup_memvarTTreeViewer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TTreeViewer));
   { TTreeViewer *p; p=(TTreeViewer*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreeViewerLN_TTreeViewercLcLEListItemType),-1,-2,1,"kLTNoType=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreeViewerLN_TTreeViewercLcLEListItemType),-1,-2,1,"kLTPackType=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreeViewerLN_TTreeViewercLcLEListItemType),-1,-2,1,"kLTTreeType=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreeViewerLN_TTreeViewercLcLEListItemType),-1,-2,1,"kLTBranchType=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreeViewerLN_TTreeViewercLcLEListItemType),-1,-2,1,"kLTLeafType=8",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreeViewerLN_TTreeViewercLcLEListItemType),-1,-2,1,"kLTActionType=16",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreeViewerLN_TTreeViewercLcLEListItemType),-1,-2,1,"kLTDragType=32",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreeViewerLN_TTreeViewercLcLEListItemType),-1,-2,1,"kLTExpressionType=64",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreeViewerLN_TTreeViewercLcLEListItemType),-1,-2,1,"kLTCutType=128",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TTree),-1,-1,4,"fTree=",0,"selected tree");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TTVSession),-1,-1,4,"fSession=",0,"current tree-viewer session");
   G__memvar_setup((void*)0,67,0,1,-1,-1,-1,4,"fFilename=",0,"name of the file containing the tree");
   G__memvar_setup((void*)0,67,0,1,-1,-1,-1,4,"fSourceFile=",0,"name of the C++ source file - default treeviewer.C");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TString),-1,-1,4,"fLastOption=",0,"last graphic option");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TTree),-1,-1,4,"fMappedTree=",0,"listed tree");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TBranch),-1,-1,4,"fMappedBranch=",0,"listed branch");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fDimension=",0,"histogram dimension");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fVarDraw=",0,"true if an item is double-clicked");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fScanMode=",0,"flag activated when Scan Box is double-clicked");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TContextMenu),-1,-1,4,"fContextMenu=",0,"context menu for tree viewer");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGSelectBox),-1,-1,4,"fDialogBox=",0,"expression editor");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TList),-1,-1,4,"fTreeList=",0,"list of mapped trees");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTreeIndex=",0,"index of current tree in list");
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__TreeViewerLN_TGPicture),-1,-1,4,"fPicX=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__TreeViewerLN_TGPicture),-1,-1,4,"fPicY=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__TreeViewerLN_TGPicture),-1,-1,4,"fPicZ=",0,"pictures for X, Y and Z expressions");
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__TreeViewerLN_TGPicture),-1,-1,4,"fPicDraw=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__TreeViewerLN_TGPicture),-1,-1,4,"fPicStop=",0,"pictures for Draw/Stop buttons");
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__TreeViewerLN_TGPicture),-1,-1,4,"fPicRefr=",0,"pictures for Refresh buttons //ia");
   G__memvar_setup((void*)0,107,0,0,-1,G__defined_typename("Cursor_t"),-1,4,"fDefaultCursor=",0,"default cursor");
   G__memvar_setup((void*)0,107,0,0,-1,G__defined_typename("Cursor_t"),-1,4,"fWatchCursor=",0,"watch cursor");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TTimer),-1,-1,4,"fTimer=",0,"tree viewer timer");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fCounting=",0,"true if timer is counting");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fStopMapping=",0,"true if branch don't need remapping");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fEnableCut=",0,"true if cuts are enabled");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNexpressions=",0,"number of expression widgets");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGLayoutHints),-1,-1,4,"fMenuBarLayout=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGLayoutHints),-1,-1,4,"fMenuBarItemLayout=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGLayoutHints),-1,-1,4,"fMenuBarHelpLayout=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGMenuBar),-1,-1,4,"fMenuBar=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGPopupMenu),-1,-1,4,"fFileMenu=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGPopupMenu),-1,-1,4,"fEditMenu=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGPopupMenu),-1,-1,4,"fRunMenu=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGPopupMenu),-1,-1,4,"fOptionsMenu=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGPopupMenu),-1,-1,4,"fOptionsGen=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGPopupMenu),-1,-1,4,"fOptions1D=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGPopupMenu),-1,-1,4,"fOptions2D=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGPopupMenu),-1,-1,4,"fHelpMenu=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGToolBar),-1,-1,4,"fToolBar=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGLayoutHints),-1,-1,4,"fBarLayout=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGLabel),-1,-1,4,"fBarLbl1=",0,"label of command text entry");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGLabel),-1,-1,4,"fBarLbl2=",0,"label of option text entry");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGLabel),-1,-1,4,"fBarLbl3=",0,"label of histogram name text entry");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGCheckButton),-1,-1,4,"fBarH=",0,"checked for drawing current histogram with different graphic option");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGCheckButton),-1,-1,4,"fBarScan=",0,"checked for tree scan");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGCheckButton),-1,-1,4,"fBarRec=",0,"command recording toggle");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGTextEntry),-1,-1,4,"fBarCommand=",0,"user command entry");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGTextEntry),-1,-1,4,"fBarOption=",0,"histogram drawing option entry");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGTextEntry),-1,-1,4,"fBarHist=",0,"histogram name entry");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGHorizontalFrame),-1,-1,4,"fHf=",0,"main horizontal frame");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGDoubleVSlider),-1,-1,4,"fSlider=",0,"vertical slider to select processed tree entries;");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGVerticalFrame),-1,-1,4,"fV1=",0,"list tree mother");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGVerticalFrame),-1,-1,4,"fV2=",0,"list view mother");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGCompositeFrame),-1,-1,4,"fTreeHdr=",0,"header for list tree");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGCompositeFrame),-1,-1,4,"fListHdr=",0,"header for list view");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGLabel),-1,-1,4,"fLbl1=",0,"label for list tree");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGLabel),-1,-1,4,"fLbl2=",0,"label for list view");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGHorizontalFrame),-1,-1,4,"fBFrame=",0,"button frame");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGHorizontalFrame),-1,-1,4,"fHpb=",0,"progress bar frame");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGHProgressBar),-1,-1,4,"fProgressBar=",0,"progress bar");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGLabel),-1,-1,4,"fBLbl4=",0,"label for input list entry");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGLabel),-1,-1,4,"fBLbl5=",0,"label for output list entry");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGTextEntry),-1,-1,4,"fBarListIn=",0,"tree input event list name entry");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGTextEntry),-1,-1,4,"fBarListOut=",0,"tree output event list name entry");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGPictureButton),-1,-1,4,"fDRAW=",0,"DRAW button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGTextButton),-1,-1,4,"fSPIDER=",0,"SPIDER button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGPictureButton),-1,-1,4,"fSTOP=",0,"interrupt current command (not yet)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGPictureButton),-1,-1,4,"fREFR=",0,"REFRESH button  //ia");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGStatusBar),-1,-1,4,"fStatusBar=",0,"status bar");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGComboBox),-1,-1,4,"fCombo=",0,"combo box with session records");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGPictureButton),-1,-1,4,"fBGFirst=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGPictureButton),-1,-1,4,"fBGPrevious=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGPictureButton),-1,-1,4,"fBGRecord=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGPictureButton),-1,-1,4,"fBGNext=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGPictureButton),-1,-1,4,"fBGLast=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGTextButton),-1,-1,4,"fReset=",0,"clear expression's entries");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGCanvas),-1,-1,4,"fTreeView=",0,"ListTree canvas container");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGListTree),-1,-1,4,"fLt=",0,"ListTree with file and tree items");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGListView),-1,-1,4,"fListView=",0,"ListView with branches and leaves");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TTVLVContainer),-1,-1,4,"fLVContainer=",0,"container for listview");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TList),-1,-1,4,"fWidgets=",0,"list of widgets to be deleted");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TTVLVContainer */
static void G__setup_memvarTTVLVContainer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TTVLVContainer));
   { TTVLVContainer *p; p=(TTVLVContainer*)0x1000; if (p) { }
   G__memvar_setup((void*)0,107,0,0,-1,G__defined_typename("Cursor_t"),-1,4,"fCursor=",0,"current cursor");
   G__memvar_setup((void*)0,107,0,0,-1,G__defined_typename("Cursor_t"),-1,4,"fDefaultCursor=",0,"default cursor");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGListView),-1,-1,4,"fListView=",0,"associated list view");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TTreeViewer),-1,-1,4,"fViewer=",0,"pointer to tree viewer");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TList),-1,-1,4,"fExpressionList=",0,"list of user defined expression widgets");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TTVLVEntry */
static void G__setup_memvarTTVLVEntry(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TTVLVEntry));
   { TTVLVEntry *p; p=(TTVLVEntry*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TTVLVContainer),-1,-1,2,"fContainer=",0,"container to whom this item belongs");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TString),-1,-1,2,"fTrueName=",0,"name for this entry");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TString),-1,-1,2,"fAlias=",0,"alias for this entry");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TString),-1,-1,2,"fConvName=",0,"name converted into true expressions");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGToolTip),-1,-1,2,"fTip=",0,"tool tip associated with item");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsCut=",0,"flag for cut type items");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGItemContext),-1,-1,2,"fContext=",0,"associated context menu");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TTVSession */
static void G__setup_memvarTTVSession(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TTVSession));
   { TTVSession *p; p=(TTVSession*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TClonesArray),-1,-1,4,"fList=",0,"list of TV records");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TString),-1,-1,4,"fName=",0,"name of this session");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TTreeViewer),-1,-1,4,"fViewer=",0,"associated tree viewer");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCurrent=",0,"index of current record");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fRecords=",0,"number of records");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGSelectBox */
static void G__setup_memvarTGSelectBox(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TGSelectBox));
   { TGSelectBox *p; p=(TGSelectBox*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TTreeViewer),-1,-1,4,"fViewer=",0,"pointer to tree viewer");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGLabel),-1,-1,4,"fLabel=",0,"label");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TTVLVEntry),-1,-1,4,"fEntry=",0,"edited expression entry");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGTextEntry),-1,-1,4,"fTe=",0,"text entry box");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGLabel),-1,-1,4,"fLabelAlias=",0,"alias label");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGTextEntry),-1,-1,4,"fTeAlias=",0,"alias text entry");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TString),-1,-1,4,"fOldAlias=",0,"old alias for edited entry");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGLayoutHints),-1,-1,4,"fLayout=",0,"layout hints for widgets inside");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGLayoutHints),-1,-1,4,"fBLayout=",0,"layout for cancel button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGLayoutHints),-1,-1,4,"fBLayout1=",0,"layout for close button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGHorizontalFrame),-1,-1,4,"fBf=",0,"buttons frame");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGTextButton),-1,-1,4,"fDONE=",0,"close button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGTextButton),-1,-1,4,"fCANCEL=",0,"cancel button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGSelectBox),-1,-2,2,"fgInstance=",0,"pointer to this select box");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TTVRecord */
static void G__setup_memvarTTVRecord(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TTVRecord));
   { TTVRecord *p; p=(TTVRecord*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TString),-1,-1,1,"fName=",0,"name of this record");
   G__memvar_setup((void*)((long)(&p->fX)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TString),-1,-1,1,"fX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fXAlias)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TString),-1,-1,1,"fXAlias=",0,"X expression and alias");
   G__memvar_setup((void*)((long)(&p->fY)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TString),-1,-1,1,"fY=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fYAlias)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TString),-1,-1,1,"fYAlias=",0,"Y expression and alias");
   G__memvar_setup((void*)((long)(&p->fZ)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TString),-1,-1,1,"fZ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fZAlias)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TString),-1,-1,1,"fZAlias=",0,"Z expression and alias");
   G__memvar_setup((void*)((long)(&p->fCut)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TString),-1,-1,1,"fCut=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fCutAlias)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TString),-1,-1,1,"fCutAlias=",0,"cut expression and alias");
   G__memvar_setup((void*)((long)(&p->fOption)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TString),-1,-1,1,"fOption=",0,"graphic option");
   G__memvar_setup((void*)((long)(&p->fScanRedirected)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fScanRedirected=",0,"redirect switch");
   G__memvar_setup((void*)((long)(&p->fCutEnabled)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fCutEnabled=",0,"true if current cut is active");
   G__memvar_setup((void*)((long)(&p->fUserCode)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TString),-1,-1,1,"fUserCode=",0,"command executed when record is conected");
   G__memvar_setup((void*)((long)(&p->fAutoexec)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fAutoexec=",0,"autoexecute user code command");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGItemContext */
static void G__setup_memvarTGItemContext(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TGItemContext));
   { TGItemContext *p; p=(TGItemContext*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TTVLVEntry),-1,-1,2,"fItem=",0,"pointer to associated item");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSpider */
static void G__setup_memvarTSpider(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TSpider));
   { TSpider *p; p=(TSpider*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fNx=",0,"Number of horizontal spider plots.");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fNy=",0,"Number of vertical spider plots.");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fNcols=",0,"Number of variables.");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fArraySize=",0,"Actual size of the arrays.");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fEntry=",0,"Present entry number in fTree.");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fNentries=",0,"Number of entries.");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fFirstEntry=",0,"First entry.");
   G__memvar_setup((void*)0,78,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fCurrentEntries=",0,"![fNx*fNy] current selected entries;");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fAve=",0,"[fNcols] Average value of each variable.");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMax=",0,"[fNcols]  Maximum value of the variables.");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMin=",0,"[fNcols]  Minimum value of the variables.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TList),-1,-1,4,"fSuperposed=",0,"Superposed spider plots.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TTree),-1,-1,4,"fTree=",0,"Pointer to the TTree to represent.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TPolyLine),-1,-1,4,"fAveragePoly=",0,"Polygon representing the average variables value.");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TArc),-1,-1,4,"fAverageSlices=",0,"! Average slices.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TCanvas),-1,-1,4,"fCanvas=",0,"! Pointer to the mother pad.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TList),-1,-1,4,"fFormulas=",0,"List of all formulas to represent.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TList),-1,-1,4,"fInput=",0,"Used for fSelector.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TTreeFormulaManager),-1,-1,4,"fManager=",0,"Coordinator for the formulas.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGraphPolargram),-1,-1,4,"fPolargram=",0,"Polar graph.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TList),-1,-1,4,"fPolyList=",0,"Polygons representing the variables.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TTreeFormula),-1,-1,4,"fSelect=",0,"Selection condition");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TSelectorDraw),-1,-1,4,"fSelector=",0,"! Selector.");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fAngularLabels=",0,"True if the labels are oriented according to their axis.");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fDisplayAverage=",0,"Display or not the average.");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fForceDim=",0,"Force dimension.");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fSegmentDisplay=",0,"True if displaying a segment plot.");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fShowRange=",0,"Show range of variables or not.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSpiderEditor */
static void G__setup_memvarTSpiderEditor(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TSpiderEditor));
   { TSpiderEditor *p; p=(TSpiderEditor*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TSpider),-1,-1,2,"fSpider=",0,"Pointer to the TSpider.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGCheckButton),-1,-1,2,"fDisplayAverage=",0,"Button for the display of the average.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGLineStyleComboBox),-1,-1,2,"fAvLineStyleCombo=",0,"line style combo box for the average.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGLineWidthComboBox),-1,-1,2,"fAvLineWidthCombo=",0,"line width combo box for the average.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGColorSelect),-1,-1,2,"fAvLineColorSelect=",0,"line color widget for the average.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGColorSelect),-1,-1,2,"fAvFillColorSelect=",0,"fill color widget for the average.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGedPatternSelect),-1,-1,2,"fAvFillPatternSelect=",0,"fill pattern widget for the average.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGNumberEntryField),-1,-1,2,"fSetNx=",0,"To set the nx number of subpads.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGNumberEntryField),-1,-1,2,"fSetNy=",0,"To set the ny number of subpads.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGButtonGroup),-1,-1,2,"fBgroup=",0,"Group of the plot type selection.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGRadioButton),-1,-1,2,"fPolyLines=",0,"Polyline option.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGRadioButton),-1,-1,2,"fSegment=",0,"Segment option.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGCompositeFrame),-1,-1,2,"fBrowse=",0,"Browse tab.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGNumberEntryField),-1,-1,2,"fGotoEntry=",0,"Jump to an entry field.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGPictureButton),-1,-1,2,"fGotoNext=",0,"Go to next entries button.");
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__TreeViewerLN_TGPicture),-1,-1,2,"fPicNext=",0,"Go to next entries picture.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGPictureButton),-1,-1,2,"fGotoPrevious=",0,"Go to previous entries button.");
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__TreeViewerLN_TGPicture),-1,-1,2,"fPicPrevious=",0,"Go to previous entries picture.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGPictureButton),-1,-1,2,"fGotoFollowing=",0,"Go to next entry button.");
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__TreeViewerLN_TGPicture),-1,-1,2,"fPicFollowing=",0,"Go to next entry picture.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGPictureButton),-1,-1,2,"fGotoPreceding=",0,"Go to last entry button.");
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__TreeViewerLN_TGPicture),-1,-1,2,"fPicPreceding=",0,"Go to last entry picture.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGTextEntry),-1,-1,2,"fAddVar=",0,"Add variable field.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGTextEntry),-1,-1,2,"fDeleteVar=",0,"Delete variable field.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TParallelCoordSelect */
static void G__setup_memvarTParallelCoordSelect(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordSelect));
   { TParallelCoordSelect *p; p=(TParallelCoordSelect*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordSelectcLcLdA),-1,-2,1,"kActivated=262144",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordSelectcLcLdA),-1,-2,1,"kShowRanges=524288",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TString),-1,-1,4,"fTitle=",0,"Title of the selection.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TParallelCoordVar */
static void G__setup_memvarTParallelCoordVar(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordVar));
   { TParallelCoordVar *p; p=(TParallelCoordVar*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordVarcLcLdA),-1,-2,1,"kLogScale=16384",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordVarcLcLdA),-1,-2,1,"kShowBox=32768",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordVarcLcLdA),-1,-2,1,"kShowBarHisto=65536",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNbins=",0,"Number of bins in fHistogram.");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fHistoLW=",0,"Line width used to draw the histogram line.");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fId=",0,"Id identifying the variable for the editor.");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fNentries=",0,"Number of stored entries values.");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fX1=",0,"x1 coordinate of the axis.");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fX2=",0,"x2 coordinate of the axis.");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fY1=",0,"y1 coordinate of the axis.");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fY2=",0,"y2 coordinate of the axis.");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMinInit=",0,"Memory of the minimum when first initialized.");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMaxInit=",0,"Memory of the maximum when first initialized.");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMean=",0,"Average.");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMinCurrent=",0,"Current used minimum.");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMaxCurrent=",0,"Current used maximum.");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMed=",0,"Median value (Q2).");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fQua1=",0,"First quantile (Q1).");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fQua3=",0,"Third quantile (Q3).");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fHistoHeight=",0,"Histogram Height.");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fVal=",0,"![fNentries] Entries values for the variable.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TList),-1,-1,4,"fRanges=",0,"List of the TParallelRange owned by TParallelCoordVar.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoord),-1,-1,4,"fParallel=",0,"Pointer to the TParallelCoord which owns the TParallelCoordVar.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TH1F),-1,-1,4,"fHistogram=",0,"! Histogram holding the variable distribution.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TParallelCoordRange */
static void G__setup_memvarTParallelCoordRange(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordRange));
   { TParallelCoordRange *p; p=(TParallelCoordRange*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordRangecLcLdA),-1,-2,1,"kShowOnPad=32768",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordRangecLcLdA),-1,-2,1,"kLiveUpdate=65536",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMin=",0,"Min value for the range.");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMax=",0,"Max value for the range.");
   G__memvar_setup((void*)0,100,0,1,-1,G__defined_typename("Double_t"),-1,4,"fSize=",0,"Size of the painted range.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordVar),-1,-1,4,"fVar=",0,"Variable owning the range.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordSelect),-1,-1,4,"fSelect=",0,"Selection owning the range.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TParallelCoord */
static void G__setup_memvarTParallelCoord(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoord));
   { TParallelCoord *p; p=(TParallelCoord*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordcLcLdA),-1,-2,1,"kVertDisplay=16384",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordcLcLdA),-1,-2,1,"kCurveDisplay=32768",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordcLcLdA),-1,-2,1,"kPaintEntries=65536",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordcLcLdA),-1,-2,1,"kLiveUpdate=131072",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordcLcLdA),-1,-2,1,"kGlobalScale=524288",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordcLcLdA),-1,-2,1,"kCandleChart=1048576",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordcLcLdA),-1,-2,1,"kGlobalLogScale=2097152",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fNvar=",0,"Number of variables.");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fCurrentFirst=",0,"First entry to display.");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fCurrentN=",0,"Number of entries to display.");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fNentries=",0,"Number of entries;");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fDotsSpacing=",0,"Spacing between dots to draw the entries.");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Color_t"),-1,4,"fLineColor=",0,"entries line color.");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Width_t"),-1,4,"fLineWidth=",0,"entries line width.");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fWeightCut=",0,"Specify a cut on the entries from their weight (see TParallelCoordVar::GetEvtWeight(Long64_t))");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TEntryList),-1,-1,4,"fCurrentEntries=",0,"-> Current selected entries in the tree.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TEntryList),-1,-1,4,"fInitEntries=",0,"-> Selected entries when TParallelCoord first initialized.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TTree),-1,-1,4,"fTree=",0,"! Pointer to the TTree.");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TString),-1,-1,4,"fTreeName=",0,"Name of the tree.");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TString),-1,-1,4,"fTreeFileName=",0,"Name of the file containing the tree.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TList),-1,-1,4,"fVarList=",0,"List of the variables.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TList),-1,-1,4,"fSelectList=",0,"List of selections over the variables.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordSelect),-1,-1,4,"fCurrentSelection=",0,"! Current Selection being edited.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGaxis),-1,-1,4,"fCandleAxis=",0,"! An axis used when displaying a candle chart.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TParallelCoordEditor */
static void G__setup_memvarTParallelCoordEditor(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordEditor));
   { TParallelCoordEditor *p; p=(TParallelCoordEditor*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGCompositeFrame),-1,-1,2,"fVarTab=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoord),-1,-1,2,"fParallel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGColorSelect),-1,-1,2,"fGlobalLineColor=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGLineWidthComboBox),-1,-1,2,"fGlobalLineWidth=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGHSlider),-1,-1,2,"fDotsSpacing=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGNumberEntryField),-1,-1,2,"fDotsSpacingField=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGButtonGroup),-1,-1,2,"fLineTypeBgroup=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGRadioButton),-1,-1,2,"fLineTypePoly=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGRadioButton),-1,-1,2,"fLineTypeCurves=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGCheckButton),-1,-1,2,"fHideAllRanges=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGComboBox),-1,-1,2,"fSelectionSelect=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGColorSelect),-1,-1,2,"fSelectLineColor=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGLineWidthComboBox),-1,-1,2,"fSelectLineWidth=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGCheckButton),-1,-1,2,"fActivateSelection=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGCheckButton),-1,-1,2,"fShowRanges=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGTextButton),-1,-1,2,"fDeleteSelection=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGTextButton),-1,-1,2,"fAddSelection=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGTextEntry),-1,-1,2,"fAddSelectionField=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGCheckButton),-1,-1,2,"fPaintEntries=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGDoubleHSlider),-1,-1,2,"fEntriesToDraw=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGNumberEntryField),-1,-1,2,"fFirstEntry=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGNumberEntryField),-1,-1,2,"fNentries=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGTextButton),-1,-1,2,"fApplySelect=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGTextButton),-1,-1,2,"fUnApply=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGCheckButton),-1,-1,2,"fDelayDrawing=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGTextEntry),-1,-1,2,"fAddVariable=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGTextButton),-1,-1,2,"fButtonAddVar=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGComboBox),-1,-1,2,"fVariables=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGTextButton),-1,-1,2,"fDeleteVar=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGCheckButton),-1,-1,2,"fHistShowBoxes=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGNumberEntryField),-1,-1,2,"fHistWidth=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGNumberEntryField),-1,-1,2,"fHistBinning=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGTextButton),-1,-1,2,"fRenameVar=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGHSlider),-1,-1,2,"fWeightCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGNumberEntryField),-1,-1,2,"fWeightCutField=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGColorSelect),-1,-1,2,"fHistColorSelect=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TGedPatternSelect),-1,-1,2,"fHistPatternSelect=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fDelay=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGTreeTable */
static void G__setup_memvarTGTreeTable(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TGTreeTable));
   { TGTreeTable *p; p=(TGTreeTable*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TTree),-1,-1,4,"fTree=",0,"Pointer to the tree");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__TreeViewerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__TreeViewer() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTTreeViewer(void) {
   /* TTreeViewer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TTreeViewer));
   G__memfunc_setup("BuildInterface",1409,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Cut",300,(G__InterfaceMethod) NULL, 67, -1, -1, 0, 0, 1, 4, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Dimension",934,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EmptyBrackets",1342,(G__InterfaceMethod) NULL, 67, -1, -1, 0, 1, 1, 4, 1, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Ex",189,(G__InterfaceMethod) NULL, 67, -1, -1, 0, 0, 1, 4, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Ey",190,(G__InterfaceMethod) NULL, 67, -1, -1, 0, 0, 1, 4, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Ez",191,(G__InterfaceMethod) NULL, 67, -1, -1, 0, 0, 1, 4, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("En",179,(G__InterfaceMethod) NULL, 67, -1, -1, 0, 1, 1, 4, 1, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MapBranch",876,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 4, 0, 
"U 'TBranch' - 0 - branch C - - 10 '\"\"' prefix "
"U 'TGListTreeItem' - 0 '0' parent g - 'Bool_t' 0 'kTRUE' listIt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MapOptions",1034,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "l - 'Long_t' 0 - parm1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MapTree",686,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"U 'TTree' - 0 - tree U 'TGListTreeItem' - 0 '0' parent "
"g - 'Bool_t' 0 'kTRUE' listIt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFile",684,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ScanList",801,(G__InterfaceMethod) NULL, 67, -1, -1, 0, 0, 1, 4, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParentTree",1318,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'TGListTreeItem' - 0 - item", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoError",701,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 4, 8, 
"i - - 0 - level C - - 10 - location "
"C - - 10 - fmt u 'va_list' - 0 - va", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TTreeViewer",1110,G__G__TreeViewer_216_0_16, 105, G__get_linked_tagnum(&G__G__TreeViewerLN_TTreeViewer), -1, 0, 1, 1, 1, 0, "C - - 10 '0' treeName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TTreeViewer",1110,G__G__TreeViewer_216_0_17, 105, G__get_linked_tagnum(&G__G__TreeViewerLN_TTreeViewer), -1, 0, 1, 1, 1, 0, "U 'TTree' - 10 - tree", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AppendTree",1000,G__G__TreeViewer_216_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ActivateButtons",1568,G__G__TreeViewer_216_0_19, 121, -1, -1, 0, 4, 1, 1, 0, 
"g - 'Bool_t' 0 - first g - 'Bool_t' 0 - previous "
"g - 'Bool_t' 0 - next g - 'Bool_t' 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CloseWindow",1134,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Delete",595,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - -", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("DoRefresh",898,G__G__TreeViewer_216_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EditExpression",1462,G__G__TreeViewer_216_0_23, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Empty",527,G__G__TreeViewer_216_0_24, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EmptyAll",808,G__G__TreeViewer_216_0_25, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("ExecuteCommand",1426,G__G__TreeViewer_216_0_26, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - command g - 'Bool_t' 0 'kFALSE' fast", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("ExecuteDraw",1121,G__G__TreeViewer_216_0_27, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ExecuteSpider",1338,G__G__TreeViewer_216_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ExpressionItem",1471,G__G__TreeViewer_216_0_29, 85, G__get_linked_tagnum(&G__G__TreeViewerLN_TTVLVEntry), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ExpressionList",1484,G__G__TreeViewer_216_0_30, 85, G__get_linked_tagnum(&G__G__TreeViewerLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGrOpt",780,G__G__TreeViewer_216_0_31, 67, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTree",688,G__G__TreeViewer_216_0_32, 85, G__get_linked_tagnum(&G__G__TreeViewerLN_TTree), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HandleTimer",1101,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'TTimer' - 0 - timer", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsCutEnabled",1171,G__G__TreeViewer_216_0_34, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsScanRedirected",1596,G__G__TreeViewer_216_0_35, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakeSelector",1215,G__G__TreeViewer_216_0_36, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - - 10 '0' selector", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("Message",709,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - msg", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("NewExpression",1370,G__G__TreeViewer_216_0_38, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("PrintEntries",1255,G__G__TreeViewer_216_0_39, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Process",735,G__G__TreeViewer_216_0_40, 110, -1, G__defined_typename("Long64_t"), 0, 4, 1, 1, 0, 
"C - - 10 - filename C - 'Option_t' 10 '\"\"' option "
"n - 'Long64_t' 0 '1000000000' nentries n - 'Long64_t' 0 '0' firstentry", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("ProcessMessage",1444,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"l - 'Long_t' 0 - msg l - 'Long_t' 0 - parm1 "
"l - 'Long_t' 0 - parm2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("RemoveItem",1021,G__G__TreeViewer_216_0_42, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RemoveLastRecord",1633,G__G__TreeViewer_216_0_43, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("SaveSource",1024,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 '\"\"' filename C - 'Option_t' 10 '\"\"' option", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("SetHistogramTitle",1756,G__G__TreeViewer_216_0_45, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCutMode",989,G__G__TreeViewer_216_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' enabled", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCurrentRecord",1646,G__G__TreeViewer_216_0_47, 121, -1, -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - entry", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGrOpt",792,G__G__TreeViewer_216_0_48, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNexpressions",1597,G__G__TreeViewer_216_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - expr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRecordName",1292,G__G__TreeViewer_216_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("SetScanFileName",1458,G__G__TreeViewer_216_0_51, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '\"\"' name", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("SetScanMode",1078,G__G__TreeViewer_216_0_52, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' mode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetScanRedirect",1507,G__G__TreeViewer_216_0_53, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - mode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSession",1040,G__G__TreeViewer_216_0_54, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTVSession' - 0 - session", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetUserCode",1094,G__G__TreeViewer_216_0_55, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - code g - 'Bool_t' 0 'kTRUE' autoexec", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("SetTreeName",1085,G__G__TreeViewer_216_0_56, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - treeName", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("SwitchTree",1026,G__G__TreeViewer_216_0_57, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateCombo",1107,G__G__TreeViewer_216_0_58, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateRecord",1218,G__G__TreeViewer_216_0_59, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '\"new name\"' name", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__TreeViewer_216_0_60, 85, G__get_linked_tagnum(&G__G__TreeViewerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TTreeViewer::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__TreeViewer_216_0_61, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TTreeViewer::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__TreeViewer_216_0_62, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TTreeViewer::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__TreeViewer_216_0_63, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TTreeViewer::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__TreeViewerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__TreeViewer_216_0_67, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__TreeViewer_216_0_68, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TTreeViewer::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__TreeViewer_216_0_69, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TTreeViewer::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__TreeViewer_216_0_70, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TTreeViewer::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__TreeViewer_216_0_71, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TTreeViewer::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TTreeViewer", 1236, G__G__TreeViewer_216_0_72, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTTVLVContainer(void) {
   /* TTVLVContainer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TTVLVContainer));
   G__memfunc_setup("TTVLVContainer",1347,G__G__TreeViewer_217_0_1, 105, G__get_linked_tagnum(&G__G__TreeViewerLN_TTVLVContainer), -1, 0, 4, 1, 1, 0, 
"U 'TGWindow' - 10 - p h - 'UInt_t' 0 - w "
"h - 'UInt_t' 0 - h h - 'UInt_t' 0 'kSunkenFrame' options", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddThisItem",1072,G__G__TreeViewer_217_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTVLVEntry' - 0 - item", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Cut",300,G__G__TreeViewer_217_0_3, 67, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EmptyAll",808,G__G__TreeViewer_217_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", "empty all items of expression type", (void*) NULL, 0);
   G__memfunc_setup("ExpressionItem",1471,G__G__TreeViewer_217_0_5, 85, G__get_linked_tagnum(&G__G__TreeViewerLN_TTVLVEntry), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ExpressionList",1484,G__G__TreeViewer_217_0_6, 85, G__get_linked_tagnum(&G__G__TreeViewerLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Ex",189,G__G__TreeViewer_217_0_7, 67, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Ey",190,G__G__TreeViewer_217_0_8, 67, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Ez",191,G__G__TreeViewer_217_0_9, 67, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetViewer",914,G__G__TreeViewer_217_0_10, 85, G__get_linked_tagnum(&G__G__TreeViewerLN_TTreeViewer), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetListView",1123,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TGListView' - 0 - lv", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetViewer",926,G__G__TreeViewer_217_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTreeViewer' - 0 - viewer", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RemoveNonStatic",1537,G__G__TreeViewer_217_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ScanList",801,G__G__TreeViewer_217_0_14, 67, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SelectItem",1007,G__G__TreeViewer_217_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HandleButton",1224,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'Event_t' - 0 - event", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HandleMotion",1218,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'Event_t' - 0 - event", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__TreeViewer_217_0_18, 85, G__get_linked_tagnum(&G__G__TreeViewerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TTVLVContainer::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__TreeViewer_217_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TTVLVContainer::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__TreeViewer_217_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TTVLVContainer::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__TreeViewer_217_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TTVLVContainer::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__TreeViewerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__TreeViewer_217_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__TreeViewer_217_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TTVLVContainer::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__TreeViewer_217_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TTVLVContainer::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__TreeViewer_217_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TTVLVContainer::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__TreeViewer_217_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TTVLVContainer::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TTVLVContainer", 1473, G__G__TreeViewer_217_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTTVLVEntry(void) {
   /* TTVLVEntry */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TTVLVEntry));
   G__memfunc_setup("FullConverted",1341,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TTVLVEntry",946,G__G__TreeViewer_218_0_2, 105, G__get_linked_tagnum(&G__G__TreeViewerLN_TTVLVEntry), -1, 0, 6, 1, 1, 0, 
"U 'TGWindow' - 10 - p U 'TGPicture' - 10 - bigpic "
"U 'TGPicture' - 10 - smallpic U 'TGString' - 0 - name "
"U 'TGString' - 2 - subnames i 'EListViewMode' - 0 - ViewMode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConvertAliases",1443,G__G__TreeViewer_218_0_3, 67, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CopyItem",810,G__G__TreeViewer_218_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTVLVEntry' - 0 - dest", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAlias",778,G__G__TreeViewer_218_0_5, 67, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetContainer",1219,G__G__TreeViewer_218_0_6, 85, G__get_linked_tagnum(&G__G__TreeViewerLN_TTVLVContainer), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetContext",1029,G__G__TreeViewer_218_0_7, 85, G__get_linked_tagnum(&G__G__TreeViewerLN_TGItemContext), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetConvName",1079,G__G__TreeViewer_218_0_8, 67, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrueName",1089,G__G__TreeViewer_218_0_9, 67, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTip",589,G__G__TreeViewer_218_0_10, 85, G__get_linked_tagnum(&G__G__TreeViewerLN_TGToolTip), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HandleCrossing",1428,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'Event_t' - 0 - event", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HasAlias",774,G__G__TreeViewer_218_0_12, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsCut",488,G__G__TreeViewer_218_0_13, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrependTilde",1216,G__G__TreeViewer_218_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCutType",1018,G__G__TreeViewer_218_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kFALSE' type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetItemName",1084,G__G__TreeViewer_218_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAlias",790,G__G__TreeViewer_218_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - alias", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetExpression",1372,G__G__TreeViewer_218_0_18, 121, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 - name C - - 10 - alias "
"g - 'Bool_t' 0 'kFALSE' cutType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrueName",1101,G__G__TreeViewer_218_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetToolTipText",1436,G__G__TreeViewer_218_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - text l - 'Long_t' 0 '1000' delayms", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSmallPic",1089,G__G__TreeViewer_218_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TGPicture' - 10 - spic", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Empty",527,G__G__TreeViewer_218_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__TreeViewer_218_0_23, 85, G__get_linked_tagnum(&G__G__TreeViewerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TTVLVEntry::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__TreeViewer_218_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TTVLVEntry::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__TreeViewer_218_0_25, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TTVLVEntry::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__TreeViewer_218_0_26, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TTVLVEntry::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__TreeViewerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__TreeViewer_218_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__TreeViewer_218_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TTVLVEntry::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__TreeViewer_218_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TTVLVEntry::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__TreeViewer_218_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TTVLVEntry::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__TreeViewer_218_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TTVLVEntry::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TTVLVEntry", 1072, G__G__TreeViewer_218_0_35, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTTVSession(void) {
   /* TTVSession */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TTVSession));
   G__memfunc_setup("TTVSession",994,G__G__TreeViewer_219_0_1, 105, G__get_linked_tagnum(&G__G__TreeViewerLN_TTVSession), -1, 0, 1, 1, 1, 0, "U 'TTreeViewer' - 0 - tv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetName",673,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetName",685,G__G__TreeViewer_219_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRecordName",1292,G__G__TreeViewer_219_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddRecord",872,G__G__TreeViewer_219_0_5, 85, G__get_linked_tagnum(&G__G__TreeViewerLN_TTVRecord), -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kFALSE' fromFile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEntries",1018,G__G__TreeViewer_219_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCurrent",1027,G__G__TreeViewer_219_0_7, 85, G__get_linked_tagnum(&G__G__TreeViewerLN_TTVRecord), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRecord",895,G__G__TreeViewer_219_0_8, 85, G__get_linked_tagnum(&G__G__TreeViewerLN_TTVRecord), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("First",520,G__G__TreeViewer_219_0_9, 85, G__get_linked_tagnum(&G__G__TreeViewerLN_TTVRecord), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Last",404,G__G__TreeViewer_219_0_10, 85, G__get_linked_tagnum(&G__G__TreeViewerLN_TTVRecord), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Next",415,G__G__TreeViewer_219_0_11, 85, G__get_linked_tagnum(&G__G__TreeViewerLN_TTVRecord), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Previous",861,G__G__TreeViewer_219_0_12, 85, G__get_linked_tagnum(&G__G__TreeViewerLN_TTVRecord), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RemoveLastRecord",1633,G__G__TreeViewer_219_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Show",417,G__G__TreeViewer_219_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTVRecord' - 0 - rec", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveSource",1024,G__G__TreeViewer_219_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'basic_ofstream<char,char_traits<char> >' 'ofstream' 1 - out", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateRecord",1218,G__G__TreeViewer_219_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__TreeViewer_219_0_17, 85, G__get_linked_tagnum(&G__G__TreeViewerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TTVSession::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__TreeViewer_219_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TTVSession::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__TreeViewer_219_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TTVSession::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__TreeViewer_219_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TTVSession::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__TreeViewerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__TreeViewer_219_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__TreeViewer_219_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TTVSession::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__TreeViewer_219_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TTVSession::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__TreeViewer_219_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TTVSession::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__TreeViewer_219_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TTVSession::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TTVSession", 994, G__G__TreeViewer_219_0_29, (int) ('i'), G__get_linked_tagnum(&G__G__TreeViewerLN_TTVSession), -1, 0, 1, 1, 1, 0, "u 'TTVSession' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TTVSession", 1120, G__G__TreeViewer_219_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__TreeViewer_219_0_31, (int) ('u'), G__get_linked_tagnum(&G__G__TreeViewerLN_TTVSession), -1, 1, 1, 1, 1, 0, "u 'TTVSession' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGSelectBox(void) {
   /* TGSelectBox */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TGSelectBox));
   G__memfunc_setup("TGSelectBox",1060,G__G__TreeViewer_220_0_1, 105, G__get_linked_tagnum(&G__G__TreeViewerLN_TGSelectBox), -1, 0, 4, 1, 1, 0, 
"U 'TGWindow' - 10 - p U 'TGWindow' - 10 - main "
"h - 'UInt_t' 0 '10' w h - 'UInt_t' 0 '10' h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CloseWindow",1134,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("EditedEntry",1121,G__G__TreeViewer_220_0_3, 85, G__get_linked_tagnum(&G__G__TreeViewerLN_TTVLVEntry), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GrabPointer",1117,G__G__TreeViewer_220_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLabel",780,G__G__TreeViewer_220_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEntry",830,G__G__TreeViewer_220_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTVLVEntry' - 0 - entry", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveText",820,G__G__TreeViewer_220_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InsertText",1050,G__G__TreeViewer_220_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - text", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ProcessMessage",1444,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"l - 'Long_t' 0 - msg l - 'Long_t' 0 - parm1 "
"l - 'Long_t' 0 - parm2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ValidateAlias",1300,G__G__TreeViewer_220_0_10, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInstance",1109,G__G__TreeViewer_220_0_11, 85, G__get_linked_tagnum(&G__G__TreeViewerLN_TGSelectBox), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TGSelectBox* (*)())(&TGSelectBox::GetInstance) ), 0);
   G__memfunc_setup("Class",502,G__G__TreeViewer_220_0_12, 85, G__get_linked_tagnum(&G__G__TreeViewerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TGSelectBox::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__TreeViewer_220_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGSelectBox::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__TreeViewer_220_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TGSelectBox::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__TreeViewer_220_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TGSelectBox::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__TreeViewerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__TreeViewer_220_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__TreeViewer_220_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGSelectBox::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__TreeViewer_220_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TGSelectBox::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__TreeViewer_220_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGSelectBox::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__TreeViewer_220_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TGSelectBox::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TGSelectBox", 1186, G__G__TreeViewer_220_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTTVRecord(void) {
   /* TTVRecord */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TTVRecord));
   G__memfunc_setup("TTVRecord",861,G__G__TreeViewer_242_0_1, 105, G__get_linked_tagnum(&G__G__TreeViewerLN_TTVRecord), -1, 0, 0, 1, 1, 0, "", "default constructor", (void*) NULL, 0);
   G__memfunc_setup("ExecuteUserCode",1517,G__G__TreeViewer_242_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FormFrom",808,G__G__TreeViewer_242_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTreeViewer' - 0 - tv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PlugIn",591,G__G__TreeViewer_242_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTreeViewer' - 0 - tv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetX",376,G__G__TreeViewer_242_0_5, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetY",377,G__G__TreeViewer_242_0_6, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZ",378,G__G__TreeViewer_242_0_7, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetName",673,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetUserCode",1082,G__G__TreeViewer_242_0_9, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasUserCode",1078,G__G__TreeViewer_242_0_10, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MustExecuteCode",1527,G__G__TreeViewer_242_0_11, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAutoexec",1130,G__G__TreeViewer_242_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' autoexec", "*TOGGLE* *GETTER=MustExecuteCode", (void*) NULL, 0);
   G__memfunc_setup("SetName",685,G__G__TreeViewer_242_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '\"\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetX",388,G__G__TreeViewer_242_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 '\"\"' x C - - 10 '\"-empty-\"' xal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetY",389,G__G__TreeViewer_242_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 '\"\"' y C - - 10 '\"-empty-\"' yal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetZ",390,G__G__TreeViewer_242_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 '\"\"' z C - - 10 '\"-empty-\"' zal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCut",600,G__G__TreeViewer_242_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 '\"\"' cut C - - 10 '\"-empty-\"' cal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOption",933,G__G__TreeViewer_242_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '\"\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRC",449,G__G__TreeViewer_242_0_19, 121, -1, -1, 0, 2, 1, 1, 0, 
"g - 'Bool_t' 0 'kFALSE' redirect g - 'Bool_t' 0 'kTRUE' cut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetUserCode",1094,G__G__TreeViewer_242_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - code g - 'Bool_t' 0 'kTRUE' autoexec", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("SaveSource",1024,G__G__TreeViewer_242_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'basic_ofstream<char,char_traits<char> >' 'ofstream' 1 - out", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__TreeViewer_242_0_22, 85, G__get_linked_tagnum(&G__G__TreeViewerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TTVRecord::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__TreeViewer_242_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TTVRecord::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__TreeViewer_242_0_24, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TTVRecord::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__TreeViewer_242_0_25, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TTVRecord::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__TreeViewerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__TreeViewer_242_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__TreeViewer_242_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TTVRecord::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__TreeViewer_242_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TTVRecord::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__TreeViewer_242_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TTVRecord::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__TreeViewer_242_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TTVRecord::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TTVRecord", 861, G__G__TreeViewer_242_0_34, (int) ('i'), G__get_linked_tagnum(&G__G__TreeViewerLN_TTVRecord), -1, 0, 1, 1, 1, 0, "u 'TTVRecord' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TTVRecord", 987, G__G__TreeViewer_242_0_35, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__TreeViewer_242_0_36, (int) ('u'), G__get_linked_tagnum(&G__G__TreeViewerLN_TTVRecord), -1, 1, 1, 1, 1, 0, "u 'TTVRecord' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGItemContext(void) {
   /* TGItemContext */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TGItemContext));
   G__memfunc_setup("TGItemContext",1295,G__G__TreeViewer_263_0_1, 105, G__get_linked_tagnum(&G__G__TreeViewerLN_TGItemContext), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Associate",924,G__G__TreeViewer_263_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTVLVEntry' - 0 - item", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Delete",595,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - -", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("Draw",398,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("EditExpression",1462,G__G__TreeViewer_263_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("Empty",527,G__G__TreeViewer_263_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("RemoveItem",1021,G__G__TreeViewer_263_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("Scan",389,G__G__TreeViewer_263_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("SetExpression",1372,G__G__TreeViewer_263_0_9, 121, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 '\"\"' name C - - 10 '\"-empty-\"' alias "
"g - 'Bool_t' 0 'kFALSE' cut", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__TreeViewer_263_0_10, 85, G__get_linked_tagnum(&G__G__TreeViewerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TGItemContext::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__TreeViewer_263_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGItemContext::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__TreeViewer_263_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TGItemContext::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__TreeViewer_263_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TGItemContext::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__TreeViewerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__TreeViewer_263_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__TreeViewer_263_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGItemContext::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__TreeViewer_263_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TGItemContext::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__TreeViewer_263_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGItemContext::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__TreeViewer_263_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TGItemContext::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TGItemContext", 1295, G__G__TreeViewer_263_0_22, (int) ('i'), G__get_linked_tagnum(&G__G__TreeViewerLN_TGItemContext), -1, 0, 1, 1, 1, 0, "u 'TGItemContext' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TGItemContext", 1421, G__G__TreeViewer_263_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__TreeViewer_263_0_24, (int) ('u'), G__get_linked_tagnum(&G__G__TreeViewerLN_TGItemContext), -1, 1, 1, 1, 1, 0, "u 'TGItemContext' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSpider(void) {
   /* TSpider */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TSpider));
   G__memfunc_setup("FindTextAlign",1297,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "d - 'Double_t' 0 - theta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindTextAngle",1293,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 4, 0, "d - 'Double_t' 0 - theta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitVariables",1325,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"n - 'Long64_t' 0 - firstentry n - 'Long64_t' 0 - nentries", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawPoly",818,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "C - 'Option_t' 10 - options", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawPolyAverage",1517,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "C - 'Option_t' 10 - options", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawSlices",1009,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "C - 'Option_t' 10 - options", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawSlicesAverage",1708,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "C - 'Option_t' 10 - options", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SyncFormulas",1254,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitArrays",1030,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - 'Int_t' 0 - newsize", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCurrentEntries",1769,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateView",1022,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSpider",699,G__G__TreeViewer_272_0_12, 105, G__get_linked_tagnum(&G__G__TreeViewerLN_TSpider), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSpider",699,G__G__TreeViewer_272_0_13, 105, G__get_linked_tagnum(&G__G__TreeViewerLN_TSpider), -1, 0, 6, 1, 1, 0, 
"U 'TTree' - 0 - tree C - - 10 - varexp "
"C - - 10 - selection C - 'Option_t' 10 '\"\"' option "
"n - 'Long64_t' 0 '0' nentries n - 'Long64_t' 0 '0' firstentry", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddSuperposed",1331,G__G__TreeViewer_272_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TSpider' - 0 - sp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddVariable",1071,G__G__TreeViewer_272_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - varexp", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("DeleteVariable",1401,G__G__TreeViewer_272_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - varexp", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("Draw",398,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' options", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DistancetoPrimitive",1991,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ExecuteEvent",1237,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - event i - 'Int_t' 0 - px "
"i - 'Int_t' 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetAverageLineStyle",1908,G__G__TreeViewer_272_0_20, 115, -1, G__defined_typename("Style_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAverageLineColor",1890,G__G__TreeViewer_272_0_21, 115, -1, G__defined_typename("Color_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAverageLineWidth",1891,G__G__TreeViewer_272_0_22, 115, -1, G__defined_typename("Width_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAverageFillColor",1889,G__G__TreeViewer_272_0_23, 115, -1, G__defined_typename("Color_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAverageFillStyle",1907,G__G__TreeViewer_272_0_24, 115, -1, G__defined_typename("Style_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDisplayAverage",1713,G__G__TreeViewer_272_0_25, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCurrentEntry",1557,G__G__TreeViewer_272_0_26, 110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEntriesToProcess",1948,G__G__TreeViewer_272_0_27, 110, -1, G__defined_typename("Long64_t"), 0, 2, 1, 1, 8, 
"n - 'Long64_t' 0 - firstentry n - 'Long64_t' 0 - nentries", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNx",486,G__G__TreeViewer_272_0_28, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNy",487,G__G__TreeViewer_272_0_29, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSegmentDisplay",1737,G__G__TreeViewer_272_0_30, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GotoEntry",939,G__G__TreeViewer_272_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - e", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("GotoNext",824,G__G__TreeViewer_272_0_32, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("GotoPrevious",1270,G__G__TreeViewer_272_0_33, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("GotoFollowing",1354,G__G__TreeViewer_272_0_34, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("GotoPreceding",1322,G__G__TreeViewer_272_0_35, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("Paint",508,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - options", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetAverageLineStyle",1920,G__G__TreeViewer_272_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Style_t' 0 - sty", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAverageLineColor",1902,G__G__TreeViewer_272_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Color_t' 0 - col", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAverageLineWidth",1903,G__G__TreeViewer_272_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Width_t' 0 - wid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAverageFillColor",1901,G__G__TreeViewer_272_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Color_t' 0 - col", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAverageFillStyle",1919,G__G__TreeViewer_272_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Style_t' 0 - sty", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLineStyle",1221,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "s - 'Style_t' 0 - sty", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetLineColor",1203,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "s - 'Color_t' 0 - col", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetLineWidth",1204,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "s - 'Width_t' 0 - wid", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFillColor",1202,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "s - 'Color_t' 0 - col", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFillStyle",1220,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "s - 'Style_t' 0 - sty", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDisplayAverage",1725,G__G__TreeViewer_272_0_47, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - disp", "*TOGGLE*", (void*) NULL, 0);
   G__memfunc_setup("SetVariablesExpression",2293,G__G__TreeViewer_272_0_48, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - varexp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNdivRadial",1290,G__G__TreeViewer_272_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - div", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("SetNx",498,G__G__TreeViewer_272_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - nx", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("SetNy",499,G__G__TreeViewer_272_0_51, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - ny", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("SetSelectionExpression",2306,G__G__TreeViewer_272_0_52, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - selexp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSegmentDisplay",1749,G__G__TreeViewer_272_0_53, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - seg", "*TOGGLE*", (void*) NULL, 0);
   G__memfunc_setup("SetShowRange",1210,G__G__TreeViewer_272_0_54, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - showrange", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SuperposeTo",1161,G__G__TreeViewer_272_0_55, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TSpider' - 0 - sp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__TreeViewer_272_0_56, 85, G__get_linked_tagnum(&G__G__TreeViewerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSpider::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__TreeViewer_272_0_57, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSpider::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__TreeViewer_272_0_58, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSpider::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__TreeViewer_272_0_59, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSpider::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__TreeViewerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__TreeViewer_272_0_63, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__TreeViewer_272_0_64, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSpider::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__TreeViewer_272_0_65, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSpider::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__TreeViewer_272_0_66, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSpider::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__TreeViewer_272_0_67, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSpider::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSpider", 699, G__G__TreeViewer_272_0_68, (int) ('i'), G__get_linked_tagnum(&G__G__TreeViewerLN_TSpider), -1, 0, 1, 1, 1, 0, "u 'TSpider' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSpider", 825, G__G__TreeViewer_272_0_69, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__TreeViewer_272_0_70, (int) ('u'), G__get_linked_tagnum(&G__G__TreeViewerLN_TSpider), -1, 1, 1, 1, 1, 0, "u 'TSpider' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSpiderEditor(void) {
   /* TSpiderEditor */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TSpiderEditor));
   G__memfunc_setup("ConnectSignals2Slots",2018,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MakeBrowse",1008,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSpiderEditor",1314,G__G__TreeViewer_287_0_3, 105, G__get_linked_tagnum(&G__G__TreeViewerLN_TSpiderEditor), -1, 0, 5, 1, 1, 0, 
"U 'TGWindow' - 10 '0' p i - 'Int_t' 0 '140' width "
"i - 'Int_t' 0 '30' height h - 'UInt_t' 0 'kChildFrame' options "
"k - 'Pixel_t' 0 'GetDefaultFrameBackground()' back", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoAddVar",741,G__G__TreeViewer_287_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoDeleteVar",1071,G__G__TreeViewer_287_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoDisplayAverage",1604,G__G__TreeViewer_287_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - av", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoGotoEntry",1118,G__G__TreeViewer_287_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoGotoNext",1003,G__G__TreeViewer_287_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoGotoPrevious",1449,G__G__TreeViewer_287_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoGotoFollowing",1533,G__G__TreeViewer_287_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoGotoPreceding",1501,G__G__TreeViewer_287_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoSetNx",677,G__G__TreeViewer_287_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoSetNy",678,G__G__TreeViewer_287_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoSetPlotType",1312,G__G__TreeViewer_287_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetModel",797,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoAvLineStyle",1283,G__G__TreeViewer_287_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoAvLineWidth",1266,G__G__TreeViewer_287_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoAvLineColor",1265,G__G__TreeViewer_287_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'Pixel_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoAvFillColor",1264,G__G__TreeViewer_287_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'Pixel_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoAvFillPattern",1487,G__G__TreeViewer_287_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Style_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__TreeViewer_287_0_21, 85, G__get_linked_tagnum(&G__G__TreeViewerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSpiderEditor::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__TreeViewer_287_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSpiderEditor::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__TreeViewer_287_0_23, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSpiderEditor::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__TreeViewer_287_0_24, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSpiderEditor::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__TreeViewerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__TreeViewer_287_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__TreeViewer_287_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSpiderEditor::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__TreeViewer_287_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSpiderEditor::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__TreeViewer_287_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSpiderEditor::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__TreeViewer_287_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSpiderEditor::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TSpiderEditor", 1440, G__G__TreeViewer_287_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTParallelCoordSelect(void) {
   /* TParallelCoordSelect */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordSelect));
   G__memfunc_setup("TParallelCoordSelect",2008,G__G__TreeViewer_290_0_1, 105, G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordSelect), -1, 0, 0, 1, 1, 0, "", "Default constructor.", (void*) NULL, 0);
   G__memfunc_setup("TParallelCoordSelect",2008,G__G__TreeViewer_290_0_2, 105, G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordSelect), -1, 0, 1, 1, 1, 0, "C - - 10 - title", "Normal constructor.", (void*) NULL, 0);
   G__memfunc_setup("GetTitle",802,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetActivated",1217,G__G__TreeViewer_290_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - on", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetShowRanges",1325,G__G__TreeViewer_290_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTitle",814,G__G__TreeViewer_290_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__TreeViewer_290_0_7, 85, G__get_linked_tagnum(&G__G__TreeViewerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TParallelCoordSelect::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__TreeViewer_290_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TParallelCoordSelect::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__TreeViewer_290_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TParallelCoordSelect::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__TreeViewer_290_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TParallelCoordSelect::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__TreeViewerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__TreeViewer_290_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__TreeViewer_290_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TParallelCoordSelect::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__TreeViewer_290_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TParallelCoordSelect::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__TreeViewer_290_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TParallelCoordSelect::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__TreeViewer_290_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TParallelCoordSelect::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TParallelCoordSelect", 2134, G__G__TreeViewer_290_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTParallelCoordVar(void) {
   /* TParallelCoordVar */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordVar));
   G__memfunc_setup("TParallelCoordVar",1697,G__G__TreeViewer_291_0_1, 105, G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordVar), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TParallelCoordVar",1697,G__G__TreeViewer_291_0_2, 105, G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordVar), -1, 0, 4, 1, 1, 0, 
"D - 'Double_t' 0 - val C - - 10 - title "
"i - 'Int_t' 0 - id U 'TParallelCoord' - 0 - gram", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddRange",758,G__G__TreeViewer_291_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TParallelCoordRange' - 0 - range", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddRange",758,G__G__TreeViewer_291_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("DeleteVariable",1401,G__G__TreeViewer_291_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("DistancetoPrimitive",1991,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Draw",398,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Eval",392,G__G__TreeViewer_291_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"n - 'Long64_t' 0 - evtidx U 'TParallelCoordSelect' - 0 - select", "Check an entry is within its ranges owned by a given TParallelSelect.", (void*) NULL, 0);
   G__memfunc_setup("ExecuteEvent",1237,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - entry i - 'Int_t' 0 - px "
"i - 'Int_t' 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBarHisto",1084,G__G__TreeViewer_291_0_10, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBoxPlot",1000,G__G__TreeViewer_291_0_11, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHistogram",1230,G__G__TreeViewer_291_0_12, 85, G__get_linked_tagnum(&G__G__TreeViewerLN_TH1F), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetId",461,G__G__TreeViewer_291_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLogScale",1066,G__G__TreeViewer_291_0_14, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHistBinning",1405,G__G__TreeViewer_291_0_15, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCurrentMin",1319,G__G__TreeViewer_291_0_16, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCurrentMax",1321,G__G__TreeViewer_291_0_17, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCurrentAverage",1726,G__G__TreeViewer_291_0_18, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEntryXY",995,G__G__TreeViewer_291_0_19, 121, -1, -1, 0, 3, 1, 1, 0, 
"n - 'Long64_t' 0 - n d - 'Double_t' 1 - x "
"d - 'Double_t' 1 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEntryWeight",1434,G__G__TreeViewer_291_0_20, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - evtidx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHistHeight",1297,G__G__TreeViewer_291_0_21, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHistLineWidth",1600,G__G__TreeViewer_291_0_22, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMinMaxMean",1259,G__G__TreeViewer_291_0_23, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQuantiles",1238,G__G__TreeViewer_291_0_24, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetX",376,G__G__TreeViewer_291_0_25, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetY",377,G__G__TreeViewer_291_0_26, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNbins",794,G__G__TreeViewer_291_0_27, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNentries",1128,G__G__TreeViewer_291_0_28, 110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetObjectInfo",1283,(G__InterfaceMethod) NULL,67, -1, -1, 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetParallel",1101,G__G__TreeViewer_291_0_30, 85, G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoord), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRanges",896,G__G__TreeViewer_291_0_31, 85, G__get_linked_tagnum(&G__G__TreeViewerLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetValues",912,G__G__TreeViewer_291_0_32, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetValuefromXY",1410,G__G__TreeViewer_291_0_33, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVert",705,G__G__TreeViewer_291_0_34, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", "Tells if the axis is vertical or not.", (void*) NULL, 0);
   G__memfunc_setup("GetXYfromValue",1410,G__G__TreeViewer_291_0_35, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - value d - 'Double_t' 1 - x "
"d - 'Double_t' 1 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,G__G__TreeViewer_291_0_36, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Paint",508,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PaintBoxPlot",1220,G__G__TreeViewer_291_0_38, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PaintHistogram",1450,G__G__TreeViewer_291_0_39, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PaintLabels",1103,G__G__TreeViewer_291_0_40, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("SavePrimitive",1352,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out C - 'Option_t' 10 - options", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetBoxPlot",1012,G__G__TreeViewer_291_0_43, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - box", "*TOGGLE* *GETTER=GetBoxPlot", (void*) NULL, 0);
   G__memfunc_setup("SetBarHisto",1096,G__G__TreeViewer_291_0_44, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - h", "*TOGGLE* *GETTER=GetBarHisto", (void*) NULL, 0);
   G__memfunc_setup("SetHistogramLineWidth",2146,G__G__TreeViewer_291_0_45, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '2' lw", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("SetHistogramHeight",1843,G__G__TreeViewer_291_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 '0' h", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("SetHistogramBinning",1951,G__G__TreeViewer_291_0_47, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '100' n", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("SetCurrentLimits",1665,G__G__TreeViewer_291_0_48, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - min d - 'Double_t' 0 - max", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("SetCurrentMin",1331,G__G__TreeViewer_291_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - min", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCurrentMax",1333,G__G__TreeViewer_291_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInitMin",996,G__G__TreeViewer_291_0_51, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - min", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInitMax",998,G__G__TreeViewer_291_0_52, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLiveRangesUpdate",1919,G__G__TreeViewer_291_0_53, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - on", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLogScale",1078,G__G__TreeViewer_291_0_54, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - log", "*TOGGLE* *GETTER=GetLogScale", (void*) NULL, 0);
   G__memfunc_setup("SetTitle",814,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - -", "To hide TNamed::SetTitle.", (void*) NULL, 1);
   G__memfunc_setup("SetValues",924,G__G__TreeViewer_291_0_56, 121, -1, -1, 0, 2, 1, 1, 0, 
"n - 'Long64_t' 0 - length D - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetX",388,G__G__TreeViewer_291_0_57, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - x g - 'Bool_t' 0 - gl", "Set a new x position in case of a vertical display.", (void*) NULL, 0);
   G__memfunc_setup("SetY",389,G__G__TreeViewer_291_0_58, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - y g - 'Bool_t' 0 - gl", "Set a new y position in case of a horizontal display.", (void*) NULL, 0);
   G__memfunc_setup("Unzoom",648,G__G__TreeViewer_291_0_59, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU* Reset fMin and fMax to their original value.", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__TreeViewer_291_0_60, 85, G__get_linked_tagnum(&G__G__TreeViewerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TParallelCoordVar::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__TreeViewer_291_0_61, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TParallelCoordVar::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__TreeViewer_291_0_62, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TParallelCoordVar::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__TreeViewer_291_0_63, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TParallelCoordVar::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__TreeViewerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__TreeViewer_291_0_67, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__TreeViewer_291_0_68, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TParallelCoordVar::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__TreeViewer_291_0_69, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TParallelCoordVar::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__TreeViewer_291_0_70, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TParallelCoordVar::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__TreeViewer_291_0_71, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TParallelCoordVar::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TParallelCoordVar", 1697, G__G__TreeViewer_291_0_72, (int) ('i'), G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordVar), -1, 0, 1, 1, 1, 0, "u 'TParallelCoordVar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TParallelCoordVar", 1823, G__G__TreeViewer_291_0_73, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__TreeViewer_291_0_74, (int) ('u'), G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordVar), -1, 1, 1, 1, 1, 0, "u 'TParallelCoordVar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTParallelCoordRange(void) {
   /* TParallelCoordRange */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordRange));
   G__memfunc_setup("PaintSlider",1119,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"d - 'Double_t' 0 - value g - 'Bool_t' 0 'kFALSE' fill", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBindingLinePoints",2016,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__TreeViewerLN_TPoint), -1, 0, 2, 1, 4, 0, 
"i - 'Int_t' 0 - pos i - 'Int_t' 0 - mindragged", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSliderPoints",1536,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__TreeViewerLN_TPoint), -1, 0, 1, 1, 4, 0, "d - 'Double_t' 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSliderPoints",1536,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__TreeViewerLN_TPoint), -1, 0, 1, 1, 4, 0, "i - 'Int_t' 0 - pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TParallelCoordRange",1893,G__G__TreeViewer_292_0_5, 105, G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordRange), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TParallelCoordRange",1893,G__G__TreeViewer_292_0_6, 105, G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordRange), -1, 0, 4, 1, 1, 0, 
"U 'TParallelCoordVar' - 0 - var d - 'Double_t' 0 '0' min "
"d - 'Double_t' 0 '0' max U 'TParallelCoordSelect' - 0 'NULL' sel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BringOnTop",994,G__G__TreeViewer_292_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("Delete",595,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' options", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("DistancetoPrimitive",1991,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Draw",398,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' options", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ExecuteEvent",1237,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - entry i - 'Int_t' 0 - px "
"i - 'Int_t' 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMin",580,G__G__TreeViewer_292_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMax",582,G__G__TreeViewer_292_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetVar",585,G__G__TreeViewer_292_0_14, 85, G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordVar), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSelection",1222,G__G__TreeViewer_292_0_15, 85, G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordSelect), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsIn",371,G__G__TreeViewer_292_0_16, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - evtval", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Paint",508,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - options", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 - options", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("SendToBack",958,G__G__TreeViewer_292_0_19, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("SetLineColor",1203,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "s - 'Color_t' 0 - col", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetLineWidth",1204,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "s - 'Width_t' 0 - wid", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__TreeViewer_292_0_22, 85, G__get_linked_tagnum(&G__G__TreeViewerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TParallelCoordRange::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__TreeViewer_292_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TParallelCoordRange::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__TreeViewer_292_0_24, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TParallelCoordRange::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__TreeViewer_292_0_25, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TParallelCoordRange::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__TreeViewerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__TreeViewer_292_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__TreeViewer_292_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TParallelCoordRange::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__TreeViewer_292_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TParallelCoordRange::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__TreeViewer_292_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TParallelCoordRange::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__TreeViewer_292_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TParallelCoordRange::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TParallelCoordRange", 1893, G__G__TreeViewer_292_0_34, (int) ('i'), G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordRange), -1, 0, 1, 1, 1, 0, "u 'TParallelCoordRange' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TParallelCoordRange", 2019, G__G__TreeViewer_292_0_35, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTParallelCoord(void) {
   /* TParallelCoord */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoord));
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PaintEntries",1238,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'TParallelCoordSelect' - 0 'NULL' sel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAxesPosition",1554,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TParallelCoord",1400,G__G__TreeViewer_294_0_4, 105, G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoord), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TParallelCoord",1400,G__G__TreeViewer_294_0_5, 105, G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoord), -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - nentries", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TParallelCoord",1400,G__G__TreeViewer_294_0_6, 105, G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoord), -1, 0, 2, 1, 1, 0, 
"U 'TTree' - 0 - tree n - 'Long64_t' 0 - nentries", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddVariable",1071,G__G__TreeViewer_294_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"D - 'Double_t' 0 - val C - - 10 '\"\"' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddVariable",1071,G__G__TreeViewer_294_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - varexp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddSelection",1199,G__G__TreeViewer_294_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ApplySelectionToTree",2047,G__G__TreeViewer_294_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("BuildParallelCoord",1812,G__G__TreeViewer_294_0_11, 121, -1, -1, 0, 2, 3, 1, 0, 
"U 'TSelectorDraw' - 0 - selector g - 'Bool_t' 0 - candle", (char*)NULL, (void*) G__func2void( (void (*)(TSelectorDraw*, Bool_t))(&TParallelCoord::BuildParallelCoord) ), 0);
   G__memfunc_setup("CleanUpSelections",1729,G__G__TreeViewer_294_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TParallelCoordRange' - 0 - range", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RemoveVariable",1428,G__G__TreeViewer_294_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TParallelCoordVar' - 0 - var", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RemoveVariable",1428,G__G__TreeViewer_294_0_14, 85, G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordVar), -1, 0, 1, 1, 1, 0, "C - - 10 - var", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteSelection",1529,G__G__TreeViewer_294_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TParallelCoordSelect' - 0 - sel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DistancetoPrimitive",1991,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Draw",398,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' options", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ExecuteEvent",1237,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - entry i - 'Int_t' 0 - px "
"i - 'Int_t' 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCandleChart",1369,G__G__TreeViewer_294_0_19, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCurrentFirst",1547,G__G__TreeViewer_294_0_20, 110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCurrentN",1105,G__G__TreeViewer_294_0_21, 110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCurrentSelection",1961,G__G__TreeViewer_294_0_22, 85, G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordSelect), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCurveDisplay",1531,G__G__TreeViewer_294_0_23, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDotsSpacing",1407,G__G__TreeViewer_294_0_24, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEntryList",1230,G__G__TreeViewer_294_0_25, 85, G__get_linked_tagnum(&G__G__TreeViewerLN_TEntryList), -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' sel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGlobalMin",1173,G__G__TreeViewer_294_0_26, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGlobalMax",1175,G__G__TreeViewer_294_0_27, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGlobalScale",1369,G__G__TreeViewer_294_0_28, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGlobalLogScale",1659,G__G__TreeViewer_294_0_29, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLineColor",1191,G__G__TreeViewer_294_0_30, 115, -1, G__defined_typename("Color_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLineWidth",1192,G__G__TreeViewer_294_0_31, 115, -1, G__defined_typename("Width_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNbins",794,G__G__TreeViewer_294_0_32, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNvar",695,G__G__TreeViewer_294_0_33, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNentries",1128,G__G__TreeViewer_294_0_34, 110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSelectList",1308,G__G__TreeViewer_294_0_35, 85, G__get_linked_tagnum(&G__G__TreeViewerLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSelection",1222,G__G__TreeViewer_294_0_36, 85, G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordSelect), -1, 0, 1, 1, 1, 0, "C - - 10 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTree",688,G__G__TreeViewer_294_0_37, 85, G__get_linked_tagnum(&G__G__TreeViewerLN_TTree), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVariable",1094,G__G__TreeViewer_294_0_38, 68, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "C - - 10 - var", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVariable",1094,G__G__TreeViewer_294_0_39, 68, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVarList",997,G__G__TreeViewer_294_0_40, 85, G__get_linked_tagnum(&G__G__TreeViewerLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVertDisplay",1431,G__G__TreeViewer_294_0_41, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWeightCut",1204,G__G__TreeViewer_294_0_42, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Paint",508,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' options", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ResetTree",915,G__G__TreeViewer_294_0_44, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveEntryLists",1456,G__G__TreeViewer_294_0_45, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 '\"\"' filename g - 'Bool_t' 0 'kFALSE' overwrite", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("SavePrimitive",1352,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out C - 'Option_t' 10 - options", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SaveTree",799,G__G__TreeViewer_294_0_47, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 '\"\"' filename g - 'Bool_t' 0 'kFALSE' overwrite", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("SetAxisHistogramBinning",2356,G__G__TreeViewer_294_0_48, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '100' n", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("SetAxisHistogramHeight",2248,G__G__TreeViewer_294_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 '0.5' h", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("SetAxisHistogramLineWidth",2551,G__G__TreeViewer_294_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '2' lw", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("SetCandleChart",1381,G__G__TreeViewer_294_0_51, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - can", "*TOGGLE* *GETTER=GetCandleChart", (void*) NULL, 0);
   G__memfunc_setup("SetCurveDisplay",1543,G__G__TreeViewer_294_0_52, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 '1' curve", "*TOGGLE* *GETTER=GetCurveDisplay", (void*) NULL, 1);
   G__memfunc_setup("SetCurrentEntries",1769,G__G__TreeViewer_294_0_53, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TEntryList' - 0 - entries", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCurrentFirst",1559,G__G__TreeViewer_294_0_54, 121, -1, -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCurrentN",1117,G__G__TreeViewer_294_0_55, 121, -1, -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCurrentSelection",1973,G__G__TreeViewer_294_0_56, 85, G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordSelect), -1, 0, 1, 1, 1, 0, "C - - 10 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCurrentSelection",1973,G__G__TreeViewer_294_0_57, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TParallelCoordSelect' - 0 - sel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDotsSpacing",1419,G__G__TreeViewer_294_0_58, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '0' s", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("SetEntryList",1242,G__G__TreeViewer_294_0_59, 121, -1, -1, 0, 2, 3, 1, 0, 
"U 'TParallelCoord' - 0 - para U 'TEntryList' - 0 - enlist", (char*)NULL, (void*) G__func2void( (void (*)(TParallelCoord*, TEntryList*))(&TParallelCoord::SetEntryList) ), 0);
   G__memfunc_setup("SetGlobalScale",1381,G__G__TreeViewer_294_0_60, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - gl", "*TOGGLE* *GETTER=GetGlobalScale", (void*) NULL, 0);
   G__memfunc_setup("SetGlobalLogScale",1671,G__G__TreeViewer_294_0_61, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - -", "*TOGGLE* *GETTER=GetGlobalLogScale", (void*) NULL, 0);
   G__memfunc_setup("SetGlobalMin",1185,G__G__TreeViewer_294_0_62, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - min", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGlobalMax",1187,G__G__TreeViewer_294_0_63, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInitEntries",1434,G__G__TreeViewer_294_0_64, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TEntryList' - 0 - entries", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLineColor",1203,G__G__TreeViewer_294_0_65, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Color_t' 0 - col", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLineWidth",1204,G__G__TreeViewer_294_0_66, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Width_t' 0 - wid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLiveRangesUpdate",1919,G__G__TreeViewer_294_0_67, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNentries",1140,G__G__TreeViewer_294_0_68, 121, -1, -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTree",700,G__G__TreeViewer_294_0_69, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVertDisplay",1443,G__G__TreeViewer_294_0_70, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' vert", "*TOGGLE* *GETTER=GetVertDisplay", (void*) NULL, 0);
   G__memfunc_setup("SetWeightCut",1216,G__G__TreeViewer_294_0_71, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '0' w", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("UnzoomAll",929,G__G__TreeViewer_294_0_72, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__TreeViewer_294_0_73, 85, G__get_linked_tagnum(&G__G__TreeViewerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TParallelCoord::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__TreeViewer_294_0_74, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TParallelCoord::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__TreeViewer_294_0_75, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TParallelCoord::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__TreeViewer_294_0_76, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TParallelCoord::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__TreeViewerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__TreeViewer_294_0_80, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__TreeViewer_294_0_81, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TParallelCoord::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__TreeViewer_294_0_82, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TParallelCoord::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__TreeViewer_294_0_83, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TParallelCoord::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__TreeViewer_294_0_84, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TParallelCoord::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TParallelCoord", 1400, G__G__TreeViewer_294_0_85, (int) ('i'), G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoord), -1, 0, 1, 1, 1, 0, "u 'TParallelCoord' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TParallelCoord", 1526, G__G__TreeViewer_294_0_86, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__TreeViewer_294_0_87, (int) ('u'), G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoord), -1, 1, 1, 1, 1, 0, "u 'TParallelCoord' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTParallelCoordEditor(void) {
   /* TParallelCoordEditor */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordEditor));
   G__memfunc_setup("CleanUpSelections",1729,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CleanUpVariables",1601,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConnectSignals2Slots",2018,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MakeVariablesTab",1582,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TParallelCoordEditor",2015,G__G__TreeViewer_302_0_5, 105, G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordEditor), -1, 0, 5, 1, 1, 0, 
"U 'TGWindow' - 10 '0' p i - 'Int_t' 0 '140' width "
"i - 'Int_t' 0 '30' height h - 'UInt_t' 0 'kChildFrame' options "
"k - 'Pixel_t' 0 'GetDefaultFrameBackground()' back", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoActivateSelection",1930,G__G__TreeViewer_302_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoAddSelection",1378,G__G__TreeViewer_302_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoAddVariable",1250,G__G__TreeViewer_302_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoApplySelect",1305,G__G__TreeViewer_302_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoDelayDrawing",1390,G__G__TreeViewer_302_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoDeleteSelection",1708,G__G__TreeViewer_302_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoDeleteVar",1071,G__G__TreeViewer_302_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoDotsSpacing",1298,G__G__TreeViewer_302_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoDotsSpacingField",1782,G__G__TreeViewer_302_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoFirstEntry",1229,G__G__TreeViewer_302_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoGlobalLineColor",1675,G__G__TreeViewer_302_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'Pixel_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoGlobalLineWidth",1676,G__G__TreeViewer_302_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoHideAllRanges",1446,G__G__TreeViewer_302_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoHistShowBoxes",1517,G__G__TreeViewer_302_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoHistWidth",1099,G__G__TreeViewer_302_0_20, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoHistBinning",1296,G__G__TreeViewer_302_0_21, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoHistColorSelect",1706,G__G__TreeViewer_302_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'Pixel_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoHistPatternSelect",1929,G__G__TreeViewer_302_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Style_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoEntriesToDraw",1502,G__G__TreeViewer_302_0_24, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoLineType",989,G__G__TreeViewer_302_0_25, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoLiveDotsSpacing",1698,G__G__TreeViewer_302_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - a", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoLiveEntriesToDraw",1902,G__G__TreeViewer_302_0_27, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoLiveWeightCut",1495,G__G__TreeViewer_302_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoNentries",1019,G__G__TreeViewer_302_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoPaintEntries",1417,G__G__TreeViewer_302_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoSelectionSelect",1721,G__G__TreeViewer_302_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - title", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoSelectLineColor",1690,G__G__TreeViewer_302_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'Pixel_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoSelectLineWidth",1691,G__G__TreeViewer_302_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoShowRanges",1204,G__G__TreeViewer_302_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - s", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoUnApply",892,G__G__TreeViewer_302_0_35, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoVariableSelect",1593,G__G__TreeViewer_302_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - var", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoWeightCut",1095,G__G__TreeViewer_302_0_37, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetModel",797,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__TreeViewer_302_0_39, 85, G__get_linked_tagnum(&G__G__TreeViewerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TParallelCoordEditor::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__TreeViewer_302_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TParallelCoordEditor::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__TreeViewer_302_0_41, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TParallelCoordEditor::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__TreeViewer_302_0_42, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TParallelCoordEditor::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__TreeViewerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__TreeViewer_302_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__TreeViewer_302_0_47, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TParallelCoordEditor::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__TreeViewer_302_0_48, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TParallelCoordEditor::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__TreeViewer_302_0_49, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TParallelCoordEditor::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__TreeViewer_302_0_50, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TParallelCoordEditor::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TParallelCoordEditor", 2141, G__G__TreeViewer_302_0_51, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGTreeTable(void) {
   /* TGTreeTable */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TGTreeTable));
   G__memfunc_setup("TGTreeTable",1043,G__G__TreeViewer_313_0_1, 105, G__get_linked_tagnum(&G__G__TreeViewerLN_TGTreeTable), -1, 0, 8, 1, 1, 0, 
"U 'TGWindow' - 0 '0' p i - 'Int_t' 0 '-1' id "
"U 'TTree' - 0 '0' tree C - - 10 '0' expression "
"C - - 10 '0' selection C - - 10 '0' option "
"h - 'UInt_t' 0 '50' nrows h - 'UInt_t' 0 '10' ncolumns", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__TreeViewer_313_0_2, 85, G__get_linked_tagnum(&G__G__TreeViewerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TGTreeTable::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__TreeViewer_313_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGTreeTable::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__TreeViewer_313_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TGTreeTable::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__TreeViewer_313_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TGTreeTable::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__TreeViewerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__TreeViewer_313_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__TreeViewer_313_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGTreeTable::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__TreeViewer_313_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TGTreeTable::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__TreeViewer_313_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGTreeTable::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__TreeViewer_313_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TGTreeTable::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TGTreeTable", 1169, G__G__TreeViewer_313_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__TreeViewer() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__TreeViewer() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__TreeViewer() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__TreeViewerLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR = { "basic_ostream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR = { "basic_ofstream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_va_list = { "va_list" , 115 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TTimer = { "TTimer" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_Event_t = { "Event_t" , 115 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TGObject = { "TGObject" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TQObject = { "TQObject" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TGWindow = { "TGWindow" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TGPicture = { "TGPicture" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TAttLine = { "TAttLine" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TAttFill = { "TAttFill" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TPoint = { "TPoint" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TGFrame = { "TGFrame" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TGCompositeFrame = { "TGCompositeFrame" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TGLayoutHints = { "TGLayoutHints" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TGString = { "TGString" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TCollection = { "TCollection" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TSeqCollection = { "TSeqCollection" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TGTextButton = { "TGTextButton" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TGVerticalFrame = { "TGVerticalFrame" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TGHorizontalFrame = { "TGHorizontalFrame" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TGMainFrame = { "TGMainFrame" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TGTransientFrame = { "TGTransientFrame" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TTreeViewer = { "TTreeViewer" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TTVLVContainer = { "TTVLVContainer" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TTVLVEntry = { "TTVLVEntry" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TTVSession = { "TTVSession" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TGSelectBox = { "TGSelectBox" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TBranch = { "TBranch" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TContextMenu = { "TContextMenu" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TGMenuBar = { "TGMenuBar" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TGPopupMenu = { "TGPopupMenu" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TGToolBar = { "TGToolBar" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TGLabel = { "TGLabel" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TGCheckButton = { "TGCheckButton" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TGComboBox = { "TGComboBox" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TGTextEntry = { "TGTextEntry" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TGDoubleVSlider = { "TGDoubleVSlider" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TGPictureButton = { "TGPictureButton" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TGStatusBar = { "TGStatusBar" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TGCanvas = { "TGCanvas" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TGListTree = { "TGListTree" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TGListTreeItem = { "TGListTreeItem" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TGListView = { "TGListView" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TGHProgressBar = { "TGHProgressBar" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TTreeViewercLcLEListItemType = { "TTreeViewer::EListItemType" , 101 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TTVRecord = { "TTVRecord" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TGContainer = { "TGContainer" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TGWidget = { "TGWidget" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_EListViewMode = { "EListViewMode" , 101 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TGLVContainer = { "TGLVContainer" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TGLVEntry = { "TGLVEntry" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TGToolTip = { "TGToolTip" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TGItemContext = { "TGItemContext" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TGraphPolargram = { "TGraphPolargram" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TPolyLine = { "TPolyLine" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TTreeFormula = { "TTreeFormula" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TTreeFormulaManager = { "TTreeFormulaManager" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TSelectorDraw = { "TSelectorDraw" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TCanvas = { "TCanvas" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TArc = { "TArc" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TSpider = { "TSpider" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TGedFrame = { "TGedFrame" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TGNumberEntryField = { "TGNumberEntryField" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TGButtonGroup = { "TGButtonGroup" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TGRadioButton = { "TGRadioButton" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TGLineStyleComboBox = { "TGLineStyleComboBox" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TGLineWidthComboBox = { "TGLineWidthComboBox" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TGColorSelect = { "TGColorSelect" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TGedPatternSelect = { "TGedPatternSelect" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TSpiderEditor = { "TSpiderEditor" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TEntryList = { "TEntryList" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TParallelCoordSelect = { "TParallelCoordSelect" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TParallelCoordVar = { "TParallelCoordVar" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TParallelCoordRange = { "TParallelCoordRange" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TGaxis = { "TGaxis" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TParallelCoord = { "TParallelCoord" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TParallelCoordcLcLdA = { "TParallelCoord::$" , 101 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TH1F = { "TH1F" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TParallelCoordVarcLcLdA = { "TParallelCoordVar::$" , 101 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TParallelCoordRangecLcLdA = { "TParallelCoordRange::$" , 101 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TParallelCoordSelectcLcLdA = { "TParallelCoordSelect::$" , 101 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TGHSlider = { "TGHSlider" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TGDoubleHSlider = { "TGDoubleHSlider" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TParallelCoordEditor = { "TParallelCoordEditor" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TGTable = { "TGTable" , 99 , -1 };
G__linked_taginfo G__G__TreeViewerLN_TGTreeTable = { "TGTreeTable" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__TreeViewer() {
  G__G__TreeViewerLN_TClass.tagnum = -1 ;
  G__G__TreeViewerLN_TBuffer.tagnum = -1 ;
  G__G__TreeViewerLN_TMemberInspector.tagnum = -1 ;
  G__G__TreeViewerLN_TObject.tagnum = -1 ;
  G__G__TreeViewerLN_TNamed.tagnum = -1 ;
  G__G__TreeViewerLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__G__TreeViewerLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__G__TreeViewerLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__TreeViewerLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__TreeViewerLN_va_list.tagnum = -1 ;
  G__G__TreeViewerLN_TList.tagnum = -1 ;
  G__G__TreeViewerLN_TTimer.tagnum = -1 ;
  G__G__TreeViewerLN_TString.tagnum = -1 ;
  G__G__TreeViewerLN_TClonesArray.tagnum = -1 ;
  G__G__TreeViewerLN_Event_t.tagnum = -1 ;
  G__G__TreeViewerLN_TGObject.tagnum = -1 ;
  G__G__TreeViewerLN_TQObject.tagnum = -1 ;
  G__G__TreeViewerLN_TGWindow.tagnum = -1 ;
  G__G__TreeViewerLN_TGPicture.tagnum = -1 ;
  G__G__TreeViewerLN_TAttLine.tagnum = -1 ;
  G__G__TreeViewerLN_TAttFill.tagnum = -1 ;
  G__G__TreeViewerLN_TPoint.tagnum = -1 ;
  G__G__TreeViewerLN_TGFrame.tagnum = -1 ;
  G__G__TreeViewerLN_TGCompositeFrame.tagnum = -1 ;
  G__G__TreeViewerLN_TGLayoutHints.tagnum = -1 ;
  G__G__TreeViewerLN_TGString.tagnum = -1 ;
  G__G__TreeViewerLN_TCollection.tagnum = -1 ;
  G__G__TreeViewerLN_TSeqCollection.tagnum = -1 ;
  G__G__TreeViewerLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__G__TreeViewerLN_TGTextButton.tagnum = -1 ;
  G__G__TreeViewerLN_TGVerticalFrame.tagnum = -1 ;
  G__G__TreeViewerLN_TGHorizontalFrame.tagnum = -1 ;
  G__G__TreeViewerLN_TGMainFrame.tagnum = -1 ;
  G__G__TreeViewerLN_TGTransientFrame.tagnum = -1 ;
  G__G__TreeViewerLN_TTreeViewer.tagnum = -1 ;
  G__G__TreeViewerLN_TTVLVContainer.tagnum = -1 ;
  G__G__TreeViewerLN_TTVLVEntry.tagnum = -1 ;
  G__G__TreeViewerLN_TTVSession.tagnum = -1 ;
  G__G__TreeViewerLN_TGSelectBox.tagnum = -1 ;
  G__G__TreeViewerLN_TTree.tagnum = -1 ;
  G__G__TreeViewerLN_TBranch.tagnum = -1 ;
  G__G__TreeViewerLN_TContextMenu.tagnum = -1 ;
  G__G__TreeViewerLN_TGMenuBar.tagnum = -1 ;
  G__G__TreeViewerLN_TGPopupMenu.tagnum = -1 ;
  G__G__TreeViewerLN_TGToolBar.tagnum = -1 ;
  G__G__TreeViewerLN_TGLabel.tagnum = -1 ;
  G__G__TreeViewerLN_TGCheckButton.tagnum = -1 ;
  G__G__TreeViewerLN_TGComboBox.tagnum = -1 ;
  G__G__TreeViewerLN_TGTextEntry.tagnum = -1 ;
  G__G__TreeViewerLN_TGDoubleVSlider.tagnum = -1 ;
  G__G__TreeViewerLN_TGPictureButton.tagnum = -1 ;
  G__G__TreeViewerLN_TGStatusBar.tagnum = -1 ;
  G__G__TreeViewerLN_TGCanvas.tagnum = -1 ;
  G__G__TreeViewerLN_TGListTree.tagnum = -1 ;
  G__G__TreeViewerLN_TGListTreeItem.tagnum = -1 ;
  G__G__TreeViewerLN_TGListView.tagnum = -1 ;
  G__G__TreeViewerLN_TGHProgressBar.tagnum = -1 ;
  G__G__TreeViewerLN_TTreeViewercLcLEListItemType.tagnum = -1 ;
  G__G__TreeViewerLN_TTVRecord.tagnum = -1 ;
  G__G__TreeViewerLN_TGContainer.tagnum = -1 ;
  G__G__TreeViewerLN_TGWidget.tagnum = -1 ;
  G__G__TreeViewerLN_EListViewMode.tagnum = -1 ;
  G__G__TreeViewerLN_TGLVContainer.tagnum = -1 ;
  G__G__TreeViewerLN_TGLVEntry.tagnum = -1 ;
  G__G__TreeViewerLN_TGToolTip.tagnum = -1 ;
  G__G__TreeViewerLN_TGItemContext.tagnum = -1 ;
  G__G__TreeViewerLN_TGraphPolargram.tagnum = -1 ;
  G__G__TreeViewerLN_TPolyLine.tagnum = -1 ;
  G__G__TreeViewerLN_TTreeFormula.tagnum = -1 ;
  G__G__TreeViewerLN_TTreeFormulaManager.tagnum = -1 ;
  G__G__TreeViewerLN_TSelectorDraw.tagnum = -1 ;
  G__G__TreeViewerLN_TCanvas.tagnum = -1 ;
  G__G__TreeViewerLN_TArc.tagnum = -1 ;
  G__G__TreeViewerLN_TSpider.tagnum = -1 ;
  G__G__TreeViewerLN_TGedFrame.tagnum = -1 ;
  G__G__TreeViewerLN_TGNumberEntryField.tagnum = -1 ;
  G__G__TreeViewerLN_TGButtonGroup.tagnum = -1 ;
  G__G__TreeViewerLN_TGRadioButton.tagnum = -1 ;
  G__G__TreeViewerLN_TGLineStyleComboBox.tagnum = -1 ;
  G__G__TreeViewerLN_TGLineWidthComboBox.tagnum = -1 ;
  G__G__TreeViewerLN_TGColorSelect.tagnum = -1 ;
  G__G__TreeViewerLN_TGedPatternSelect.tagnum = -1 ;
  G__G__TreeViewerLN_TSpiderEditor.tagnum = -1 ;
  G__G__TreeViewerLN_TEntryList.tagnum = -1 ;
  G__G__TreeViewerLN_TParallelCoordSelect.tagnum = -1 ;
  G__G__TreeViewerLN_TParallelCoordVar.tagnum = -1 ;
  G__G__TreeViewerLN_TParallelCoordRange.tagnum = -1 ;
  G__G__TreeViewerLN_TGaxis.tagnum = -1 ;
  G__G__TreeViewerLN_TParallelCoord.tagnum = -1 ;
  G__G__TreeViewerLN_TParallelCoordcLcLdA.tagnum = -1 ;
  G__G__TreeViewerLN_TH1F.tagnum = -1 ;
  G__G__TreeViewerLN_TParallelCoordVarcLcLdA.tagnum = -1 ;
  G__G__TreeViewerLN_TParallelCoordRangecLcLdA.tagnum = -1 ;
  G__G__TreeViewerLN_TParallelCoordSelectcLcLdA.tagnum = -1 ;
  G__G__TreeViewerLN_TGHSlider.tagnum = -1 ;
  G__G__TreeViewerLN_TGDoubleHSlider.tagnum = -1 ;
  G__G__TreeViewerLN_TParallelCoordEditor.tagnum = -1 ;
  G__G__TreeViewerLN_TGTable.tagnum = -1 ;
  G__G__TreeViewerLN_TGTreeTable.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__TreeViewer() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TNamed);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_va_list);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TList);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TTimer);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TString);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_Event_t);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TGObject);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TQObject);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TGWindow);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TGPicture);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TAttLine);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TAttFill);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TPoint);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TGFrame);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TGCompositeFrame);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TGLayoutHints);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TGString);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TCollection);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TSeqCollection);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TGTextButton);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TGVerticalFrame);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TGHorizontalFrame);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TGMainFrame);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TGTransientFrame);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TTreeViewer),sizeof(TTreeViewer),-1,324864,"A GUI oriented tree viewer",G__setup_memvarTTreeViewer,G__setup_memfuncTTreeViewer);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TTVLVContainer),sizeof(TTVLVContainer),-1,324608,"A dragging-capable LVContainer",G__setup_memvarTTVLVContainer,G__setup_memfuncTTVLVContainer);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TTVLVEntry),sizeof(TTVLVEntry),-1,324608,"Item that goes into the tree list view widget",G__setup_memvarTTVLVEntry,G__setup_memfuncTTVLVEntry);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TTVSession),sizeof(TTVSession),-1,324608,"A tree viewer session",G__setup_memvarTTVSession,G__setup_memfuncTTVSession);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TGSelectBox),sizeof(TGSelectBox),-1,324608,"TreeView dialog widget",G__setup_memvarTGSelectBox,G__setup_memfuncTGSelectBox);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TTree);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TBranch);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TContextMenu);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TGMenuBar);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TGPopupMenu);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TGToolBar);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TGLabel);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TGCheckButton);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TGComboBox);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TGTextEntry);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TGDoubleVSlider);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TGPictureButton);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TGStatusBar);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TGCanvas);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TGListTree);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TGListTreeItem);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TGListView);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TGHProgressBar);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TTreeViewercLcLEListItemType);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TTVRecord),sizeof(TTVRecord),-1,292096,"A draw record for TTreeViewer",G__setup_memvarTTVRecord,G__setup_memfuncTTVRecord);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TGContainer);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TGWidget);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_EListViewMode);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TGLVContainer);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TGLVEntry);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TGToolTip);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TGItemContext),sizeof(TGItemContext),-1,292096,"Context menu for TTVLVEntry",G__setup_memvarTGItemContext,G__setup_memfuncTGItemContext);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TGraphPolargram);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TPolyLine);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TTreeFormula);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TTreeFormulaManager);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TSelectorDraw);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TCanvas);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TArc);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TSpider),sizeof(TSpider),-1,324864,"Helper class to draw spider",G__setup_memvarTSpider,G__setup_memfuncTSpider);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TGedFrame);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TGNumberEntryField);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TGButtonGroup);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TGRadioButton);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TGLineStyleComboBox);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TGLineWidthComboBox);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TGColorSelect);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TGedPatternSelect);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TSpiderEditor),sizeof(TSpiderEditor),-1,62720,"GUI for editing the spider plot attributes.",G__setup_memvarTSpiderEditor,G__setup_memfuncTSpiderEditor);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TEntryList);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordSelect),sizeof(TParallelCoordSelect),-1,324864,"A TParallelCoordSelect is a specialised TList to hold TParallelCoordRanges used by TParallelCoord.",G__setup_memvarTParallelCoordSelect,G__setup_memfuncTParallelCoordSelect);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordVar),sizeof(TParallelCoordVar),-1,324864,"A Variable of a parallel coordinates plot.",G__setup_memvarTParallelCoordVar,G__setup_memfuncTParallelCoordVar);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordRange),sizeof(TParallelCoordRange),-1,324864,"A TParallelCoordRange is a range used for parallel coordinates plots.",G__setup_memvarTParallelCoordRange,G__setup_memfuncTParallelCoordRange);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TGaxis);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoord),sizeof(TParallelCoord),-1,324864,"To display parallel coordinates plots.",G__setup_memvarTParallelCoord,G__setup_memfuncTParallelCoord);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TParallelCoordcLcLdA);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TH1F);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TParallelCoordVarcLcLdA);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TParallelCoordRangecLcLdA);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TParallelCoordSelectcLcLdA);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TGHSlider);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TGDoubleHSlider);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TParallelCoordEditor),sizeof(TParallelCoordEditor),-1,62720,"GUI for editing the parallel coordinates plot attributes.",G__setup_memvarTParallelCoordEditor,G__setup_memfuncTParallelCoordEditor);
   G__get_linked_tagnum_fwd(&G__G__TreeViewerLN_TGTable);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreeViewerLN_TGTreeTable),sizeof(TGTreeTable),-1,62720,"A TGTable that owns it's TTreeTableIngeface.",G__setup_memvarTGTreeTable,G__setup_memfuncTGTreeTable);
}
extern "C" void G__cpp_setupG__TreeViewer(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__TreeViewer()");
  G__set_cpp_environmentG__TreeViewer();
  G__cpp_setup_tagtableG__TreeViewer();

  G__cpp_setup_inheritanceG__TreeViewer();

  G__cpp_setup_typetableG__TreeViewer();

  G__cpp_setup_memvarG__TreeViewer();

  G__cpp_setup_memfuncG__TreeViewer();
  G__cpp_setup_globalG__TreeViewer();
  G__cpp_setup_funcG__TreeViewer();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__TreeViewer();
  return;
}
class G__cpp_setup_initG__TreeViewer {
  public:
    G__cpp_setup_initG__TreeViewer() { G__add_setup_func("G__TreeViewer",(G__incsetup)(&G__cpp_setupG__TreeViewer)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__TreeViewer() { G__remove_setup_func("G__TreeViewer"); }
};
G__cpp_setup_initG__TreeViewer G__cpp_setup_initializerG__TreeViewer;

